,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.1,"DIAGNOSTIC          9.993911
HAVE_VERIFY         3.980510
HAVE_SEQUENCE       3.797664
#yes                0.808842
HAVE_REPLICATION    0.272946
dtype: float64","count     327.000000
mean      422.365249
std       643.026709
min         1.162459
25%        59.835483
50%        88.942478
75%       534.477964
max      4899.406003
Name: % error, dtype: float64",5
1,Lasso,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","Lasso(alpha=25, max_iter=1)",Performance,0.1,"Series([], dtype: float64)","count     327.000000
mean      579.303604
std       792.558556
min         2.278987
25%        50.782307
50%        79.578760
75%      1016.042969
max      2862.044951
Name: % error, dtype: float64",5
2,Ridge,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Ridge(alpha=25),Performance,0.1,"#yes                1.721814
DIAGNOSTIC          1.196843
HAVE_SEQUENCE       0.999607
HAVE_REPLICATION    0.432923
HAVE_VERIFY         0.202972
dtype: float64","count     327.000000
mean      402.717154
std       592.817824
min         5.385481
25%        53.585173
50%       118.359295
75%       591.066991
max      3834.897570
Name: % error, dtype: float64",5
3,ElasticNet,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","ElasticNet(alpha=25, l1_ratio=0.0, max_iter=10)",Performance,0.1,"#yes                0.324189
DIAGNOSTIC          0.081209
HAVE_SEQUENCE       0.072022
HAVE_VERIFY         0.042626
HAVE_REPLICATION    0.024009
dtype: float64","count     327.000000
mean      545.866676
std       742.781413
min         0.027957
25%        51.397934
50%        94.091053
75%       911.306301
max      2888.802869
Name: % error, dtype: float64",5
4,PolynomialRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.1,"HAVE_REPLICATION    123.875532
#yes                114.342403
HAVE_VERIFY          59.730310
HAVE_SEQUENCE        55.558919
DIAGNOSTIC           39.702262
dtype: float64","count     327.000000
mean      617.761331
std      1336.198366
min         0.024927
25%        50.359006
50%        95.486055
75%       535.124841
max      9939.104039
Name: % error, dtype: float64",5
5,RandomForest,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",RandomForestRegressor(),Performance,0.1,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     327.000000
mean      507.857494
std       879.729486
min         2.013861
25%        53.331664
50%        97.329337
75%       489.164710
max      6301.325111
Name: % error, dtype: float64",5
6,GradientBoostingTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.1,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     327.000000
mean      479.897540
std       914.186649
min         1.235783
25%        48.770499
50%        89.668454
75%       449.633923
max      6179.367765
Name: % error, dtype: float64",5
7,DecisionTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.1,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     327.000000
mean      483.409965
std       946.319729
min         0.014156
25%        45.881836
50%        85.054781
75%       437.064190
max      6218.017110
Name: % error, dtype: float64",5
8,LinearRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.2,"HAVE_REPLICATION    5.284993
DIAGNOSTIC          2.333230
#yes                1.816552
HAVE_SEQUENCE       1.089886
HAVE_VERIFY         0.016888
dtype: float64","count     291.000000
mean      540.345271
std       729.643512
min         0.110247
25%        55.381844
50%       174.536371
75%       867.964129
max      3999.134992
Name: % error, dtype: float64",5
9,Lasso,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","Lasso(alpha=0.3, max_iter=1)",Performance,0.2,"DIAGNOSTIC          6.410556
HAVE_REPLICATION    0.941392
HAVE_SEQUENCE       0.736748
HAVE_VERIFY         0.649876
#yes                0.257624
dtype: float64","count     291.000000
mean      571.639442
std       770.049486
min         1.252339
25%        54.479674
50%       187.614228
75%       914.931747
max      4274.678435
Name: % error, dtype: float64",5
10,Ridge,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Ridge(alpha=25),Performance,0.2,"HAVE_REPLICATION    1.472767
#yes                1.369108
DIAGNOSTIC          0.963029
HAVE_SEQUENCE       0.696080
HAVE_VERIFY         0.210338
dtype: float64","count     291.000000
mean      534.203148
std       730.814216
min         0.412075
25%        52.441383
50%       162.966014
75%       787.678189
max      3797.479473
Name: % error, dtype: float64",5
11,ElasticNet,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","ElasticNet(l1_ratio=0.0, max_iter=1)",Performance,0.2,"DIAGNOSTIC          1.233710
HAVE_SEQUENCE       0.887711
#yes                0.873793
HAVE_VERIFY         0.842390
HAVE_REPLICATION    0.512169
dtype: float64","count     291.000000
mean      550.784538
std       750.656524
min         3.507517
25%        48.343682
50%       159.714595
75%       844.538914
max      3749.289446
Name: % error, dtype: float64",5
12,PolynomialRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.2,"#yes                61.525661
HAVE_SEQUENCE       47.978998
HAVE_VERIFY         41.158086
HAVE_REPLICATION    34.196088
DIAGNOSTIC          25.564189
dtype: float64","count     291.000000
mean      610.513630
std      1077.135677
min         0.159363
25%        50.795486
50%       106.461567
75%       451.994301
max      6434.815283
Name: % error, dtype: float64",5
13,RandomForest,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",RandomForestRegressor(),Performance,0.2,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     291.000000
mean      534.458669
std       894.969109
min         1.903612
25%        49.600635
50%       102.359403
75%       529.501209
max      6099.673035
Name: % error, dtype: float64",5
14,GradientBoostingTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.2,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     291.000000
mean      514.723520
std       889.805909
min         0.970228
25%        49.063375
50%       108.509593
75%       419.224084
max      6322.456649
Name: % error, dtype: float64",5
15,DecisionTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.2,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     291.000000
mean      535.049765
std       935.430168
min         0.011425
25%        42.855537
50%        79.075416
75%       438.278285
max      6434.815283
Name: % error, dtype: float64",5
16,LinearRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.3,"HAVE_REPLICATION    7.129817
DIAGNOSTIC          4.083413
#yes                3.893400
HAVE_VERIFY         2.339007
HAVE_SEQUENCE       0.391740
dtype: float64","count     255.000000
mean      509.340846
std       754.710994
min         0.322408
25%        53.518143
50%       168.474022
75%       680.140218
max      3823.522416
Name: % error, dtype: float64",5
17,Lasso,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","Lasso(alpha=0.5, max_iter=100)",Performance,0.3,"#yes                1.639089
HAVE_REPLICATION    0.686675
dtype: float64","count     255.000000
mean      531.959279
std       761.422016
min         2.024304
25%        49.240750
50%       166.992526
75%       749.891872
max      3857.157336
Name: % error, dtype: float64",5
18,Ridge,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Ridge(alpha=25),Performance,0.3,"#yes                1.883737
HAVE_REPLICATION    1.715706
HAVE_VERIFY         0.312377
DIAGNOSTIC          0.203706
HAVE_SEQUENCE       0.169108
dtype: float64","count     255.000000
mean      531.356275
std       757.283006
min         5.623601
25%        50.439260
50%       166.796377
75%       731.833495
max      3854.250161
Name: % error, dtype: float64",5
19,ElasticNet,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","ElasticNet(alpha=0.5, l1_ratio=1.0, max_iter=100)",Performance,0.3,"#yes                1.639089
HAVE_REPLICATION    0.686675
dtype: float64","count     255.000000
mean      531.959279
std       761.422016
min         2.024304
25%        49.240750
50%       166.992526
75%       749.891872
max      3857.157336
Name: % error, dtype: float64",5
20,PolynomialRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.3,"#yes                50.306339
HAVE_VERIFY         34.530867
HAVE_SEQUENCE       29.890102
HAVE_REPLICATION    27.929628
DIAGNOSTIC          12.222249
dtype: float64","count     255.000000
mean      509.254651
std       864.185436
min         2.205008
25%        40.702357
50%        88.921860
75%       542.860786
max      4816.999670
Name: % error, dtype: float64",5
21,RandomForest,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",RandomForestRegressor(),Performance,0.3,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     255.000000
mean      504.147143
std       862.211992
min         1.050569
25%        37.715934
50%        93.377835
75%       502.400414
max      4909.165290
Name: % error, dtype: float64",5
22,GradientBoostingTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.3,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     255.000000
mean      477.889336
std       858.190113
min         0.482370
25%        39.733031
50%        89.378534
75%       478.065821
max      4986.768011
Name: % error, dtype: float64",5
23,DecisionTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.3,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     255.000000
mean      470.145226
std       861.752267
min         0.011425
25%        30.053343
50%        70.028106
75%       472.498034
max      5026.991802
Name: % error, dtype: float64",5
24,LinearRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.4,"DIAGNOSTIC          5.431684
HAVE_REPLICATION    4.908959
#yes                3.653279
HAVE_VERIFY         2.339088
HAVE_SEQUENCE       2.108098
dtype: float64","count     218.000000
mean      534.417520
std       837.571987
min         2.514376
25%        53.025045
50%       192.088137
75%       713.647790
max      4562.498736
Name: % error, dtype: float64",5
25,Lasso,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","Lasso(alpha=0.8, max_iter=10)",Performance,0.4,"#yes    1.731845
dtype: float64","count     218.000000
mean      549.806500
std       807.030669
min         3.663326
25%        47.946142
50%       182.900811
75%       729.680891
max      4087.030756
Name: % error, dtype: float64",5
26,Ridge,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Ridge(alpha=25),Performance,0.4,"#yes                2.109677
HAVE_REPLICATION    1.321414
HAVE_SEQUENCE       1.283177
DIAGNOSTIC          1.043507
HAVE_VERIFY         0.505189
dtype: float64","count     218.000000
mean      549.502889
std       815.726093
min         3.000528
25%        50.944631
50%       200.968956
75%       730.839545
max      4157.862603
Name: % error, dtype: float64",5
27,ElasticNet,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","ElasticNet(alpha=0.8, l1_ratio=1.0, max_iter=10)",Performance,0.4,"#yes    1.731845
dtype: float64","count     218.000000
mean      549.806500
std       807.030669
min         3.663326
25%        47.946142
50%       182.900811
75%       729.680891
max      4087.030756
Name: % error, dtype: float64",5
28,PolynomialRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.4,"#yes                39.009436
HAVE_VERIFY         21.262978
DIAGNOSTIC          20.504882
HAVE_REPLICATION    18.310807
HAVE_SEQUENCE       13.374514
dtype: float64","count     218.000000
mean      539.472918
std       949.151537
min         4.780269
25%        49.642539
50%       168.093658
75%       532.469294
max      4542.014825
Name: % error, dtype: float64",5
29,RandomForest,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",RandomForestRegressor(),Performance,0.4,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     218.000000
mean      494.973078
std       956.502061
min         1.023547
25%        41.654071
50%        80.617677
75%       462.633237
max      4819.711450
Name: % error, dtype: float64",5
30,GradientBoostingTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.4,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     218.000000
mean      496.264374
std       956.753135
min         1.710355
25%        42.530960
50%        79.742912
75%       477.220406
max      4688.429408
Name: % error, dtype: float64",5
31,DecisionTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.4,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     218.000000
mean      493.335144
std       963.138124
min         0.081445
25%        29.988891
50%        72.260395
75%       477.042443
max      4687.595768
Name: % error, dtype: float64",5
32,LinearRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.5,"HAVE_VERIFY         6.384589
HAVE_REPLICATION    5.811457
DIAGNOSTIC          5.289842
#yes                4.665218
HAVE_SEQUENCE       0.590341
dtype: float64","count     182.000000
mean      506.027585
std       758.944764
min         0.613357
25%        48.094690
50%       195.146012
75%       631.798789
max      3559.153973
Name: % error, dtype: float64",5
33,Lasso,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Lasso(max_iter=1),Performance,0.5,"HAVE_SEQUENCE    2.051855
#yes             1.307479
dtype: float64","count     182.000000
mean      567.896819
std       788.471065
min         1.154948
25%        49.265764
50%       191.200396
75%       771.785874
max      4149.236171
Name: % error, dtype: float64",5
34,Ridge,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Ridge(alpha=25),Performance,0.5,"#yes                2.546008
HAVE_VERIFY         2.332672
HAVE_REPLICATION    1.866409
DIAGNOSTIC          1.269780
HAVE_SEQUENCE       1.058630
dtype: float64","count     182.000000
mean      536.422714
std       755.137557
min         1.952208
25%        49.023631
50%       222.543516
75%       760.286332
max      4030.557126
Name: % error, dtype: float64",5
35,ElasticNet,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","ElasticNet(alpha=0.2, l1_ratio=0.0, max_iter=100)",Performance,0.5,"#yes                2.302168
HAVE_VERIFY         1.802022
HAVE_REPLICATION    1.400407
HAVE_SEQUENCE       0.978674
DIAGNOSTIC          0.884421
dtype: float64","count     182.000000
mean      539.892794
std       755.654946
min         2.645844
25%        49.971610
50%       216.647887
75%       756.055075
max      4059.675820
Name: % error, dtype: float64",5
36,PolynomialRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.5,"#yes                42.736022
HAVE_SEQUENCE       25.521789
HAVE_REPLICATION    23.639176
HAVE_VERIFY         23.005446
DIAGNOSTIC          20.940063
dtype: float64","count     182.000000
mean      498.879094
std       819.583917
min         7.909621
25%        47.191355
50%       170.169869
75%       507.685534
max      3943.053022
Name: % error, dtype: float64",5
37,RandomForest,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",RandomForestRegressor(),Performance,0.5,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     182.000000
mean      478.051083
std       856.471614
min         0.476430
25%        34.097374
50%        77.467917
75%       512.474316
max      4505.040847
Name: % error, dtype: float64",5
38,GradientBoostingTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.5,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     182.000000
mean      476.759739
std       860.800970
min        10.430611
25%        37.646595
50%        86.303173
75%       530.155099
max      4420.717740
Name: % error, dtype: float64",5
39,DecisionTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.5,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     182.000000
mean      470.036211
std       861.379645
min         0.376180
25%        29.903976
50%        66.200588
75%       525.739395
max      4451.490562
Name: % error, dtype: float64",5
40,LinearRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.6,"HAVE_REPLICATION    6.903709
HAVE_VERIFY         5.729292
DIAGNOSTIC          5.641356
#yes                4.917150
HAVE_SEQUENCE       0.885482
dtype: float64","count     146.000000
mean      495.536411
std       732.250025
min         0.976640
25%        51.158813
50%       202.694949
75%       633.498188
max      3579.193462
Name: % error, dtype: float64",5
41,Lasso,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","Lasso(alpha=0.8, max_iter=5)",Performance,0.6,"#yes    1.588292
dtype: float64","count     146.000000
mean      537.814231
std       739.058974
min         2.338041
25%        47.454758
50%       183.784841
75%       767.964322
max      3941.142388
Name: % error, dtype: float64",5
42,Ridge,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Ridge(alpha=10),Performance,0.6,"HAVE_REPLICATION    4.225596
#yes                3.510401
HAVE_VERIFY         3.465300
DIAGNOSTIC          2.911852
HAVE_SEQUENCE       0.038954
dtype: float64","count     146.000000
mean      515.846455
std       727.805803
min         0.629344
25%        49.119547
50%       221.264252
75%       757.260027
max      3679.911704
Name: % error, dtype: float64",5
43,ElasticNet,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","ElasticNet(alpha=0.1, l1_ratio=0.0, max_iter=100)",Performance,0.6,"HAVE_REPLICATION    2.900486
#yes                2.853294
HAVE_VERIFY         2.367441
DIAGNOSTIC          1.758035
HAVE_SEQUENCE       0.243686
dtype: float64","count     146.000000
mean      524.683097
std       731.426873
min         0.776085
25%        49.164806
50%       213.522684
75%       753.252946
max      3816.542003
Name: % error, dtype: float64",5
44,PolynomialRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.6,"#yes                48.035042
HAVE_SEQUENCE       33.028230
HAVE_REPLICATION    29.596910
HAVE_VERIFY         28.466258
DIAGNOSTIC          26.408647
dtype: float64","count     146.000000
mean      466.538295
std       755.320661
min         1.824709
25%        47.237840
50%       136.181077
75%       565.442962
max      3624.730036
Name: % error, dtype: float64",5
45,RandomForest,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",RandomForestRegressor(),Performance,0.6,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     146.000000
mean      439.899430
std       767.641983
min         0.171276
25%        31.295692
50%        67.167229
75%       520.656042
max      4087.974991
Name: % error, dtype: float64",5
46,GradientBoostingTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.6,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     146.000000
mean      446.270131
std       768.189460
min         3.441397
25%        35.960556
50%        77.389972
75%       525.576773
max      3912.780505
Name: % error, dtype: float64",5
47,DecisionTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.6,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     146.000000
mean      438.438882
std       771.479815
min         0.376180
25%        28.159531
50%        64.747467
75%       523.092698
max      3967.305033
Name: % error, dtype: float64",5
48,LinearRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.7,"HAVE_REPLICATION    7.363967
DIAGNOSTIC          6.387940
HAVE_VERIFY         6.100721
#yes                5.205210
HAVE_SEQUENCE       0.816385
dtype: float64","count     109.000000
mean      530.465254
std       802.244439
min         2.178512
25%        49.748684
50%       151.257147
75%       694.562439
max      3664.994840
Name: % error, dtype: float64",5
49,Lasso,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.7,"HAVE_REPLICATION    5.828899
HAVE_VERIFY         4.596618
DIAGNOSTIC          4.539273
#yes                4.286146
dtype: float64","count     109.000000
mean      542.815847
std       796.129626
min         1.054240
25%        49.248489
50%       221.736214
75%       759.179057
max      3582.933998
Name: % error, dtype: float64",5
50,Ridge,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Ridge(alpha=4),Performance,0.7,"HAVE_REPLICATION    6.039911
HAVE_VERIFY         4.993295
DIAGNOSTIC          4.916677
#yes                4.507354
HAVE_SEQUENCE       0.377204
dtype: float64","count     109.000000
mean      538.222214
std       795.213492
min         1.058920
25%        48.164602
50%       221.124529
75%       722.701099
max      3517.774011
Name: % error, dtype: float64",5
51,ElasticNet,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","ElasticNet(alpha=0.05, max_iter=100)",Performance,0.7,"HAVE_REPLICATION    5.187028
HAVE_VERIFY         4.222124
#yes                4.032149
DIAGNOSTIC          3.982371
dtype: float64","count     109.000000
mean      544.130382
std       794.186042
min         0.138445
25%        48.685331
50%       221.950045
75%       767.131211
max      3651.240983
Name: % error, dtype: float64",5
52,PolynomialRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.7,"#yes                36.268729
HAVE_SEQUENCE       26.704439
HAVE_VERIFY         22.225861
HAVE_REPLICATION    18.645048
DIAGNOSTIC          13.769117
dtype: float64","count     109.000000
mean      516.264632
std       838.073609
min         0.549517
25%        43.351676
50%       144.242262
75%       643.035903
max      3977.678240
Name: % error, dtype: float64",5
53,RandomForest,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",RandomForestRegressor(),Performance,0.7,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     109.000000
mean      497.363073
std       859.258682
min         1.072862
25%        32.482059
50%       113.859624
75%       589.795172
max      4165.382639
Name: % error, dtype: float64",5
54,GradientBoostingTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.7,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     109.000000
mean      510.425718
std       879.240169
min         0.046165
25%        34.490292
50%       118.420193
75%       604.587287
max      4180.412722
Name: % error, dtype: float64",5
55,DecisionTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.7,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count     109.000000
mean      497.717790
std       882.368386
min         0.376180
25%        30.151849
50%        72.784193
75%       599.955005
max      4200.388598
Name: % error, dtype: float64",5
56,LinearRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.8,"HAVE_REPLICATION    6.245020
DIAGNOSTIC          5.868489
HAVE_VERIFY         5.161709
#yes                4.974407
HAVE_SEQUENCE       1.528574
dtype: float64","count      73.000000
mean      415.039281
std       617.289812
min         0.518716
25%        45.977476
50%       124.559357
75%       547.289665
max      3296.041106
Name: % error, dtype: float64",5
57,Lasso,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","Lasso(alpha=0.1, max_iter=10)",Performance,0.8,"HAVE_REPLICATION    4.505650
#yes                3.710738
DIAGNOSTIC          3.686795
HAVE_VERIFY         2.933562
dtype: float64","count      73.000000
mean      436.268370
std       599.357683
min         0.134837
25%        41.493943
50%       151.590159
75%       689.437563
max      2940.029145
Name: % error, dtype: float64",5
58,Ridge,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Ridge(alpha=4),Performance,0.8,"HAVE_REPLICATION    5.194551
DIAGNOSTIC          4.654523
#yes                4.393539
HAVE_VERIFY         4.277496
HAVE_SEQUENCE       1.109026
dtype: float64","count      73.000000
mean      424.354505
std       606.968674
min         0.353377
25%        45.175911
50%       156.132633
75%       578.944238
max      3131.717703
Name: % error, dtype: float64",5
59,ElasticNet,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=100)",Performance,0.8,"HAVE_REPLICATION    4.829890
DIAGNOSTIC          4.246698
#yes                4.193961
HAVE_VERIFY         3.970446
HAVE_SEQUENCE       0.969164
dtype: float64","count      73.000000
mean      427.539355
std       604.421834
min         0.957127
25%        45.316317
50%       151.621509
75%       591.530275
max      3075.317465
Name: % error, dtype: float64",5
60,PolynomialRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.8,"#yes                37.899165
HAVE_SEQUENCE       29.378105
HAVE_VERIFY         26.227528
HAVE_REPLICATION    21.006963
DIAGNOSTIC          18.230386
dtype: float64","count      73.000000
mean      407.356565
std       643.964833
min         5.283754
25%        34.029938
50%       103.773377
75%       579.227925
max      3190.534252
Name: % error, dtype: float64",5
61,RandomForest,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",RandomForestRegressor(),Performance,0.8,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count      73.000000
mean      384.205363
std       650.440223
min         1.493520
25%        23.102018
50%        68.130211
75%       509.011199
max      3316.783389
Name: % error, dtype: float64",5
62,GradientBoostingTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.8,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count      73.000000
mean      386.413582
std       646.092688
min         4.033912
25%        28.779543
50%        73.445608
75%       508.874342
max      3322.741379
Name: % error, dtype: float64",5
63,DecisionTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.8,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count      73.000000
mean      376.662605
std       651.636180
min         0.376180
25%        25.654272
50%        64.266951
75%       538.429719
max      3311.654465
Name: % error, dtype: float64",5
64,LinearRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.9,"DIAGNOSTIC          5.521740
HAVE_VERIFY         5.131799
HAVE_REPLICATION    5.008678
#yes                4.750393
HAVE_SEQUENCE       1.989487
dtype: float64","count      37.000000
mean      367.781666
std       449.190108
min         7.488172
25%        46.702503
50%        98.127393
75%       526.428649
max      1742.442991
Name: % error, dtype: float64",5
65,Lasso,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","Lasso(alpha=0.02, max_iter=100)",Performance,0.9,"DIAGNOSTIC          5.159035
HAVE_VERIFY         4.791895
HAVE_REPLICATION    4.703071
#yes                4.545685
HAVE_SEQUENCE       1.743389
dtype: float64","count      37.000000
mean      371.306645
std       450.770900
min         5.515336
25%        46.720957
50%       135.373200
75%       537.307733
max      1769.281271
Name: % error, dtype: float64",5
66,Ridge,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",Ridge(alpha=4),Performance,0.9,"DIAGNOSTIC          4.537935
HAVE_VERIFY         4.325585
#yes                4.264668
HAVE_REPLICATION    4.213521
HAVE_SEQUENCE       1.591667
dtype: float64","count      37.000000
mean      376.500741
std       453.686463
min         2.969815
25%        48.006296
50%       135.224987
75%       553.421553
max      1786.557457
Name: % error, dtype: float64",5
67,ElasticNet,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=100)",Performance,0.9,"DIAGNOSTIC          4.070486
#yes                4.029702
HAVE_VERIFY         3.932817
HAVE_REPLICATION    3.827920
HAVE_SEQUENCE       1.401606
dtype: float64","count      37.000000
mean      380.702749
std       456.970141
min         0.792988
25%        47.783709
50%       135.738357
75%       564.981259
max      1807.802776
Name: % error, dtype: float64",5
68,PolynomialRegression,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",LinearRegression(),Performance,0.9,"#yes                38.558221
HAVE_SEQUENCE       27.319823
HAVE_REPLICATION    25.022567
HAVE_VERIFY         24.217631
DIAGNOSTIC          21.511488
dtype: float64","count      37.000000
mean      386.471284
std       515.391855
min         2.846585
25%        37.653924
50%        91.646934
75%       570.469494
max      1842.501085
Name: % error, dtype: float64",5
69,RandomForest,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",RandomForestRegressor(),Performance,0.9,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count      37.000000
mean      314.404169
std       410.261679
min         4.047309
25%        30.316761
50%        77.152286
75%       576.949161
max      1664.701210
Name: % error, dtype: float64",5
70,GradientBoostingTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.9,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count      37.000000
mean      322.302921
std       411.027354
min         4.786586
25%        32.197371
50%        81.674552
75%       568.088978
max      1707.631271
Name: % error, dtype: float64",5
71,DecisionTree,False,DecisionTree,"Index(['DIAGNOSTIC', 'HAVE_VERIFY', 'HAVE_SEQUENCE', '#yes',
       'HAVE_REPLICATION'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.9,"DIAGNOSTIC         NaN
HAVE_VERIFY        NaN
HAVE_SEQUENCE      NaN
#yes               NaN
HAVE_REPLICATION   NaN
Name: % error, dtype: float64","count      37.000000
mean      299.528428
std       419.284815
min         0.376180
25%        27.075591
50%        64.436168
75%       579.601992
max      1676.332525
Name: % error, dtype: float64",5
