,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.1,"post_6      2.348107e+17
post_2      2.348107e+17
post_3      2.348107e+17
post_5      2.348107e+17
post_4      2.348107e+17
post_1      2.348107e+17
post_0      2.348107e+17
cells_50    2.504000e+03
dtype: float64","count    964.000000
mean      16.688102
std       16.546402
min        0.016354
25%        5.243457
50%       11.003361
75%       23.215180
max      119.427897
Name: % error, dtype: float64",8
1,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=10, max_iter=100)",Performance,0.1,"post_0      6054.183545
post_1      4056.950454
cells_50    2414.764892
post_6      1214.291807
post_2       567.903551
post_5       195.052467
dtype: float64","count    964.000000
mean      16.415632
std       16.492453
min        0.008045
25%        5.057630
50%       10.875220
75%       22.580681
max      119.214838
Name: % error, dtype: float64",8
2,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=0.8),Performance,0.1,"post_0      4676.607248
post_1      2785.064795
cells_50    2386.443751
post_6      2382.585247
post_2      1762.004773
post_5      1412.144412
post_3      1167.824186
post_4       737.113425
dtype: float64","count    964.000000
mean      16.368568
std       16.387285
min        0.007708
25%        4.890557
50%       10.794007
75%       22.830867
max      117.089082
Name: % error, dtype: float64",8
3,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0, max_iter=5)",Performance,0.1,"post_0      3802.570209
post_6      3258.560815
post_2      2576.304013
cells_50    2342.500073
post_5      2275.555061
post_3      2038.541392
post_1      1922.911941
post_4      1359.194085
dtype: float64","count    964.000000
mean      16.378770
std       16.370269
min        0.010573
25%        5.095745
50%       10.971548
75%       22.757178
max      116.734661
Name: % error, dtype: float64",8
4,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.1,"post_6      1.918264e+17
post_5      1.680401e+17
post_2      5.942811e+16
post_1      3.185562e+16
post_4      2.509004e+16
post_0      1.562430e+16
post_3      5.117904e+15
cells_50    8.116671e+14
dtype: float64","count    9.640000e+02
mean     8.705038e+12
std      5.579993e+13
min      8.942569e-03
25%      4.728686e+00
50%      1.049604e+01
75%      2.530694e+01
max      6.649647e+14
Name: % error, dtype: float64",8
5,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.1,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    964.000000
mean      16.478286
std       16.662653
min        0.005033
25%        5.003883
50%       10.795714
75%       21.885989
max      115.366709
Name: % error, dtype: float64",8
6,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.1,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    964.000000
mean      16.264989
std       16.533219
min        0.004856
25%        5.099557
50%       10.467534
75%       22.141921
max      119.270453
Name: % error, dtype: float64",8
7,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.1,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    964.000000
mean      16.231327
std       16.583457
min        0.005060
25%        5.139959
50%       10.551009
75%       22.267548
max      119.325924
Name: % error, dtype: float64",8
8,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.2,"post_0      9.728981e+16
post_1      9.728981e+16
post_4      9.728981e+16
post_3      9.728981e+16
post_2      9.728981e+16
post_5      9.728981e+16
post_6      9.728981e+16
cells_50    2.032000e+03
dtype: float64","count    857.000000
mean      16.020091
std       15.779484
min        0.004442
25%        5.141172
50%       10.907448
75%       21.204874
max      106.961687
Name: % error, dtype: float64",8
9,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.2,"post_0      4918.940833
post_1      3914.954838
cells_50    1806.577121
post_6      1159.887111
post_5       517.350588
dtype: float64","count    857.000000
mean      15.699543
std       15.809585
min        0.010107
25%        4.638420
50%       10.557386
75%       21.402085
max      103.956684
Name: % error, dtype: float64",8
10,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=4),Performance,0.2,"post_0      3552.234981
post_1      2690.734036
post_6      2160.972472
cells_50    1795.050865
post_5      1577.027014
post_2      1029.392030
post_3      1019.597350
post_4       455.980151
dtype: float64","count    857.000000
mean      15.633697
std       15.748359
min        0.046445
25%        4.694610
50%       10.403633
75%       21.257910
max      102.029753
Name: % error, dtype: float64",8
11,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.05, max_iter=10)",Performance,0.2,"post_0      3382.865879
post_1      2570.962743
post_6      2148.169843
cells_50    1731.815602
post_5      1572.693335
post_3      1040.275555
post_2      1021.229197
post_4       453.121689
dtype: float64","count    857.000000
mean      15.611542
std       15.764079
min        0.013172
25%        4.902842
50%       10.471194
75%       21.454159
max      100.869359
Name: % error, dtype: float64",8
12,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.2,"post_2      1.530172e+18
post_0      9.632357e+17
post_5      5.751236e+17
post_1      5.669547e+17
cells_50    5.652218e+17
post_3      5.138669e+17
post_4      4.106522e+17
post_6      1.371271e+17
dtype: float64","count    8.570000e+02
mean     3.271903e+13
std      1.974612e+14
min      5.490854e-02
25%      7.845845e+00
50%      1.487023e+01
75%      2.566599e+01
max      2.221939e+15
Name: % error, dtype: float64",8
13,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.2,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    857.000000
mean      16.427626
std       17.197875
min        0.033540
25%        4.683393
50%       10.930548
75%       21.341600
max      122.939733
Name: % error, dtype: float64",8
14,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.2,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    857.000000
mean      16.202670
std       17.493628
min        0.041035
25%        4.344204
50%       10.186961
75%       21.290085
max      127.317944
Name: % error, dtype: float64",8
15,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.2,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    857.000000
mean      16.421632
std       17.288689
min        0.014156
25%        4.581141
50%       10.664013
75%       21.917717
max      127.410094
Name: % error, dtype: float64",8
16,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.3,"post_0      4301.868246
post_1      2859.565726
post_6      2345.817258
cells_50    2016.152375
post_5      1700.456346
post_2      1109.528938
post_3      1017.305703
post_4       988.325727
dtype: float64","count    750.000000
mean      15.554258
std       15.682854
min        0.000127
25%        4.901300
50%       10.509434
75%       20.419399
max      107.346336
Name: % error, dtype: float64",8
17,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.3,"post_0      5187.747668
post_1      3795.828843
cells_50    1841.696349
post_6      1167.642652
post_5       455.919757
dtype: float64","count    750.000000
mean      15.399827
std       15.662406
min        0.062496
25%        4.292467
50%       10.669153
75%       20.663230
max      104.767012
Name: % error, dtype: float64",8
18,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=2),Performance,0.3,"post_0      4117.110934
post_1      2764.181361
post_6      2284.543311
cells_50    1952.046719
post_5      1633.374343
post_2      1061.286013
post_3       991.512085
post_4       910.576542
dtype: float64","count    750.000000
mean      15.379382
std       15.675497
min        0.009763
25%        4.606124
50%       10.085385
75%       20.536708
max      104.924134
Name: % error, dtype: float64",8
19,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0, max_iter=100)",Performance,0.3,"post_0      4013.235196
post_1      2710.017512
post_6      2248.473532
cells_50    1914.576677
post_5      1594.899126
post_2      1033.609315
post_3       975.999635
post_4       870.272901
dtype: float64","count    750.000000
mean      15.311927
std       15.660213
min        0.007863
25%        4.586386
50%       10.018537
75%       20.613601
max      103.554285
Name: % error, dtype: float64",8
20,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.3,"cells_50    8.837629e+17
post_4      2.515028e+17
post_6      2.405503e+17
post_3      9.358925e+16
post_2      8.964238e+16
post_5      6.972762e+16
post_0      3.181235e+16
post_1      3.413400e+15
dtype: float64","count    750.000000
mean      16.167327
std       16.900735
min        0.025265
25%        4.832259
50%       11.058695
75%       20.897996
max      117.555108
Name: % error, dtype: float64",8
21,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.3,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    750.000000
mean      16.126546
std       17.630574
min        0.005399
25%        4.561773
50%       10.658072
75%       21.356074
max      130.105260
Name: % error, dtype: float64",8
22,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.3,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    750.000000
mean      15.919148
std       17.245888
min        0.002287
25%        4.493986
50%       10.452254
75%       21.120669
max      124.116688
Name: % error, dtype: float64",8
23,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.3,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    750.000000
mean      15.939366
std       17.246723
min        0.001834
25%        4.505363
50%       10.472149
75%       21.151681
max      124.312407
Name: % error, dtype: float64",8
24,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.4,"post_6      2.700187e+16
post_5      2.700187e+16
post_2      2.700187e+16
post_3      2.700187e+16
post_4      2.700187e+16
post_1      2.700187e+16
post_0      2.700187e+16
cells_50    2.081000e+03
dtype: float64","count    643.000000
mean      16.247327
std       16.347807
min        0.024563
25%        5.239487
50%       11.291840
75%       21.268063
max      123.780792
Name: % error, dtype: float64",8
25,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.4,"post_0      6448.552730
post_1      4061.862729
cells_50    1872.397862
post_6      1018.860007
post_5       481.486994
dtype: float64","count    643.000000
mean      16.000003
std       16.260745
min        0.008507
25%        4.561209
50%       11.129159
75%       21.997054
max      121.039932
Name: % error, dtype: float64",8
26,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=4),Performance,0.4,"post_0      4964.842658
post_1      2733.934939
post_6      2350.739226
cells_50    1972.450066
post_5      1858.555469
post_2      1310.931585
post_3      1245.565821
post_4       932.985495
dtype: float64","count    643.000000
mean      15.879637
std       16.177681
min        0.017135
25%        4.854538
50%       10.853375
75%       21.191041
max      119.117207
Name: % error, dtype: float64",8
27,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.1, max_iter=100)",Performance,0.4,"post_0      4675.137475
post_1      2619.521836
post_6      2262.918934
cells_50    1884.394667
post_5      1761.789573
post_2      1231.369552
post_3      1196.460511
post_4       841.814874
dtype: float64","count    643.000000
mean      15.688841
std       16.051354
min        0.008393
25%        4.701629
50%       10.591691
75%       21.102343
max      115.238339
Name: % error, dtype: float64",8
28,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.4,"cells_50    3.976757e+17
post_1      1.937267e+17
post_5      6.113050e+16
post_2      3.740956e+16
post_3      2.677805e+16
post_6      2.668746e+16
post_0      1.885604e+16
post_4      6.216055e+14
dtype: float64","count    643.000000
mean      16.747484
std       17.150408
min        0.005233
25%        5.151689
50%       11.050966
75%       22.008785
max      124.383904
Name: % error, dtype: float64",8
29,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.4,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    643.000000
mean      16.174427
std       16.629616
min        0.015689
25%        4.908274
50%       10.694161
75%       21.907244
max      124.833535
Name: % error, dtype: float64",8
30,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.4,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    643.000000
mean      16.228232
std       16.733689
min        0.006696
25%        4.855870
50%       10.751706
75%       22.167809
max      126.039526
Name: % error, dtype: float64",8
31,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.4,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    643.000000
mean      16.250304
std       16.727361
min        0.005937
25%        4.751067
50%       10.769835
75%       22.145773
max      126.132648
Name: % error, dtype: float64",8
32,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.5,"post_0      7.997735e+13
post_1      7.997735e+13
post_4      7.997735e+13
post_2      7.997735e+13
post_3      7.997735e+13
post_5      7.997735e+13
post_6      7.997735e+13
cells_50    1.948781e+03
dtype: float64","count    536.000000
mean      16.656161
std       16.612741
min        0.029725
25%        5.012267
50%       11.536320
75%       23.406294
max      131.184689
Name: % error, dtype: float64",8
33,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.5,"post_0      7005.819275
post_1      3745.995662
cells_50    1788.022697
post_6       958.794889
post_5       460.124708
dtype: float64","count    536.000000
mean      16.431594
std       16.498416
min        0.022268
25%        4.701282
50%       11.232389
75%       23.393724
max      128.296442
Name: % error, dtype: float64",8
34,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.5,"post_0      5088.486847
post_1      2286.434175
post_6      2240.452182
cells_50    1783.151610
post_5      1769.754503
post_3      1265.837546
post_2      1171.179292
post_4       927.697500
dtype: float64","count    536.000000
mean      16.003675
std       16.233266
min        0.013585
25%        4.715273
50%       10.342929
75%       23.446039
max      121.054741
Name: % error, dtype: float64",8
35,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.5,"post_0      4721.679013
post_6      2656.373173
post_5      2152.247698
post_1      1923.018754
cells_50    1771.753560
post_3      1639.497538
post_2      1519.950494
post_4      1202.117667
dtype: float64","count    536.000000
mean      16.049604
std       16.216101
min        0.036566
25%        4.945264
50%       10.659228
75%       23.304843
max      121.102825
Name: % error, dtype: float64",8
36,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.5,"cells_50    2.864074e+17
post_3      9.029518e+16
post_4      8.628928e+16
post_1      7.728210e+16
post_2      5.613244e+16
post_5      5.278367e+16
post_0      2.447664e+16
post_6      2.388522e+16
dtype: float64","count    536.000000
mean      16.896469
std       17.240831
min        0.007265
25%        5.016654
50%       11.232169
75%       24.406161
max      130.546136
Name: % error, dtype: float64",8
37,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.5,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    536.000000
mean      16.764938
std       17.404967
min        0.001463
25%        4.495616
50%       10.894642
75%       24.114957
max      135.369259
Name: % error, dtype: float64",8
38,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.5,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    536.000000
mean      16.654747
std       17.284634
min        0.019133
25%        4.601965
50%       11.054486
75%       24.164057
max      132.162949
Name: % error, dtype: float64",8
39,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.5,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    536.000000
mean      16.662829
std       17.281043
min        0.000683
25%        4.579485
50%       11.083538
75%       24.121168
max      132.238246
Name: % error, dtype: float64",8
40,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.6,"post_6      1.371497e+17
post_5      1.371497e+17
post_2      1.371497e+17
post_3      1.371497e+17
post_4      1.371497e+17
post_1      1.371497e+17
post_0      1.371497e+17
cells_50    2.112000e+03
dtype: float64","count    429.000000
mean      17.470197
std       17.423700
min        0.080596
25%        5.522981
50%       12.085460
75%       25.378066
max      135.580811
Name: % error, dtype: float64",8
41,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.6,"post_0      7380.732453
post_1      3826.906123
cells_50    1976.985599
post_6       982.004729
post_5       381.066499
dtype: float64","count    429.000000
mean      16.936250
std       17.216560
min        0.015220
25%        4.653955
50%       11.396895
75%       24.562795
max      133.640417
Name: % error, dtype: float64",8
42,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.6,"post_0      5473.404168
post_6      2358.545293
post_1      2326.916815
cells_50    1977.512851
post_5      1796.605654
post_3      1351.981837
post_2      1270.427237
post_4      1022.760961
dtype: float64","count    429.000000
mean      16.506034
std       16.853262
min        0.007365
25%        4.718726
50%       10.814627
75%       24.650196
max      127.456078
Name: % error, dtype: float64",8
43,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.05, max_iter=5)",Performance,0.6,"post_0      4913.928123
post_6      2580.705869
post_5      1987.377056
post_1      1972.068107
cells_50    1884.285962
post_3      1557.562718
post_2      1453.540876
post_4      1101.459804
dtype: float64","count    429.000000
mean      16.265948
std       16.656553
min        0.043635
25%        4.634721
50%       10.587996
75%       24.517666
max      123.430607
Name: % error, dtype: float64",8
44,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.6,"post_4      1.722326e+17
post_6      4.620234e+16
post_3      3.837783e+16
post_0      3.527244e+16
post_2      2.408912e+16
post_1      2.186862e+16
post_5      2.043244e+16
cells_50    8.862617e+15
dtype: float64","count    429.000000
mean      17.569146
std       17.844718
min        0.012553
25%        4.975448
50%       11.434657
75%       26.078435
max      140.091040
Name: % error, dtype: float64",8
45,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.6,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    429.000000
mean      17.234238
std       17.836314
min        0.005579
25%        4.517273
50%       11.034773
75%       26.330887
max      140.166941
Name: % error, dtype: float64",8
46,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.6,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    429.000000
mean      17.214341
std       17.831197
min        0.009555
25%        4.461470
50%       10.814872
75%       25.975466
max      138.960819
Name: % error, dtype: float64",8
47,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.6,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    429.000000
mean      17.225089
std       17.829832
min        0.013881
25%        4.513472
50%       10.821118
75%       25.981973
max      139.058452
Name: % error, dtype: float64",8
48,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.7,"post_0      5.007219e+15
post_1      5.007219e+15
post_2      5.007219e+15
post_4      5.007219e+15
post_3      5.007219e+15
post_5      5.007219e+15
post_6      5.007219e+15
cells_50    2.154500e+03
dtype: float64","count    322.000000
mean      17.168148
std       17.636694
min        0.011720
25%        5.094343
50%       11.335490
75%       24.693736
max      133.823919
Name: % error, dtype: float64",8
49,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.7,"post_0      7130.500807
post_1      3651.618225
cells_50    1985.348784
post_6       962.309307
post_5       361.567706
dtype: float64","count    322.000000
mean      16.877962
std       17.465919
min        0.000421
25%        4.469543
50%       11.340224
75%       24.754910
max      130.778150
Name: % error, dtype: float64",8
50,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.7,"post_0      5383.780145
post_6      2308.624140
post_1      2246.442975
cells_50    1995.696295
post_5      1748.906144
post_3      1366.288135
post_2      1156.040265
post_4      1050.364436
dtype: float64","count    322.000000
mean      16.584299
std       17.226433
min        0.017873
25%        4.488369
50%       10.728359
75%       23.782269
max      125.952158
Name: % error, dtype: float64",8
51,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.7,"post_0      4827.922799
post_6      2655.693284
post_5      2072.795469
cells_50    1925.002431
post_1      1833.674911
post_3      1685.038719
post_2      1455.359186
post_4      1237.725624
dtype: float64","count    322.000000
mean      16.434031
std       17.120239
min        0.021165
25%        4.383776
50%       10.863913
75%       24.064705
max      123.264374
Name: % error, dtype: float64",8
52,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.7,"cells_50    1.516983e+17
post_3      1.145102e+17
post_6      7.362560e+16
post_5      5.528586e+16
post_4      5.405337e+16
post_2      2.060650e+16
post_1      1.178256e+16
post_0      2.406839e+15
dtype: float64","count    322.000000
mean      18.014794
std       18.274125
min        0.020356
25%        5.565265
50%       11.983872
75%       25.346315
max      140.177901
Name: % error, dtype: float64",8
53,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.7,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    322.000000
mean      17.111175
std       17.926698
min        0.329014
25%        4.814310
50%       11.059200
75%       26.069059
max      136.319811
Name: % error, dtype: float64",8
54,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.7,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    322.000000
mean      17.154533
std       18.041163
min        0.342715
25%        4.611451
50%       11.055636
75%       26.087228
max      135.868160
Name: % error, dtype: float64",8
55,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.7,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    322.000000
mean      17.159320
std       18.041045
min        0.337393
25%        4.652055
50%       11.044514
75%       26.091319
max      135.938395
Name: % error, dtype: float64",8
56,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.8,"post_0      2.178773e+16
post_1      2.178773e+16
post_2      2.178773e+16
post_4      2.178773e+16
post_3      2.178773e+16
post_5      2.178773e+16
post_6      2.178773e+16
cells_50    2.243500e+03
dtype: float64","count    215.000000
mean      16.877505
std       17.061445
min        0.020390
25%        5.087978
50%       11.336086
75%       24.734524
max      135.738144
Name: % error, dtype: float64",8
57,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.8,"post_0      7256.072652
post_1      3608.576946
cells_50    2066.239222
post_6       805.286206
post_5       316.879110
dtype: float64","count    215.000000
mean      16.651966
std       16.785801
min        0.011025
25%        4.610050
50%       11.162574
75%       25.802127
max      132.409981
Name: % error, dtype: float64",8
58,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.8,"post_0      5509.142322
post_6      2222.433548
post_1      2182.590229
cells_50    2091.324363
post_5      1767.071645
post_3      1424.414334
post_2      1218.260977
post_4      1059.552047
dtype: float64","count    215.000000
mean      16.340894
std       16.478883
min        0.051480
25%        4.410587
50%       10.912478
75%       24.665305
max      128.213152
Name: % error, dtype: float64",8
59,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.8,"post_0      4888.329988
post_6      2538.588224
post_5      2056.025419
cells_50    1990.143685
post_1      1769.936796
post_3      1711.332203
post_2      1483.925696
post_4      1196.387036
dtype: float64","count    215.000000
mean      16.124047
std       16.258399
min        0.019782
25%        4.194071
50%       10.782494
75%       24.638842
max      124.403817
Name: % error, dtype: float64",8
60,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.8,"post_0      6.736950e+17
post_2      4.005403e+17
cells_50    3.563103e+17
post_1      3.212025e+17
post_5      2.263915e+17
post_3      1.951419e+17
post_4      7.328569e+16
post_6      1.391384e+16
dtype: float64","count    215.000000
mean      17.355673
std       17.873532
min        0.039519
25%        4.830876
50%       11.539161
75%       27.764064
max      147.957719
Name: % error, dtype: float64",8
61,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.8,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    215.000000
mean      16.863993
std       17.217697
min        0.143273
25%        4.562429
50%       11.171114
75%       27.073718
max      137.658311
Name: % error, dtype: float64",8
62,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.8,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    215.000000
mean      16.893364
std       17.270647
min        0.052327
25%        4.486305
50%       11.101226
75%       27.062973
max      138.071743
Name: % error, dtype: float64",8
63,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.8,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    215.000000
mean      16.910150
std       17.270667
min        0.080577
25%        4.513609
50%       11.168129
75%       27.004520
max      138.185778
Name: % error, dtype: float64",8
64,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.9,"post_6      9.441775e+16
post_5      9.441775e+16
post_3      9.441775e+16
post_4      9.441775e+16
post_2      9.441775e+16
post_1      9.441775e+16
post_0      9.441775e+16
cells_50    2.248000e+03
dtype: float64","count    108.000000
mean      17.123525
std       15.174420
min        0.123929
25%        5.121348
50%       11.899559
75%       27.220597
max       78.198637
Name: % error, dtype: float64",8
65,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.9,"post_0      7044.645555
post_1      3389.724193
cells_50    2074.328188
post_6       763.365001
post_5       328.620432
dtype: float64","count    108.000000
mean      16.902629
std       15.086174
min        0.022793
25%        4.647366
50%       11.022231
75%       27.741113
max       76.417054
Name: % error, dtype: float64",8
66,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.9,"post_0      5431.467734
post_6      2142.635614
cells_50    2115.731825
post_1      2044.297286
post_5      1739.929023
post_3      1385.414592
post_2      1175.643459
post_4      1032.142332
dtype: float64","count    108.000000
mean      16.605532
std       14.894256
min        0.656829
25%        4.596466
50%       10.751217
75%       27.447536
max       73.204960
Name: % error, dtype: float64",8
67,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.9,"post_0      4775.601547
post_6      2454.980800
post_5      2019.163120
cells_50    1998.029405
post_3      1665.473033
post_1      1617.075423
post_2      1443.040472
post_4      1138.728735
dtype: float64","count    108.000000
mean      16.363420
std       14.799705
min        0.243118
25%        4.185681
50%       10.981808
75%       27.427683
max       70.854759
Name: % error, dtype: float64",8
68,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.9,"cells_50    7.530610e+17
post_6      4.543449e+17
post_3      4.485476e+17
post_1      3.977503e+17
post_2      3.748810e+17
post_5      2.719639e+17
post_0      1.827429e+17
post_4      8.912698e+16
dtype: float64","count    108.000000
mean      19.516773
std       14.936008
min        0.776808
25%        8.352656
50%       14.218119
75%       29.144942
max       72.134982
Name: % error, dtype: float64",8
69,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.9,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    108.000000
mean      16.877371
std       14.927740
min        0.532383
25%        4.961624
50%       11.131757
75%       29.080704
max       67.913397
Name: % error, dtype: float64",8
70,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.9,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    108.000000
mean      16.866365
std       14.960780
min        0.606555
25%        4.751953
50%       11.272789
75%       29.054130
max       67.631135
Name: % error, dtype: float64",8
71,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.9,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    108.000000
mean      16.869820
std       14.954841
min        0.572981
25%        4.810965
50%       11.321231
75%       29.076522
max       67.580266
Name: % error, dtype: float64",8
72,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.1,"post_6      6.053998e+17
post_2      6.053998e+17
post_3      6.053998e+17
post_4      6.053998e+17
post_5      6.053998e+17
post_1      6.053998e+17
post_0      6.053998e+17
cells_50    3.552000e+03
cells_53    2.240000e+03
cells_52    2.056000e+03
cells_51    1.664000e+03
dtype: float64","count    964.000000
mean      17.320281
std       16.296681
min        0.043616
25%        5.407878
50%       12.744899
75%       23.302528
max      114.812778
Name: % error, dtype: float64",11
73,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.1,"post_0      6243.287243
post_1      4369.988065
cells_50    3167.641911
cells_53    1801.756864
cells_52    1646.919895
cells_51    1142.223200
post_6       961.451100
dtype: float64","count    964.000000
mean      16.097192
std       16.329828
min        0.006853
25%        5.137925
50%       11.172625
75%       21.778322
max      116.112662
Name: % error, dtype: float64",11
74,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",Ridge(alpha=2),Performance,0.1,"post_0      4394.960172
cells_50    2922.454293
post_1      2757.640597
post_6      2317.932247
cells_53    1641.744124
cells_52    1490.632694
post_2      1431.146721
post_5      1396.901154
post_3      1361.375424
cells_51    1030.776941
post_4       645.245223
dtype: float64","count    964.000000
mean      15.935945
std       16.206947
min        0.012704
25%        4.037455
50%       10.761412
75%       22.459257
max      111.257590
Name: % error, dtype: float64",11
75,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","ElasticNet(alpha=0.05, max_iter=5)",Performance,0.1,"post_0      3956.919325
cells_50    2745.524321
post_6      2605.905863
post_1      2371.050497
post_2      1701.797476
post_5      1691.266064
post_3      1665.252033
cells_53    1512.674276
cells_52    1351.735189
cells_51     888.763401
post_4       767.340634
dtype: float64","count    964.000000
mean      15.932794
std       16.269589
min        0.014235
25%        4.187404
50%       10.502078
75%       22.802774
max      110.399440
Name: % error, dtype: float64",11
76,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.1,"post_6      1.065486e+17
post_2      5.374919e+16
post_1      3.804429e+16
post_0      3.699772e+16
post_5      3.568111e+16
post_3      3.508515e+16
post_4      3.022132e+16
cells_51    6.587635e+15
cells_52    4.589454e+15
cells_53    2.516718e+15
cells_50    8.290506e+14
dtype: float64","count    9.640000e+02
mean     9.871346e+11
std      6.327605e+12
min      1.291626e-02
25%      4.200351e+00
50%      8.842873e+00
75%      2.446297e+01
max      7.540572e+13
Name: % error, dtype: float64",11
77,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",RandomForestRegressor(),Performance,0.1,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    964.000000
mean      16.614886
std       20.968455
min        0.033794
25%        4.251191
50%        9.375982
75%       22.428815
max      241.014880
Name: % error, dtype: float64",11
78,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.1,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    964.000000
mean      16.082039
std       20.640442
min        0.018402
25%        4.223817
50%        8.822769
75%       22.366909
max      244.048576
Name: % error, dtype: float64",11
79,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.1,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    964.000000
mean      16.191978
std       20.984797
min        0.003614
25%        3.933713
50%        8.691115
75%       22.877585
max      244.129297
Name: % error, dtype: float64",11
80,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.2,"post_6      2.376219e+17
post_5      2.376219e+17
post_4      2.376219e+17
post_3      2.376219e+17
post_2      2.376219e+17
post_1      2.376219e+17
post_0      2.376219e+17
cells_50    2.992000e+03
cells_51    2.052125e+03
cells_52    1.396000e+03
cells_53    1.280000e+03
dtype: float64","count    857.000000
mean      14.721084
std       15.086202
min        0.003088
25%        4.318880
50%        9.621555
75%       19.357793
max       91.760966
Name: % error, dtype: float64",11
81,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.2,"post_0      4929.200894
post_1      4073.050228
cells_50    2467.549388
cells_51    1466.775780
post_6      1121.325529
cells_53     893.349020
cells_52     873.164971
post_5       435.293588
dtype: float64","count    857.000000
mean      14.770488
std       15.240442
min        0.078188
25%        4.453272
50%        8.939614
75%       20.685395
max       95.574412
Name: % error, dtype: float64",11
82,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",Ridge(alpha=4),Performance,0.2,"post_0      3532.480098
post_1      2810.702350
cells_50    2343.482736
post_6      2157.887512
post_5      1544.718554
cells_51    1405.910091
post_3      1087.350366
post_2       923.345233
cells_52     918.941181
cells_53     889.746364
post_4       629.880785
dtype: float64","count    857.000000
mean      14.695739
std       15.285134
min        0.059608
25%        4.503489
50%        8.578538
75%       20.731281
max      102.381704
Name: % error, dtype: float64",11
83,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","ElasticNet(alpha=0.05, max_iter=100)",Performance,0.2,"post_0      3400.016809
post_1      2715.669503
cells_50    2203.624735
post_6      2097.363628
post_5      1500.577952
cells_51    1274.015304
post_3      1056.721915
post_2       890.500897
cells_52     816.865139
cells_53     788.814849
post_4       567.733216
dtype: float64","count    857.000000
mean      14.699170
std       15.348534
min        0.003957
25%        4.306613
50%        8.700622
75%       20.329978
max      104.634791
Name: % error, dtype: float64",11
84,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.2,"post_2      6.235224e+17
post_1      4.308690e+17
post_6      4.197330e+17
cells_50    3.806211e+17
post_3      3.037135e+17
cells_52    1.854726e+17
cells_53    1.743353e+17
post_5      1.514224e+17
post_0      1.378752e+17
cells_51    4.482336e+16
post_4      3.164875e+16
dtype: float64","count    8.570000e+02
mean     1.987433e+13
std      1.199427e+14
min      1.825345e-02
25%      4.444914e+00
50%      9.701942e+00
75%      2.269276e+01
max      1.349659e+15
Name: % error, dtype: float64",11
85,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",RandomForestRegressor(),Performance,0.2,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    857.000000
mean      15.502001
std       18.169948
min        0.050700
25%        4.235616
50%        8.733029
75%       20.011874
max      163.374925
Name: % error, dtype: float64",11
86,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.2,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    857.000000
mean      15.326371
std       18.340328
min        0.007026
25%        3.922062
50%        8.792668
75%       19.029826
max      169.329853
Name: % error, dtype: float64",11
87,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.2,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    857.000000
mean      15.685859
std       18.207617
min        0.024341
25%        4.229904
50%        9.145348
75%       20.600085
max      169.518177
Name: % error, dtype: float64",11
88,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.3,"post_0      4257.756231
post_1      2993.799763
cells_50    2918.323192
post_6      2248.285034
cells_51    2234.990097
post_5      1648.112279
cells_52    1377.776612
post_4      1252.635244
cells_53    1185.069145
post_3      1115.264037
post_2       987.259400
dtype: float64","count    750.000000
mean      14.357475
std       14.885964
min        0.005516
25%        4.270080
50%        9.356057
75%       17.904112
max       92.823562
Name: % error, dtype: float64",11
89,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","Lasso(alpha=10, max_iter=100)",Performance,0.3,"post_0      5279.535161
post_1      4017.238978
cells_50    2761.410610
cells_51    2026.907662
cells_52    1159.736990
post_6      1116.974003
cells_53     998.355008
post_5       491.869568
dtype: float64","count    750.000000
mean      14.261794
std       14.883224
min        0.005657
25%        4.405478
50%        8.930515
75%       18.222032
max       91.220538
Name: % error, dtype: float64",11
90,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",Ridge(alpha=2),Performance,0.3,"post_0      4077.422366
post_1      2880.814290
cells_50    2707.254258
post_6      2199.877933
cells_51    2004.447014
post_5      1591.207397
cells_52    1181.004045
post_4      1129.579363
post_3      1075.349790
cells_53    1011.385475
post_2       962.222172
dtype: float64","count    750.000000
mean      14.212509
std       14.876175
min        0.010197
25%        4.157775
50%        9.494645
75%       18.434784
max       95.397206
Name: % error, dtype: float64",11
91,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0)",Performance,0.3,"post_0      3975.862601
post_1      2817.814142
cells_50    2597.399344
post_6      2170.177333
cells_51    1887.302918
post_5      1557.627214
cells_52    1082.816605
post_4      1067.360449
post_3      1052.712091
post_2       945.799656
cells_53     924.070344
dtype: float64","count    750.000000
mean      14.162727
std       14.878747
min        0.009906
25%        4.023929
50%        9.380487
75%       19.133186
max       96.851073
Name: % error, dtype: float64",11
92,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.3,"cells_52    6.236688e+17
cells_50    2.917035e+17
post_2      2.837537e+17
post_3      1.571482e+17
post_6      5.907681e+16
cells_51    5.656030e+16
post_4      4.349946e+16
post_5      3.623810e+16
post_1      2.253558e+16
post_0      6.220754e+15
cells_53    2.166349e+15
dtype: float64","count    750.000000
mean      15.920922
std       17.782135
min        0.050972
25%        3.995106
50%       10.116124
75%       20.625594
max      143.132822
Name: % error, dtype: float64",11
93,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",RandomForestRegressor(),Performance,0.3,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    750.000000
mean      14.955155
std       17.175167
min        0.002960
25%        4.404059
50%        9.330537
75%       18.014275
max      131.976509
Name: % error, dtype: float64",11
94,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.3,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    750.000000
mean      14.633606
std       17.130264
min        0.017116
25%        3.924719
50%        8.857155
75%       18.028537
max      133.149559
Name: % error, dtype: float64",11
95,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.3,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    750.000000
mean      14.855167
std       17.098499
min        0.025734
25%        4.412561
50%        9.269415
75%       17.672638
max      133.917691
Name: % error, dtype: float64",11
96,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.4,"post_6      3.478384e+16
post_5      3.478384e+16
post_3      3.478384e+16
post_4      3.478384e+16
post_2      3.478384e+16
post_1      3.478384e+16
post_0      3.478384e+16
cells_50    3.280000e+03
cells_51    2.712000e+03
cells_52    1.980500e+03
cells_53    1.728000e+03
dtype: float64","count    643.000000
mean      15.614642
std       15.601956
min        0.012235
25%        5.252249
50%       10.787430
75%       19.376117
max      103.956762
Name: % error, dtype: float64",11
97,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","Lasso(alpha=10, max_iter=100)",Performance,0.4,"post_0      6513.340650
post_1      4310.292307
cells_50    3107.815424
cells_51    2506.594164
cells_52    1764.439593
cells_53    1523.287177
post_6      1042.793002
post_5       503.835107
post_2        48.696488
post_3        42.158778
dtype: float64","count    643.000000
mean      15.356234
std       15.524526
min        0.008198
25%        5.007682
50%       10.267729
75%       19.897293
max      103.652631
Name: % error, dtype: float64",11
98,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",Ridge(alpha=4),Performance,0.4,"post_0      4906.827123
cells_50    2917.417572
post_1      2871.683098
post_6      2330.651274
cells_51    2316.528099
post_5      1803.148266
cells_52    1613.823256
cells_53    1395.664910
post_3      1360.415439
post_4      1147.632529
post_2      1136.662713
dtype: float64","count    643.000000
mean      15.098410
std       15.385894
min        0.013140
25%        4.460271
50%       10.114017
75%       19.494023
max      101.309831
Name: % error, dtype: float64",11
99,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0)",Performance,0.4,"post_0      4884.511833
cells_50    2895.367133
post_1      2860.686867
post_6      2324.158761
cells_51    2293.304322
post_5      1796.564075
cells_52    1592.741870
cells_53    1377.527418
post_3      1354.929093
post_4      1136.543936
post_2      1133.002834
dtype: float64","count    643.000000
mean      15.073385
std       15.376831
min        0.000540
25%        4.447368
50%       10.121293
75%       19.496087
max      101.150619
Name: % error, dtype: float64",11
100,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.4,"cells_50    6.008969e+17
cells_51    4.078102e+17
post_5      1.812380e+17
cells_52    1.668234e+17
post_6      1.174836e+17
post_0      1.125414e+17
post_2      6.917881e+16
post_4      4.760796e+16
post_3      2.907726e+16
post_1      8.166648e+15
cells_53    1.811873e+15
dtype: float64","count    643.000000
mean      16.381605
std       17.056020
min        0.040965
25%        5.443870
50%       10.792129
75%       19.630405
max      124.200349
Name: % error, dtype: float64",11
101,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",RandomForestRegressor(),Performance,0.4,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    643.000000
mean      15.503754
std       16.631231
min        0.024313
25%        4.419915
50%        9.713001
75%       20.320582
max      121.274952
Name: % error, dtype: float64",11
102,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.4,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    643.000000
mean      15.185898
std       16.603826
min        0.066137
25%        4.297041
50%        9.024103
75%       19.814157
max      127.674975
Name: % error, dtype: float64",11
103,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.4,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    643.000000
mean      15.422050
std       16.501126
min        0.062502
25%        4.503992
50%        9.740409
75%       20.389373
max      126.340961
Name: % error, dtype: float64",11
104,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.5,"post_0      3.318401e+15
post_1      3.318401e+15
post_2      3.318401e+15
post_4      3.318401e+15
post_3      3.318401e+15
post_5      3.318401e+15
post_6      3.318401e+15
cells_50    3.118500e+03
cells_51    2.824344e+03
cells_52    1.956562e+03
cells_53    1.566375e+03
dtype: float64","count    536.000000
mean      15.853844
std       15.782608
min        0.089646
25%        5.383107
50%       10.657411
75%       19.385377
max      109.371659
Name: % error, dtype: float64",11
105,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","Lasso(alpha=10, max_iter=100)",Performance,0.5,"post_0      7168.896762
post_1      3990.633559
cells_50    2950.354547
cells_51    2620.127535
cells_52    1750.889313
cells_53    1393.391788
post_6       943.659484
post_5       517.163654
post_2        98.446508
dtype: float64","count    536.000000
mean      15.627567
std       15.721973
min        0.066423
25%        4.951397
50%       10.695546
75%       20.163880
max      109.477741
Name: % error, dtype: float64",11
106,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",Ridge(alpha=4),Performance,0.5,"post_0      5512.951780
cells_50    2839.772491
post_1      2528.089520
cells_51    2485.601384
post_6      2324.036694
post_5      1899.305893
cells_52    1665.370768
post_3      1400.901913
cells_53    1329.039185
post_4      1244.264367
post_2      1172.532432
dtype: float64","count    536.000000
mean      15.386666
std       15.579776
min        0.049118
25%        4.644476
50%       10.025503
75%       20.178394
max      107.235819
Name: % error, dtype: float64",11
107,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.1, max_iter=10)",Performance,0.5,"post_0      5012.033086
cells_50    2536.116369
post_6      2356.619932
post_1      2275.725082
cells_51    2126.255888
post_5      1901.171930
post_3      1429.183106
cells_52    1365.434350
post_2      1212.895813
post_4      1150.795556
cells_53    1082.502405
dtype: float64","count    536.000000
mean      14.977368
std       15.448679
min        0.016719
25%        3.775443
50%        9.673948
75%       21.295935
max      104.423419
Name: % error, dtype: float64",11
108,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.5,"cells_50    2.487643e+17
post_5      2.366071e+17
post_6      1.866686e+17
post_3      1.071116e+17
post_4      1.061021e+17
cells_53    5.827012e+16
cells_51    2.503936e+16
post_0      1.740648e+16
cells_52    1.385495e+16
post_1      1.126597e+16
post_2      8.854869e+15
dtype: float64","count    536.000000
mean      16.186308
std       17.247066
min        0.029692
25%        4.167035
50%       10.163321
75%       21.931090
max      112.085663
Name: % error, dtype: float64",11
109,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",RandomForestRegressor(),Performance,0.5,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    536.000000
mean      15.643954
std       16.892902
min        0.001537
25%        4.386439
50%        9.608920
75%       20.526336
max      110.727099
Name: % error, dtype: float64",11
110,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.5,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    536.000000
mean      15.500757
std       16.903745
min        0.042349
25%        4.177738
50%        9.544789
75%       20.665427
max      111.575861
Name: % error, dtype: float64",11
111,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.5,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    536.000000
mean      15.637286
std       16.930799
min        0.000683
25%        4.335482
50%        9.643887
75%       20.896573
max      109.668006
Name: % error, dtype: float64",11
112,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.6,"post_6      2.603539e+17
post_5      2.603539e+17
post_3      2.603539e+17
post_2      2.603539e+17
post_4      2.603539e+17
post_1      2.603539e+17
post_0      2.603539e+17
cells_50    3.280000e+03
cells_51    2.808000e+03
cells_53    1.496000e+03
cells_52    1.436000e+03
dtype: float64","count    429.000000
mean      16.957192
std       16.808311
min        0.035155
25%        5.251841
50%       11.768673
75%       21.317774
max      113.134554
Name: % error, dtype: float64",11
113,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","Lasso(alpha=10, max_iter=100)",Performance,0.6,"post_0      7521.723587
post_1      4074.215486
cells_50    3042.746248
cells_51    2584.955953
cells_53    1351.206494
cells_52    1250.182997
post_6       956.814070
post_5       425.955638
post_2        74.413464
dtype: float64","count    429.000000
mean      16.236565
std       16.562548
min        0.015742
25%        5.027473
50%       10.329901
75%       22.371290
max      113.618591
Name: % error, dtype: float64",11
114,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",Ridge(alpha=10),Performance,0.6,"post_0      5457.952401
cells_50    2690.820256
post_1      2412.966740
post_6      2324.725767
cells_51    2200.703887
post_5      1787.607290
post_3      1393.159462
post_2      1212.190069
post_4      1153.236552
cells_53    1107.174583
cells_52     984.090805
dtype: float64","count    429.000000
mean      15.469797
std       16.165618
min        0.043871
25%        3.739540
50%        9.364436
75%       22.347720
max      108.496931
Name: % error, dtype: float64",11
115,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.1, max_iter=5)",Performance,0.6,"post_0      4990.470534
post_6      2792.639925
cells_50    2624.061906
post_5      2219.604196
cells_51    2124.325429
post_1      1973.964279
post_3      1814.399928
post_2      1615.637402
post_4      1453.656942
cells_53    1061.815342
cells_52     929.008177
dtype: float64","count    429.000000
mean      15.449429
std       16.173186
min        0.025313
25%        3.930720
50%        9.506027
75%       22.661721
max      108.534475
Name: % error, dtype: float64",11
116,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.6,"post_5      3.273484e+17
post_3      1.858161e+17
post_6      1.465254e+17
post_4      1.009715e+17
cells_50    7.691583e+16
post_0      5.419376e+16
cells_53    4.031102e+16
cells_51    3.755113e+16
post_2      2.273265e+16
post_1      2.112037e+16
cells_52    6.599965e+15
dtype: float64","count    429.000000
mean      17.442576
std       18.120521
min        0.012333
25%        5.292926
50%       10.929061
75%       23.989668
max      113.449221
Name: % error, dtype: float64",11
117,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",RandomForestRegressor(),Performance,0.6,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    429.000000
mean      16.366054
std       17.630389
min        0.001562
25%        4.454287
50%       10.116786
75%       23.298524
max      113.320256
Name: % error, dtype: float64",11
118,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.6,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    429.000000
mean      16.052032
std       17.408711
min        0.025638
25%        4.424671
50%        9.709629
75%       23.217503
max      110.332221
Name: % error, dtype: float64",11
119,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.6,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    429.000000
mean      16.201804
std       17.436017
min        0.024550
25%        4.438736
50%        9.873509
75%       23.111095
max      109.668006
Name: % error, dtype: float64",11
120,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.7,"post_6      8.721183e+15
post_5      8.721183e+15
post_4      8.721183e+15
post_3      8.721183e+15
post_2      8.721183e+15
post_1      8.721183e+15
post_0      8.721183e+15
cells_50    3.066000e+03
cells_51    2.615125e+03
cells_52    1.469500e+03
cells_53    1.130938e+03
dtype: float64","count    322.000000
mean      15.829019
std       16.619807
min        0.022008
25%        4.733814
50%       10.139162
75%       22.431109
max      110.918772
Name: % error, dtype: float64",11
121,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","Lasso(alpha=10, max_iter=100)",Performance,0.7,"post_0      7310.364980
post_1      3866.594565
cells_50    2901.097292
cells_51    2423.089281
cells_52    1272.425879
cells_53     968.112981
post_6       922.702193
post_5       344.277528
post_2       144.907228
dtype: float64","count    322.000000
mean      15.697321
std       16.561886
min        0.079440
25%        4.414245
50%        9.604823
75%       23.049356
max      111.162400
Name: % error, dtype: float64",11
122,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",Ridge(alpha=10),Performance,0.7,"post_0      5377.416074
cells_50    2634.767350
post_1      2296.409137
post_6      2276.065135
cells_51    2140.969911
post_5      1712.877806
post_3      1374.469078
post_4      1189.485400
post_2      1120.927792
cells_52    1082.146346
cells_53     819.312667
dtype: float64","count    322.000000
mean      15.162407
std       16.319211
min        0.155966
25%        4.071909
50%        8.806407
75%       22.543135
max      106.735325
Name: % error, dtype: float64",11
123,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.1, max_iter=5)",Performance,0.7,"post_0      4839.624276
post_6      2704.699185
cells_50    2515.886709
post_5      2115.117430
cells_51    2008.478197
post_1      1846.548771
post_3      1762.875689
post_2      1493.064487
post_4      1438.336848
cells_52     981.996666
cells_53     742.355735
dtype: float64","count    322.000000
mean      15.072960
std       16.316967
min        0.016458
25%        4.139880
50%        8.895381
75%       22.230611
max      106.044802
Name: % error, dtype: float64",11
124,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.7,"post_5      3.716122e+17
post_4      2.066320e+17
cells_51    1.640666e+17
post_6      1.215887e+17
cells_53    7.086786e+16
post_3      6.375052e+16
cells_52    6.020552e+16
post_1      3.032919e+16
post_0      2.722486e+16
cells_50    2.280271e+16
post_2      2.238525e+16
dtype: float64","count    322.000000
mean      16.210609
std       17.692993
min        0.000609
25%        4.189653
50%        9.269687
75%       23.990469
max      111.141662
Name: % error, dtype: float64",11
125,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",RandomForestRegressor(),Performance,0.7,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    322.000000
mean      15.674504
std       17.135366
min        0.005687
25%        4.026187
50%        9.321365
75%       22.903322
max      105.359454
Name: % error, dtype: float64",11
126,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.7,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    322.000000
mean      15.447180
std       17.010007
min        0.058281
25%        4.012720
50%        8.940178
75%       22.589961
max      102.624460
Name: % error, dtype: float64",11
127,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.7,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    322.000000
mean      15.564407
std       16.980558
min        0.055906
25%        3.917709
50%        9.155275
75%       22.326958
max      101.901460
Name: % error, dtype: float64",11
128,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.8,"post_0      4.331197e+16
post_1      4.331197e+16
post_2      4.331197e+16
post_3      4.331197e+16
post_4      4.331197e+16
post_5      4.331197e+16
post_6      4.331197e+16
cells_50    3.185000e+03
cells_51    2.697000e+03
cells_52    1.594000e+03
cells_53    1.228000e+03
dtype: float64","count    215.000000
mean      15.744416
std       15.700446
min        0.161545
25%        5.108661
50%       10.503715
75%       22.959742
max      113.763888
Name: % error, dtype: float64",11
129,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","Lasso(alpha=10, max_iter=100)",Performance,0.8,"post_0      7429.151450
post_1      3782.984844
cells_50    3030.475122
cells_51    2501.107529
cells_52    1395.909986
cells_53    1057.294466
post_6       816.633585
post_5       322.317544
post_2       156.112856
dtype: float64","count    215.000000
mean      15.571458
std       15.495433
min        0.000856
25%        4.844029
50%       10.370086
75%       23.269972
max      112.487628
Name: % error, dtype: float64",11
130,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",Ridge(alpha=10),Performance,0.8,"post_0      5506.444852
cells_50    2783.608822
cells_51    2258.658785
post_1      2217.543328
post_6      2214.946875
post_5      1731.561121
post_3      1421.994646
cells_52    1230.470312
post_4      1206.427045
post_2      1149.058493
cells_53     918.273939
dtype: float64","count    215.000000
mean      15.108861
std       15.097356
min        0.342420
25%        4.149733
50%       10.337416
75%       23.326731
max      108.220650
Name: % error, dtype: float64",11
131,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0)",Performance,0.8,"post_0      5578.264041
cells_50    2835.705666
cells_51    2311.351511
post_1      2238.695906
post_6      2231.480633
post_5      1747.991327
post_3      1435.909296
cells_52    1273.461276
post_4      1241.138233
post_2      1160.440458
cells_53     955.142794
dtype: float64","count    215.000000
mean      15.177359
std       15.146719
min        0.051407
25%        4.297314
50%       10.218732
75%       23.370985
max      108.828681
Name: % error, dtype: float64",11
132,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.8,"cells_51    3.589989e+17
post_1      2.569125e+17
post_6      2.202603e+17
post_5      2.018640e+17
post_4      1.636648e+17
post_0      1.447485e+17
cells_53    6.709011e+16
post_3      4.905591e+16
cells_50    4.665960e+16
cells_52    3.350396e+16
post_2      2.707261e+16
dtype: float64","count    215.000000
mean      16.402201
std       16.124707
min        0.003794
25%        4.532888
50%       10.108513
75%       26.077069
max       99.498977
Name: % error, dtype: float64",11
133,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",RandomForestRegressor(),Performance,0.8,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    215.000000
mean      15.612958
std       16.039685
min        0.000848
25%        4.168451
50%        9.769579
75%       23.513533
max      105.556902
Name: % error, dtype: float64",11
134,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.8,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    215.000000
mean      15.694013
std       16.229575
min        0.007095
25%        4.058416
50%        9.760637
75%       23.435893
max      103.238443
Name: % error, dtype: float64",11
135,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.8,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    215.000000
mean      15.770381
std       16.258279
min        0.037524
25%        4.194873
50%        9.796557
75%       23.396918
max      101.901460
Name: % error, dtype: float64",11
136,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.9,"post_6      1.063720e+17
post_5      1.063720e+17
post_4      1.063720e+17
post_3      1.063720e+17
post_2      1.063720e+17
post_1      1.063720e+17
post_0      1.063720e+17
cells_50    3.180000e+03
cells_51    2.511000e+03
cells_52    1.514000e+03
cells_53    1.119000e+03
dtype: float64","count    108.000000
mean      15.428744
std       14.697087
min        0.247853
25%        4.793790
50%        8.053096
75%       24.612684
max       78.015869
Name: % error, dtype: float64",11
137,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","Lasso(alpha=10, max_iter=10)",Performance,0.9,"post_0      4961.912324
post_6      3091.662972
cells_50    3005.829457
post_5      2638.383582
cells_51    2311.319480
post_3      2288.004834
post_4      2085.224667
post_2      1959.509447
cells_52    1328.662887
post_1      1270.726198
cells_53     959.854127
dtype: float64","count    108.000000
mean      15.234925
std       14.489242
min        0.384838
25%        3.892648
50%        8.526242
75%       26.422759
max       76.577751
Name: % error, dtype: float64",11
138,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",Ridge(alpha=10),Performance,0.9,"post_0      5439.073473
cells_50    2802.922256
post_6      2137.279370
cells_51    2133.260163
post_1      2054.822237
post_5      1703.212446
post_3      1382.946726
cells_52    1211.703871
post_4      1179.048287
post_2      1091.408881
cells_53     863.035335
dtype: float64","count    108.000000
mean      15.052939
std       14.220076
min        0.372848
25%        3.740129
50%        9.469419
75%       25.816199
max       73.705978
Name: % error, dtype: float64",11
139,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.1, max_iter=10)",Performance,0.9,"post_0      5058.351440
cells_50    2592.296221
post_6      2188.824867
cells_51    1926.769592
post_1      1869.779028
post_5      1746.010465
post_3      1430.271207
post_2      1152.573121
post_4      1113.285955
cells_52    1045.412613
cells_53     727.134466
dtype: float64","count    108.000000
mean      14.940917
std       14.139504
min        0.070846
25%        3.494188
50%        8.175375
75%       24.314585
max       71.751885
Name: % error, dtype: float64",11
140,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",LinearRegression(),Performance,0.9,"cells_53    1.311483e+18
cells_51    1.253288e+18
cells_52    3.098541e+17
post_4      2.594308e+17
post_3      2.470220e+17
post_6      1.433960e+17
cells_50    6.150704e+16
post_5      5.037500e+16
post_1      5.020284e+16
post_2      7.929939e+15
post_0      7.227931e+15
dtype: float64","count    108.000000
mean      16.378596
std       14.041126
min        0.109886
25%        4.246279
50%       10.655434
75%       24.742193
max       59.848380
Name: % error, dtype: float64",11
141,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",RandomForestRegressor(),Performance,0.9,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    108.000000
mean      14.906512
std       14.884159
min        0.015289
25%        3.571357
50%        8.079058
75%       26.151095
max       68.204217
Name: % error, dtype: float64",11
142,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.9,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    108.000000
mean      14.820840
std       14.762318
min        0.002194
25%        3.030310
50%        8.124754
75%       26.605988
max       67.940051
Name: % error, dtype: float64",11
143,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50', 'cells_51', 'cells_52', 'cells_53'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.9,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
cells_51   NaN
cells_52   NaN
cells_53   NaN
Name: % error, dtype: float64","count    108.000000
mean      14.920835
std       14.799212
min        0.130527
25%        3.497771
50%        8.399022
75%       26.515465
max       67.580266
Name: % error, dtype: float64",11
