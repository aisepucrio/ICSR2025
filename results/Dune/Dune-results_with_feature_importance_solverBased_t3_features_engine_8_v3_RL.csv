,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.1,"post_6      2.348107e+17
post_2      2.348107e+17
post_3      2.348107e+17
post_5      2.348107e+17
post_4      2.348107e+17
post_1      2.348107e+17
post_0      2.348107e+17
cells_50    2.504000e+03
dtype: float64","count    964.000000
mean      16.688102
std       16.546402
min        0.016354
25%        5.243457
50%       11.003361
75%       23.215180
max      119.427897
Name: % error, dtype: float64",8
1,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=10, max_iter=100)",Performance,0.1,"post_0      6054.183545
post_1      4056.950454
cells_50    2414.764892
post_6      1214.291807
post_2       567.903551
post_5       195.052467
dtype: float64","count    964.000000
mean      16.415632
std       16.492453
min        0.008045
25%        5.057630
50%       10.875220
75%       22.580681
max      119.214838
Name: % error, dtype: float64",8
2,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=0.8),Performance,0.1,"post_0      4676.607248
post_1      2785.064795
cells_50    2386.443751
post_6      2382.585247
post_2      1762.004773
post_5      1412.144412
post_3      1167.824186
post_4       737.113425
dtype: float64","count    964.000000
mean      16.368568
std       16.387285
min        0.007708
25%        4.890557
50%       10.794007
75%       22.830867
max      117.089082
Name: % error, dtype: float64",8
3,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0, max_iter=5)",Performance,0.1,"post_0      3802.570209
post_6      3258.560815
post_2      2576.304013
cells_50    2342.500073
post_5      2275.555061
post_3      2038.541392
post_1      1922.911941
post_4      1359.194085
dtype: float64","count    964.000000
mean      16.378770
std       16.370269
min        0.010573
25%        5.095745
50%       10.971548
75%       22.757178
max      116.734661
Name: % error, dtype: float64",8
4,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.1,"post_6      1.918264e+17
post_5      1.680401e+17
post_2      5.942811e+16
post_1      3.185562e+16
post_4      2.509004e+16
post_0      1.562430e+16
post_3      5.117904e+15
cells_50    8.116671e+14
dtype: float64","count    9.640000e+02
mean     8.705038e+12
std      5.579993e+13
min      8.942569e-03
25%      4.728686e+00
50%      1.049604e+01
75%      2.530694e+01
max      6.649647e+14
Name: % error, dtype: float64",8
5,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.1,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    964.000000
mean      16.478286
std       16.662653
min        0.005033
25%        5.003883
50%       10.795714
75%       21.885989
max      115.366709
Name: % error, dtype: float64",8
6,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.1,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    964.000000
mean      16.264989
std       16.533219
min        0.004856
25%        5.099557
50%       10.467534
75%       22.141921
max      119.270453
Name: % error, dtype: float64",8
7,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.1,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    964.000000
mean      16.231327
std       16.583457
min        0.005060
25%        5.139959
50%       10.551009
75%       22.267548
max      119.325924
Name: % error, dtype: float64",8
8,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.2,"post_0      9.728981e+16
post_1      9.728981e+16
post_4      9.728981e+16
post_3      9.728981e+16
post_2      9.728981e+16
post_5      9.728981e+16
post_6      9.728981e+16
cells_50    2.032000e+03
dtype: float64","count    857.000000
mean      16.020091
std       15.779484
min        0.004442
25%        5.141172
50%       10.907448
75%       21.204874
max      106.961687
Name: % error, dtype: float64",8
9,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.2,"post_0      4918.940833
post_1      3914.954838
cells_50    1806.577121
post_6      1159.887111
post_5       517.350588
dtype: float64","count    857.000000
mean      15.699543
std       15.809585
min        0.010107
25%        4.638420
50%       10.557386
75%       21.402085
max      103.956684
Name: % error, dtype: float64",8
10,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=4),Performance,0.2,"post_0      3552.234981
post_1      2690.734036
post_6      2160.972472
cells_50    1795.050865
post_5      1577.027014
post_2      1029.392030
post_3      1019.597350
post_4       455.980151
dtype: float64","count    857.000000
mean      15.633697
std       15.748359
min        0.046445
25%        4.694610
50%       10.403633
75%       21.257910
max      102.029753
Name: % error, dtype: float64",8
11,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.05, max_iter=10)",Performance,0.2,"post_0      3382.865879
post_1      2570.962743
post_6      2148.169843
cells_50    1731.815602
post_5      1572.693335
post_3      1040.275555
post_2      1021.229197
post_4       453.121689
dtype: float64","count    857.000000
mean      15.611542
std       15.764079
min        0.013172
25%        4.902842
50%       10.471194
75%       21.454159
max      100.869359
Name: % error, dtype: float64",8
12,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.2,"post_2      1.530172e+18
post_0      9.632357e+17
post_5      5.751236e+17
post_1      5.669547e+17
cells_50    5.652218e+17
post_3      5.138669e+17
post_4      4.106522e+17
post_6      1.371271e+17
dtype: float64","count    8.570000e+02
mean     3.271903e+13
std      1.974612e+14
min      5.490854e-02
25%      7.845845e+00
50%      1.487023e+01
75%      2.566599e+01
max      2.221939e+15
Name: % error, dtype: float64",8
13,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.2,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    857.000000
mean      16.427626
std       17.197875
min        0.033540
25%        4.683393
50%       10.930548
75%       21.341600
max      122.939733
Name: % error, dtype: float64",8
14,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.2,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    857.000000
mean      16.202670
std       17.493628
min        0.041035
25%        4.344204
50%       10.186961
75%       21.290085
max      127.317944
Name: % error, dtype: float64",8
15,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.2,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    857.000000
mean      16.421632
std       17.288689
min        0.014156
25%        4.581141
50%       10.664013
75%       21.917717
max      127.410094
Name: % error, dtype: float64",8
16,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.3,"post_0      4301.868246
post_1      2859.565726
post_6      2345.817258
cells_50    2016.152375
post_5      1700.456346
post_2      1109.528938
post_3      1017.305703
post_4       988.325727
dtype: float64","count    750.000000
mean      15.554258
std       15.682854
min        0.000127
25%        4.901300
50%       10.509434
75%       20.419399
max      107.346336
Name: % error, dtype: float64",8
17,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.3,"post_0      5187.747668
post_1      3795.828843
cells_50    1841.696349
post_6      1167.642652
post_5       455.919757
dtype: float64","count    750.000000
mean      15.399827
std       15.662406
min        0.062496
25%        4.292467
50%       10.669153
75%       20.663230
max      104.767012
Name: % error, dtype: float64",8
18,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=2),Performance,0.3,"post_0      4117.110934
post_1      2764.181361
post_6      2284.543311
cells_50    1952.046719
post_5      1633.374343
post_2      1061.286013
post_3       991.512085
post_4       910.576542
dtype: float64","count    750.000000
mean      15.379382
std       15.675497
min        0.009763
25%        4.606124
50%       10.085385
75%       20.536708
max      104.924134
Name: % error, dtype: float64",8
19,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0, max_iter=100)",Performance,0.3,"post_0      4013.235196
post_1      2710.017512
post_6      2248.473532
cells_50    1914.576677
post_5      1594.899126
post_2      1033.609315
post_3       975.999635
post_4       870.272901
dtype: float64","count    750.000000
mean      15.311927
std       15.660213
min        0.007863
25%        4.586386
50%       10.018537
75%       20.613601
max      103.554285
Name: % error, dtype: float64",8
20,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.3,"cells_50    8.837629e+17
post_4      2.515028e+17
post_6      2.405503e+17
post_3      9.358925e+16
post_2      8.964238e+16
post_5      6.972762e+16
post_0      3.181235e+16
post_1      3.413400e+15
dtype: float64","count    750.000000
mean      16.167327
std       16.900735
min        0.025265
25%        4.832259
50%       11.058695
75%       20.897996
max      117.555108
Name: % error, dtype: float64",8
21,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.3,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    750.000000
mean      16.126546
std       17.630574
min        0.005399
25%        4.561773
50%       10.658072
75%       21.356074
max      130.105260
Name: % error, dtype: float64",8
22,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.3,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    750.000000
mean      15.919148
std       17.245888
min        0.002287
25%        4.493986
50%       10.452254
75%       21.120669
max      124.116688
Name: % error, dtype: float64",8
23,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.3,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    750.000000
mean      15.939366
std       17.246723
min        0.001834
25%        4.505363
50%       10.472149
75%       21.151681
max      124.312407
Name: % error, dtype: float64",8
24,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.4,"post_6      2.700187e+16
post_5      2.700187e+16
post_2      2.700187e+16
post_3      2.700187e+16
post_4      2.700187e+16
post_1      2.700187e+16
post_0      2.700187e+16
cells_50    2.081000e+03
dtype: float64","count    643.000000
mean      16.247327
std       16.347807
min        0.024563
25%        5.239487
50%       11.291840
75%       21.268063
max      123.780792
Name: % error, dtype: float64",8
25,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.4,"post_0      6448.552730
post_1      4061.862729
cells_50    1872.397862
post_6      1018.860007
post_5       481.486994
dtype: float64","count    643.000000
mean      16.000003
std       16.260745
min        0.008507
25%        4.561209
50%       11.129159
75%       21.997054
max      121.039932
Name: % error, dtype: float64",8
26,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=4),Performance,0.4,"post_0      4964.842658
post_1      2733.934939
post_6      2350.739226
cells_50    1972.450066
post_5      1858.555469
post_2      1310.931585
post_3      1245.565821
post_4       932.985495
dtype: float64","count    643.000000
mean      15.879637
std       16.177681
min        0.017135
25%        4.854538
50%       10.853375
75%       21.191041
max      119.117207
Name: % error, dtype: float64",8
27,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.1, max_iter=100)",Performance,0.4,"post_0      4675.137475
post_1      2619.521836
post_6      2262.918934
cells_50    1884.394667
post_5      1761.789573
post_2      1231.369552
post_3      1196.460511
post_4       841.814874
dtype: float64","count    643.000000
mean      15.688841
std       16.051354
min        0.008393
25%        4.701629
50%       10.591691
75%       21.102343
max      115.238339
Name: % error, dtype: float64",8
28,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.4,"cells_50    3.976757e+17
post_1      1.937267e+17
post_5      6.113050e+16
post_2      3.740956e+16
post_3      2.677805e+16
post_6      2.668746e+16
post_0      1.885604e+16
post_4      6.216055e+14
dtype: float64","count    643.000000
mean      16.747484
std       17.150408
min        0.005233
25%        5.151689
50%       11.050966
75%       22.008785
max      124.383904
Name: % error, dtype: float64",8
29,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.4,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    643.000000
mean      16.174427
std       16.629616
min        0.015689
25%        4.908274
50%       10.694161
75%       21.907244
max      124.833535
Name: % error, dtype: float64",8
30,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.4,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    643.000000
mean      16.228232
std       16.733689
min        0.006696
25%        4.855870
50%       10.751706
75%       22.167809
max      126.039526
Name: % error, dtype: float64",8
31,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.4,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    643.000000
mean      16.250304
std       16.727361
min        0.005937
25%        4.751067
50%       10.769835
75%       22.145773
max      126.132648
Name: % error, dtype: float64",8
32,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.5,"post_0      7.997735e+13
post_1      7.997735e+13
post_4      7.997735e+13
post_2      7.997735e+13
post_3      7.997735e+13
post_5      7.997735e+13
post_6      7.997735e+13
cells_50    1.948781e+03
dtype: float64","count    536.000000
mean      16.656161
std       16.612741
min        0.029725
25%        5.012267
50%       11.536320
75%       23.406294
max      131.184689
Name: % error, dtype: float64",8
33,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.5,"post_0      7005.819275
post_1      3745.995662
cells_50    1788.022697
post_6       958.794889
post_5       460.124708
dtype: float64","count    536.000000
mean      16.431594
std       16.498416
min        0.022268
25%        4.701282
50%       11.232389
75%       23.393724
max      128.296442
Name: % error, dtype: float64",8
34,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.5,"post_0      5088.486847
post_1      2286.434175
post_6      2240.452182
cells_50    1783.151610
post_5      1769.754503
post_3      1265.837546
post_2      1171.179292
post_4       927.697500
dtype: float64","count    536.000000
mean      16.003675
std       16.233266
min        0.013585
25%        4.715273
50%       10.342929
75%       23.446039
max      121.054741
Name: % error, dtype: float64",8
35,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.5,"post_0      4721.679013
post_6      2656.373173
post_5      2152.247698
post_1      1923.018754
cells_50    1771.753560
post_3      1639.497538
post_2      1519.950494
post_4      1202.117667
dtype: float64","count    536.000000
mean      16.049604
std       16.216101
min        0.036566
25%        4.945264
50%       10.659228
75%       23.304843
max      121.102825
Name: % error, dtype: float64",8
36,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.5,"cells_50    2.864074e+17
post_3      9.029518e+16
post_4      8.628928e+16
post_1      7.728210e+16
post_2      5.613244e+16
post_5      5.278367e+16
post_0      2.447664e+16
post_6      2.388522e+16
dtype: float64","count    536.000000
mean      16.896469
std       17.240831
min        0.007265
25%        5.016654
50%       11.232169
75%       24.406161
max      130.546136
Name: % error, dtype: float64",8
37,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.5,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    536.000000
mean      16.764938
std       17.404967
min        0.001463
25%        4.495616
50%       10.894642
75%       24.114957
max      135.369259
Name: % error, dtype: float64",8
38,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.5,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    536.000000
mean      16.654747
std       17.284634
min        0.019133
25%        4.601965
50%       11.054486
75%       24.164057
max      132.162949
Name: % error, dtype: float64",8
39,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.5,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    536.000000
mean      16.662829
std       17.281043
min        0.000683
25%        4.579485
50%       11.083538
75%       24.121168
max      132.238246
Name: % error, dtype: float64",8
40,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.6,"post_6      1.371497e+17
post_5      1.371497e+17
post_2      1.371497e+17
post_3      1.371497e+17
post_4      1.371497e+17
post_1      1.371497e+17
post_0      1.371497e+17
cells_50    2.112000e+03
dtype: float64","count    429.000000
mean      17.470197
std       17.423700
min        0.080596
25%        5.522981
50%       12.085460
75%       25.378066
max      135.580811
Name: % error, dtype: float64",8
41,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.6,"post_0      7380.732453
post_1      3826.906123
cells_50    1976.985599
post_6       982.004729
post_5       381.066499
dtype: float64","count    429.000000
mean      16.936250
std       17.216560
min        0.015220
25%        4.653955
50%       11.396895
75%       24.562795
max      133.640417
Name: % error, dtype: float64",8
42,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.6,"post_0      5473.404168
post_6      2358.545293
post_1      2326.916815
cells_50    1977.512851
post_5      1796.605654
post_3      1351.981837
post_2      1270.427237
post_4      1022.760961
dtype: float64","count    429.000000
mean      16.506034
std       16.853262
min        0.007365
25%        4.718726
50%       10.814627
75%       24.650196
max      127.456078
Name: % error, dtype: float64",8
43,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.05, max_iter=5)",Performance,0.6,"post_0      4913.928123
post_6      2580.705869
post_5      1987.377056
post_1      1972.068107
cells_50    1884.285962
post_3      1557.562718
post_2      1453.540876
post_4      1101.459804
dtype: float64","count    429.000000
mean      16.265948
std       16.656553
min        0.043635
25%        4.634721
50%       10.587996
75%       24.517666
max      123.430607
Name: % error, dtype: float64",8
44,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.6,"post_4      1.722326e+17
post_6      4.620234e+16
post_3      3.837783e+16
post_0      3.527244e+16
post_2      2.408912e+16
post_1      2.186862e+16
post_5      2.043244e+16
cells_50    8.862617e+15
dtype: float64","count    429.000000
mean      17.569146
std       17.844718
min        0.012553
25%        4.975448
50%       11.434657
75%       26.078435
max      140.091040
Name: % error, dtype: float64",8
45,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.6,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    429.000000
mean      17.234238
std       17.836314
min        0.005579
25%        4.517273
50%       11.034773
75%       26.330887
max      140.166941
Name: % error, dtype: float64",8
46,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.6,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    429.000000
mean      17.214341
std       17.831197
min        0.009555
25%        4.461470
50%       10.814872
75%       25.975466
max      138.960819
Name: % error, dtype: float64",8
47,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.6,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    429.000000
mean      17.225089
std       17.829832
min        0.013881
25%        4.513472
50%       10.821118
75%       25.981973
max      139.058452
Name: % error, dtype: float64",8
48,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.7,"post_0      5.007219e+15
post_1      5.007219e+15
post_2      5.007219e+15
post_4      5.007219e+15
post_3      5.007219e+15
post_5      5.007219e+15
post_6      5.007219e+15
cells_50    2.154500e+03
dtype: float64","count    322.000000
mean      17.168148
std       17.636694
min        0.011720
25%        5.094343
50%       11.335490
75%       24.693736
max      133.823919
Name: % error, dtype: float64",8
49,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.7,"post_0      7130.500807
post_1      3651.618225
cells_50    1985.348784
post_6       962.309307
post_5       361.567706
dtype: float64","count    322.000000
mean      16.877962
std       17.465919
min        0.000421
25%        4.469543
50%       11.340224
75%       24.754910
max      130.778150
Name: % error, dtype: float64",8
50,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.7,"post_0      5383.780145
post_6      2308.624140
post_1      2246.442975
cells_50    1995.696295
post_5      1748.906144
post_3      1366.288135
post_2      1156.040265
post_4      1050.364436
dtype: float64","count    322.000000
mean      16.584299
std       17.226433
min        0.017873
25%        4.488369
50%       10.728359
75%       23.782269
max      125.952158
Name: % error, dtype: float64",8
51,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.7,"post_0      4827.922799
post_6      2655.693284
post_5      2072.795469
cells_50    1925.002431
post_1      1833.674911
post_3      1685.038719
post_2      1455.359186
post_4      1237.725624
dtype: float64","count    322.000000
mean      16.434031
std       17.120239
min        0.021165
25%        4.383776
50%       10.863913
75%       24.064705
max      123.264374
Name: % error, dtype: float64",8
52,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.7,"cells_50    1.516983e+17
post_3      1.145102e+17
post_6      7.362560e+16
post_5      5.528586e+16
post_4      5.405337e+16
post_2      2.060650e+16
post_1      1.178256e+16
post_0      2.406839e+15
dtype: float64","count    322.000000
mean      18.014794
std       18.274125
min        0.020356
25%        5.565265
50%       11.983872
75%       25.346315
max      140.177901
Name: % error, dtype: float64",8
53,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.7,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    322.000000
mean      17.111175
std       17.926698
min        0.329014
25%        4.814310
50%       11.059200
75%       26.069059
max      136.319811
Name: % error, dtype: float64",8
54,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.7,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    322.000000
mean      17.154533
std       18.041163
min        0.342715
25%        4.611451
50%       11.055636
75%       26.087228
max      135.868160
Name: % error, dtype: float64",8
55,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.7,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    322.000000
mean      17.159320
std       18.041045
min        0.337393
25%        4.652055
50%       11.044514
75%       26.091319
max      135.938395
Name: % error, dtype: float64",8
56,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.8,"post_0      2.178773e+16
post_1      2.178773e+16
post_2      2.178773e+16
post_4      2.178773e+16
post_3      2.178773e+16
post_5      2.178773e+16
post_6      2.178773e+16
cells_50    2.243500e+03
dtype: float64","count    215.000000
mean      16.877505
std       17.061445
min        0.020390
25%        5.087978
50%       11.336086
75%       24.734524
max      135.738144
Name: % error, dtype: float64",8
57,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.8,"post_0      7256.072652
post_1      3608.576946
cells_50    2066.239222
post_6       805.286206
post_5       316.879110
dtype: float64","count    215.000000
mean      16.651966
std       16.785801
min        0.011025
25%        4.610050
50%       11.162574
75%       25.802127
max      132.409981
Name: % error, dtype: float64",8
58,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.8,"post_0      5509.142322
post_6      2222.433548
post_1      2182.590229
cells_50    2091.324363
post_5      1767.071645
post_3      1424.414334
post_2      1218.260977
post_4      1059.552047
dtype: float64","count    215.000000
mean      16.340894
std       16.478883
min        0.051480
25%        4.410587
50%       10.912478
75%       24.665305
max      128.213152
Name: % error, dtype: float64",8
59,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.8,"post_0      4888.329988
post_6      2538.588224
post_5      2056.025419
cells_50    1990.143685
post_1      1769.936796
post_3      1711.332203
post_2      1483.925696
post_4      1196.387036
dtype: float64","count    215.000000
mean      16.124047
std       16.258399
min        0.019782
25%        4.194071
50%       10.782494
75%       24.638842
max      124.403817
Name: % error, dtype: float64",8
60,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.8,"post_0      6.736950e+17
post_2      4.005403e+17
cells_50    3.563103e+17
post_1      3.212025e+17
post_5      2.263915e+17
post_3      1.951419e+17
post_4      7.328569e+16
post_6      1.391384e+16
dtype: float64","count    215.000000
mean      17.355673
std       17.873532
min        0.039519
25%        4.830876
50%       11.539161
75%       27.764064
max      147.957719
Name: % error, dtype: float64",8
61,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.8,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    215.000000
mean      16.863993
std       17.217697
min        0.143273
25%        4.562429
50%       11.171114
75%       27.073718
max      137.658311
Name: % error, dtype: float64",8
62,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.8,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    215.000000
mean      16.893364
std       17.270647
min        0.052327
25%        4.486305
50%       11.101226
75%       27.062973
max      138.071743
Name: % error, dtype: float64",8
63,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.8,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    215.000000
mean      16.910150
std       17.270667
min        0.080577
25%        4.513609
50%       11.168129
75%       27.004520
max      138.185778
Name: % error, dtype: float64",8
64,LinearRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.9,"post_6      9.441775e+16
post_5      9.441775e+16
post_3      9.441775e+16
post_4      9.441775e+16
post_2      9.441775e+16
post_1      9.441775e+16
post_0      9.441775e+16
cells_50    2.248000e+03
dtype: float64","count    108.000000
mean      17.123525
std       15.174420
min        0.123929
25%        5.121348
50%       11.899559
75%       27.220597
max       78.198637
Name: % error, dtype: float64",8
65,Lasso,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","Lasso(alpha=25, max_iter=100)",Performance,0.9,"post_0      7044.645555
post_1      3389.724193
cells_50    2074.328188
post_6       763.365001
post_5       328.620432
dtype: float64","count    108.000000
mean      16.902629
std       15.086174
min        0.022793
25%        4.647366
50%       11.022231
75%       27.741113
max       76.417054
Name: % error, dtype: float64",8
66,Ridge,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",Ridge(alpha=10),Performance,0.9,"post_0      5431.467734
post_6      2142.635614
cells_50    2115.731825
post_1      2044.297286
post_5      1739.929023
post_3      1385.414592
post_2      1175.643459
post_4      1032.142332
dtype: float64","count    108.000000
mean      16.605532
std       14.894256
min        0.656829
25%        4.596466
50%       10.751217
75%       27.447536
max       73.204960
Name: % error, dtype: float64",8
67,ElasticNet,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.9,"post_0      4775.601547
post_6      2454.980800
post_5      2019.163120
cells_50    1998.029405
post_3      1665.473033
post_1      1617.075423
post_2      1443.040472
post_4      1138.728735
dtype: float64","count    108.000000
mean      16.363420
std       14.799705
min        0.243118
25%        4.185681
50%       10.981808
75%       27.427683
max       70.854759
Name: % error, dtype: float64",8
68,PolynomialRegression,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",LinearRegression(),Performance,0.9,"cells_50    7.530610e+17
post_6      4.543449e+17
post_3      4.485476e+17
post_1      3.977503e+17
post_2      3.748810e+17
post_5      2.719639e+17
post_0      1.827429e+17
post_4      8.912698e+16
dtype: float64","count    108.000000
mean      19.516773
std       14.936008
min        0.776808
25%        8.352656
50%       14.218119
75%       29.144942
max       72.134982
Name: % error, dtype: float64",8
69,RandomForest,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",RandomForestRegressor(),Performance,0.9,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    108.000000
mean      16.877371
std       14.927740
min        0.532383
25%        4.961624
50%       11.131757
75%       29.080704
max       67.913397
Name: % error, dtype: float64",8
70,GradientBoostingTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.9,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    108.000000
mean      16.866365
std       14.960780
min        0.606555
25%        4.751953
50%       11.272789
75%       29.054130
max       67.631135
Name: % error, dtype: float64",8
71,DecisionTree,False,DecisionTree,"Index(['post_6', 'post_5', 'post_3', 'post_2', 'post_4', 'post_1', 'post_0',
       'cells_50'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.9,"post_6     NaN
post_5     NaN
post_3     NaN
post_2     NaN
post_4     NaN
post_1     NaN
post_0     NaN
cells_50   NaN
Name: % error, dtype: float64","count    108.000000
mean      16.869820
std       14.954841
min        0.572981
25%        4.810965
50%       11.321231
75%       29.076522
max       67.580266
Name: % error, dtype: float64",8
