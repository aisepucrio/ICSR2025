,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    29.087111
no_8x8dct    15.045111
dtype: float64","count    191.000000
mean       3.265230
std        7.742054
min        0.006130
25%        1.171846
50%        1.973755
75%        2.947440
max       56.044760
Name: % error, dtype: float64",4
1,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.3, max_iter=10)",Performance,0.1,"no_mbtree    28.037161
no_8x8dct    13.995103
dtype: float64","count    191.000000
mean       3.335669
std        7.731019
min        0.006121
25%        1.316277
50%        1.704100
75%        3.285514
max       55.865384
Name: % error, dtype: float64",4
2,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.1),Performance,0.1,"no_mbtree    28.565284
no_8x8dct    14.843460
dtype: float64","count    191.000000
mean       3.299270
std        7.732070
min        0.013311
25%        1.238778
50%        1.862166
75%        3.056550
max       55.979054
Name: % error, dtype: float64",4
3,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=10)",Performance,0.1,"no_mbtree    28.037161
no_8x8dct    13.995103
dtype: float64","count    191.000000
mean       3.335669
std        7.731019
min        0.006121
25%        1.316277
50%        1.704100
75%        3.285514
max       55.865384
Name: % error, dtype: float64",4
4,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    1.008370e+01
no_8x8dct    4.627037e+00
ref_9        1.776357e-15
dtype: float64","count    191.000000
mean       3.240254
std        7.693519
min        0.100911
25%        1.101274
50%        1.930214
75%        2.822512
max       55.697487
Name: % error, dtype: float64",4
5,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.232972
std        7.711893
min        0.046071
25%        1.054251
50%        1.857278
75%        2.867260
max       55.816535
Name: % error, dtype: float64",4
6,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.241878
std        7.702140
min        0.100964
25%        1.101410
50%        1.930265
75%        2.822696
max       55.697449
Name: % error, dtype: float64",4
7,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.220525
std        7.587052
min        0.100911
25%        1.101274
50%        1.930214
75%        2.822512
max       55.697487
Name: % error, dtype: float64",4
8,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    29.871587
no_8x8dct    14.989803
dtype: float64","count    170.000000
mean       3.333581
std        8.220818
min        0.001836
25%        0.957922
50%        1.863901
75%        2.901475
max       56.206593
Name: % error, dtype: float64",4
9,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.2, max_iter=5)",Performance,0.2,"no_mbtree    29.071587
no_8x8dct    14.187985
dtype: float64","count    170.000000
mean       3.388370
std        8.208838
min        0.015267
25%        1.119917
50%        1.780460
75%        3.153506
max       56.066506
Name: % error, dtype: float64",4
10,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.2),Performance,0.2,"no_mbtree    29.313240
no_8x8dct    14.708995
dtype: float64","count    170.000000
mean       3.367753
std        8.209975
min        0.017257
25%        1.072636
50%        1.861647
75%        3.034577
max       56.133771
Name: % error, dtype: float64",4
11,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=5)",Performance,0.2,"no_mbtree    29.071587
no_8x8dct    14.187985
dtype: float64","count    170.000000
mean       3.388370
std        8.208838
min        0.015267
25%        1.119917
50%        1.780460
75%        3.153506
max       56.066506
Name: % error, dtype: float64",4
12,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    1.077758e+01
no_8x8dct    4.135202e+00
ref_9        1.776357e-15
dtype: float64","count    170.000000
mean       3.351718
std        8.164737
min        0.012115
25%        0.872862
50%        2.045841
75%        2.681934
max       55.935211
Name: % error, dtype: float64",4
13,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.323828
std        8.171736
min        0.032165
25%        0.828568
50%        2.090349
75%        2.598946
max       55.964161
Name: % error, dtype: float64",4
14,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.352570
std        8.168852
min        0.012026
25%        0.872757
50%        2.045787
75%        2.682062
max       55.935172
Name: % error, dtype: float64",4
15,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.331908
std        8.063791
min        0.012115
25%        0.872862
50%        2.045841
75%        2.681934
max       55.935211
Name: % error, dtype: float64",4
16,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree    30.751939
no_8x8dct    14.135438
dtype: float64","count    149.000000
mean       3.575404
std        8.779662
min        0.003489
25%        0.712019
50%        1.888084
75%        3.046239
max       56.275052
Name: % error, dtype: float64",4
17,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.3,"no_mbtree    30.711192
no_8x8dct    14.094853
dtype: float64","count    149.000000
mean       3.577446
std        8.779255
min        0.003278
25%        0.711807
50%        1.874091
75%        3.059555
max       56.268216
Name: % error, dtype: float64",4
18,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"no_mbtree    30.732191
no_8x8dct    14.126209
dtype: float64","count    149.000000
mean       3.576187
std        8.779375
min        0.005227
25%        0.713770
50%        1.882986
75%        3.051090
max       56.272673
Name: % error, dtype: float64",4
19,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.3,"no_mbtree    30.711192
no_8x8dct    14.094853
dtype: float64","count    149.000000
mean       3.577446
std        8.779255
min        0.003278
25%        0.711807
50%        1.874091
75%        3.059555
max       56.268216
Name: % error, dtype: float64",4
20,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.3,"no_8x8dct    3.208980e+14
no_mbtree    1.076809e+13
ref_9        1.109493e+12
dtype: float64","count    1.490000e+02
mean     4.384910e+11
std      3.801774e+12
min      1.960584e-02
25%      9.325934e-01
50%      2.191487e+00
75%      3.034523e+00
max      3.782392e+13
Name: % error, dtype: float64",4
21,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.585401
std        8.718837
min        0.050100
25%        0.912454
50%        2.230118
75%        3.013740
max       56.128142
Name: % error, dtype: float64",4
22,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.595789
std        8.717897
min        0.060783
25%        0.921464
50%        2.200039
75%        2.997369
max       56.123458
Name: % error, dtype: float64",4
23,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.607025
std        8.772815
min        0.060698
25%        0.921249
50%        2.199969
75%        2.997154
max       56.123495
Name: % error, dtype: float64",4
24,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.4,"ref_1        167.825658
no_mbtree     31.641198
no_8x8dct     15.039024
dtype: float64","count    128.000000
mean       2.560462
std        4.188705
min        0.050328
25%        0.761298
50%        2.053391
75%        2.816795
max       28.525753
Name: % error, dtype: float64",4
25,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.3, max_iter=5)",Performance,0.4,"ref_1        140.360049
no_mbtree     29.808180
no_8x8dct     13.056269
dtype: float64","count    128.000000
mean       2.864432
std        4.856450
min        0.039964
25%        1.185535
50%        1.709167
75%        3.254021
max       32.960354
Name: % error, dtype: float64",4
26,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.2),Performance,0.4,"ref_1        138.77768
no_mbtree     30.70289
no_8x8dct     14.10580
dtype: float64","count    128.000000
mean       2.790664
std        4.900054
min        0.012653
25%        0.929495
50%        1.882873
75%        2.913372
max       33.206041
Name: % error, dtype: float64",4
27,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=5)",Performance,0.4,"ref_1        140.360049
no_mbtree     29.808180
no_8x8dct     13.056269
dtype: float64","count    128.000000
mean       2.864432
std        4.856450
min        0.039964
25%        1.185535
50%        1.709167
75%        3.254021
max       32.960354
Name: % error, dtype: float64",4
28,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.4,"no_8x8dct    1.576307e+15
ref_1        4.162915e+14
no_mbtree    6.287095e+13
ref_9        2.179598e+13
dtype: float64","count    1.280000e+02
mean     1.020678e+13
std      6.686606e+13
min      1.901141e-01
25%      9.356007e-01
50%      2.250890e+00
75%      2.995908e+00
max      5.356782e+14
Name: % error, dtype: float64",4
29,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.930951
std        5.878376
min        0.074414
25%        0.793274
50%        2.120637
75%        2.699830
max       39.737814
Name: % error, dtype: float64",4
30,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.621592
std        4.426346
min        0.029868
25%        0.785714
50%        2.130549
75%        2.723784
max       30.979841
Name: % error, dtype: float64",4
31,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.621529
std        4.426251
min        0.030114
25%        0.785515
50%        2.130627
75%        2.723654
max       30.979221
Name: % error, dtype: float64",4
32,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.5,"ref_1        169.375876
ref_9        162.273333
no_mbtree     32.330699
no_8x8dct     15.929301
dtype: float64","count    106.000000
mean       1.828881
std        1.166109
min        0.086807
25%        0.768921
50%        1.906749
75%        2.802579
max        3.854096
Name: % error, dtype: float64",4
33,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.5, max_iter=1)",Performance,0.5,"ref_1        200.003750
ref_9         68.395934
no_mbtree     28.960134
no_8x8dct     13.352296
dtype: float64","count    106.000000
mean       2.205058
std        1.961160
min        0.029699
25%        0.785020
50%        1.973397
75%        3.410717
max       12.124859
Name: % error, dtype: float64",4
34,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.3),Performance,0.5,"ref_1        159.324969
ref_9        131.294265
no_mbtree     31.122830
no_8x8dct     14.769281
dtype: float64","count    106.000000
mean       1.987491
std        1.533861
min        0.012330
25%        0.544770
50%        1.941218
75%        2.903711
max        8.522277
Name: % error, dtype: float64",4
35,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.5, l1_ratio=1.0, max_iter=1)",Performance,0.5,"ref_1        200.003750
ref_9         68.395934
no_mbtree     28.960134
no_8x8dct     13.352296
dtype: float64","count    106.000000
mean       2.205058
std        1.961160
min        0.029699
25%        0.785020
50%        1.973397
75%        3.410717
max       12.124859
Name: % error, dtype: float64",4
36,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.5,"no_8x8dct    1.532565e+14
ref_1        1.281756e+14
no_mbtree    3.469118e+13
ref_9        1.686636e+13
dtype: float64","count    1.060000e+02
mean     6.118009e+12
std      3.647076e+13
min      3.404211e-02
25%      8.848941e-01
50%      2.170409e+00
75%      2.648693e+00
max      2.640697e+14
Name: % error, dtype: float64",4
37,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.299288
std        3.308839
min        0.006209
25%        0.794852
50%        2.129469
75%        2.561537
max       24.631394
Name: % error, dtype: float64",4
38,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.001675
std        1.535848
min        0.014925
25%        0.790552
50%        2.129218
75%        2.537500
max        9.524170
Name: % error, dtype: float64",4
39,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.407096
std        4.126703
min        0.014800
25%        0.790752
50%        2.129059
75%        2.537317
max       30.979221
Name: % error, dtype: float64",4
40,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        168.882358
ref_9        162.273333
no_mbtree     31.643303
no_8x8dct     15.762220
dtype: float64","count    85.000000
mean      1.819035
std       1.195642
min       0.006941
25%       0.666193
50%       1.896461
75%       2.799616
max       4.048645
Name: % error, dtype: float64",4
41,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.8, max_iter=5)",Performance,0.6,"ref_1        163.901619
ref_9         59.643633
no_mbtree     26.542626
no_8x8dct     10.521455
dtype: float64","count    85.000000
mean      2.811290
std       3.044337
min       0.102144
25%       1.086831
50%       2.375318
75%       4.151199
max      19.362958
Name: % error, dtype: float64",4
42,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.6,"ref_1        168.751703
ref_9        160.745932
no_mbtree     31.605289
no_8x8dct     15.726519
dtype: float64","count    85.000000
mean      1.826961
std       1.198492
min       0.015521
25%       0.671747
50%       1.916744
75%       2.807066
max       4.069356
Name: % error, dtype: float64",4
43,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.01, max_iter=5)",Performance,0.6,"ref_1        145.054763
ref_9        111.710176
no_mbtree     29.489310
no_8x8dct     13.775854
dtype: float64","count    85.000000
mean      2.322235
std       2.290469
min       0.026852
25%       0.896729
50%       1.743232
75%       3.223044
max      13.934060
Name: % error, dtype: float64",4
44,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        1.449893e+15
no_mbtree    2.636768e+14
no_8x8dct    2.090690e+14
ref_9        3.782116e+13
dtype: float64","count    8.500000e+01
mean     3.695154e+12
std      1.974816e+13
min      6.542790e-03
25%      6.994038e-01
50%      2.105573e+00
75%      2.571116e+00
max      1.309756e+14
Name: % error, dtype: float64",4
45,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.171213
std       2.659144
min       0.081971
25%       0.673462
50%       2.205624
75%       2.577977
max      17.608532
Name: % error, dtype: float64",4
46,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.127471
std       2.061216
min       0.142766
25%       0.758837
50%       2.234367
75%       2.638180
max      13.111242
Name: % error, dtype: float64",4
47,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.548491
std       4.575826
min       0.142494
25%       0.758804
50%       2.234090
75%       2.637998
max      30.979221
Name: % error, dtype: float64",4
48,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        169.300594
ref_9        162.273333
no_mbtree     31.974783
no_8x8dct     16.307201
dtype: float64","count    64.000000
mean      1.892172
std       1.158596
min       0.025902
25%       0.806146
50%       1.872030
75%       2.780916
max       3.916818
Name: % error, dtype: float64",4
49,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.2, max_iter=1)",Performance,0.7,"ref_1        211.946164
ref_9         80.553249
no_mbtree     29.326101
no_8x8dct     15.415194
dtype: float64","count    64.000000
mean      2.347265
std       1.832193
min       0.112323
25%       0.811601
50%       2.158330
75%       3.275336
max       9.169065
Name: % error, dtype: float64",4
50,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.3),Performance,0.7,"ref_1        159.608202
ref_9        131.347371
no_mbtree     31.038984
no_8x8dct     15.443037
dtype: float64","count    64.000000
mean      2.154988
std       1.647870
min       0.066798
25%       0.680049
50%       2.130977
75%       2.941614
max       8.414959
Name: % error, dtype: float64",4
51,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=1)",Performance,0.7,"ref_1        211.946164
ref_9         80.553249
no_mbtree     29.326101
no_8x8dct     15.415194
dtype: float64","count    64.000000
mean      2.347265
std       1.832193
min       0.112323
25%       0.811601
50%       2.158330
75%       3.275336
max       9.169065
Name: % error, dtype: float64",4
52,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        61.327667
ref_9        54.091111
no_8x8dct    15.516619
no_mbtree    11.184911
dtype: float64","count    64.000000
mean      2.548995
std       3.273949
min       0.048304
25%       0.819422
50%       2.213595
75%       2.545271
max      18.393127
Name: % error, dtype: float64",4
53,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.561477
std       3.770702
min       0.009876
25%       0.791920
50%       2.176011
75%       2.544032
max      22.532252
Name: % error, dtype: float64",4
54,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.454806
std       3.167017
min       0.048036
25%       0.819272
50%       2.213563
75%       2.545365
max      18.885458
Name: % error, dtype: float64",4
55,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.004693
std       1.225359
min       0.048304
25%       0.819422
50%       2.213595
75%       2.545271
max       4.505930
Name: % error, dtype: float64",4
56,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.8,"ref_1        170.966275
ref_9        167.637794
no_mbtree     32.640332
no_8x8dct     16.919905
dtype: float64","count    43.000000
mean      1.759195
std       1.074925
min       0.053211
25%       0.918698
50%       1.512757
75%       2.436961
max       3.921198
Name: % error, dtype: float64",4
57,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.8,"ref_1        170.574059
ref_9        162.049981
no_mbtree     32.002958
no_8x8dct     16.536204
dtype: float64","count    43.000000
mean      1.744455
std       1.105383
min       0.068395
25%       0.876434
50%       1.744179
75%       2.531826
max       4.005362
Name: % error, dtype: float64",4
58,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.02),Performance,0.8,"ref_1        170.875915
ref_9        166.570337
no_mbtree     32.584679
no_8x8dct     16.920164
dtype: float64","count    43.000000
mean      1.758686
std       1.074621
min       0.070779
25%       0.918674
50%       1.531667
75%       2.436895
max       3.939445
Name: % error, dtype: float64",4
59,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=100)",Performance,0.8,"ref_1        170.574059
ref_9        162.049981
no_mbtree     32.002958
no_8x8dct     16.536204
dtype: float64","count    43.000000
mean      1.744455
std       1.105383
min       0.068395
25%       0.876434
50%       1.744179
75%       2.531826
max       4.005362
Name: % error, dtype: float64",4
60,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.8,"no_8x8dct    4.129091e+14
no_mbtree    2.088318e+13
ref_1        1.798255e+13
ref_9        1.046156e+12
dtype: float64","count    43.000000
mean      1.679839
std       1.094341
min       0.054328
25%       0.753786
50%       1.998455
75%       2.347139
max       4.212636
Name: % error, dtype: float64",4
61,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.691587
std       1.066221
min       0.001549
25%       0.837999
50%       1.861087
75%       2.277762
max       4.012524
Name: % error, dtype: float64",4
62,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.689333
std       1.061107
min       0.046772
25%       0.820766
50%       1.910309
75%       2.226548
max       4.062785
Name: % error, dtype: float64",4
63,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.689328
std       1.061104
min       0.046450
25%       0.820926
50%       1.909980
75%       2.226389
max       4.062450
Name: % error, dtype: float64",4
64,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.9,"ref_1        171.034274
ref_9        167.593791
no_mbtree     32.688288
no_8x8dct     17.183921
dtype: float64","count    22.000000
mean      1.646978
std       1.178342
min       0.076917
25%       0.639723
50%       1.411634
75%       2.372087
max       3.880762
Name: % error, dtype: float64",4
65,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.9,"ref_1        170.637322
ref_9        161.302194
no_mbtree     32.061683
no_8x8dct     16.821482
dtype: float64","count    22.000000
mean      1.614172
std       1.192241
min       0.149360
25%       0.545358
50%       1.538227
75%       2.498495
max       3.819271
Name: % error, dtype: float64",4
66,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.9,"ref_1        170.992953
ref_9        167.056478
no_mbtree     32.663065
no_8x8dct     17.184762
dtype: float64","count    22.000000
mean      1.646510
std       1.177138
min       0.085087
25%       0.643802
50%       1.411640
75%       2.373107
max       3.872702
Name: % error, dtype: float64",4
67,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=100)",Performance,0.9,"ref_1        170.637322
ref_9        161.302194
no_mbtree     32.061683
no_8x8dct     16.821482
dtype: float64","count    22.000000
mean      1.614172
std       1.192241
min       0.149360
25%       0.545358
50%       1.538227
75%       2.498495
max       3.819271
Name: % error, dtype: float64",4
68,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.9,"no_mbtree    1.314752e+15
no_8x8dct    6.266918e+13
ref_1        1.320528e+13
ref_9        9.353929e+11
dtype: float64","count    22.000000
mean      1.528574
std       1.193550
min       0.028484
25%       0.510666
50%       1.464324
75%       2.050082
max       3.908493
Name: % error, dtype: float64",4
69,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.563242
std       1.161541
min       0.012232
25%       0.620078
50%       1.436991
75%       2.128169
max       3.987285
Name: % error, dtype: float64",4
70,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.562933
std       1.164768
min       0.011350
25%       0.616764
50%       1.358187
75%       2.165354
max       4.025941
Name: % error, dtype: float64",4
71,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.562930
std       1.164806
min       0.011031
25%       0.616763
50%       1.358356
75%       2.165231
max       4.025609
Name: % error, dtype: float64",4
72,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree        3.220708e+01
no_8x8dct        1.716606e+01
no_cabac         1.039988e+01
no_fast_pskip    5.322857e+00
ref_9            7.105427e-15
dtype: float64","count    191.000000
mean       1.699204
std        7.924212
min        0.002646
25%        0.209731
50%        0.369093
75%        0.608710
max       56.473321
Name: % error, dtype: float64",6
73,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","Lasso(alpha=0.1, max_iter=5)",Performance,0.1,"no_mbtree        31.638046
no_8x8dct        16.591486
no_cabac          9.663791
no_fast_pskip     4.722943
dtype: float64","count    191.000000
mean       1.779171
std        7.900438
min        0.003438
25%        0.298434
50%        0.489223
75%        0.700228
max       56.357948
Name: % error, dtype: float64",6
74,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",Ridge(alpha=0.01),Performance,0.1,"no_mbtree        32.132294
no_8x8dct        17.132837
no_cabac         10.345787
no_fast_pskip     5.299264
dtype: float64","count    191.000000
mean       1.704980
std        7.921990
min        0.001272
25%        0.210874
50%        0.376241
75%        0.609591
max       56.464117
Name: % error, dtype: float64",6
75,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=5)",Performance,0.1,"no_mbtree        31.638046
no_8x8dct        16.591486
no_cabac          9.663791
no_fast_pskip     4.722943
dtype: float64","count    191.000000
mean       1.779171
std        7.900438
min        0.003438
25%        0.298434
50%        0.489223
75%        0.700228
max       56.357948
Name: % error, dtype: float64",6
76,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree        1.197694e+01
no_8x8dct        4.443622e+00
no_cabac         3.870563e+00
no_fast_pskip    2.166378e+00
ref_1            3.996803e-15
dtype: float64","count    191.000000
mean       1.674241
std        7.908694
min        0.001164
25%        0.084019
50%        0.243211
75%        0.602424
max       56.050911
Name: % error, dtype: float64",6
77,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",RandomForestRegressor(),Performance,0.1,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    191.000000
mean       2.098172
std        7.838228
min        0.000249
25%        0.245788
50%        0.774873
75%        1.278560
max       56.036834
Name: % error, dtype: float64",6
78,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.1,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    191.000000
mean       1.628197
std        7.932760
min        0.000248
25%        0.067991
50%        0.210319
75%        0.579268
max       56.065244
Name: % error, dtype: float64",6
79,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.1,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    1.910000e+02
mean     2.079581e+00
std      7.805455e+00
min      1.706991e-13
25%      5.309792e-02
50%      2.650947e-01
75%      1.598351e+00
max      5.606800e+01
Name: % error, dtype: float64",6
80,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree        3.192193e+01
no_8x8dct        1.743287e+01
no_cabac         1.087464e+01
no_fast_pskip    5.216663e+00
ref_9            5.773160e-15
dtype: float64","count    170.000000
mean       1.853244
std        8.372027
min        0.002216
25%        0.168106
50%        0.299502
75%        0.645407
max       56.403674
Name: % error, dtype: float64",6
81,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","Lasso(alpha=0.02, max_iter=5)",Performance,0.2,"no_mbtree        31.816081
no_8x8dct        17.314433
no_cabac         10.766812
no_fast_pskip     5.106667
dtype: float64","count    170.000000
mean       1.865003
std        8.367412
min        0.012044
25%        0.198102
50%        0.327682
75%        0.621846
max       56.380770
Name: % error, dtype: float64",6
82,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",Ridge(alpha=0.02),Performance,0.2,"no_mbtree        31.853845
no_8x8dct        17.390007
no_cabac         10.838604
no_fast_pskip     5.192872
dtype: float64","count    170.000000
mean       1.857104
std        8.370213
min        0.001964
25%        0.181105
50%        0.309429
75%        0.647645
max       56.394092
Name: % error, dtype: float64",6
83,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","ElasticNet(alpha=0.02, l1_ratio=1.0, max_iter=5)",Performance,0.2,"no_mbtree        31.816081
no_8x8dct        17.314433
no_cabac         10.766812
no_fast_pskip     5.106667
dtype: float64","count    170.000000
mean       1.865003
std        8.367412
min        0.012044
25%        0.198102
50%        0.327682
75%        0.621846
max       56.380770
Name: % error, dtype: float64",6
84,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree        1.153441e+01
no_8x8dct        4.767348e+00
no_cabac         3.108443e+00
no_fast_pskip    2.277976e+00
ref_9            1.443290e-15
ref_1            1.228955e-15
dtype: float64","count    170.000000
mean       1.680775
std        8.361909
min        0.001730
25%        0.070297
50%        0.150921
75%        0.386948
max       55.874222
Name: % error, dtype: float64",6
85,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",RandomForestRegressor(),Performance,0.2,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    170.000000
mean       1.910171
std        8.344295
min        0.001426
25%        0.162524
50%        0.416081
75%        0.651807
max       55.998299
Name: % error, dtype: float64",6
86,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.2,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    170.000000
mean       1.677583
std        8.356583
min        0.000132
25%        0.066440
50%        0.122364
75%        0.430849
max       55.962739
Name: % error, dtype: float64",6
87,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.2,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    170.000000
mean       1.666468
std        8.267094
min        0.001074
25%        0.064522
50%        0.124259
75%        0.421299
max       55.993496
Name: % error, dtype: float64",6
88,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree        3.236190e+01
no_8x8dct        1.716076e+01
no_cabac         1.074469e+01
no_fast_pskip    5.553741e+00
ref_9            1.421085e-14
dtype: float64","count    149.000000
mean       2.044738
std        8.948371
min        0.003006
25%        0.156177
50%        0.316871
75%        0.665502
max       56.483185
Name: % error, dtype: float64",6
89,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","Lasso(alpha=0.01, max_iter=10)",Performance,0.3,"no_mbtree        32.309006
no_8x8dct        17.093403
no_cabac         10.675107
no_fast_pskip     5.488259
dtype: float64","count    149.000000
mean       2.046887
std        8.946807
min        0.000532
25%        0.179829
50%        0.327849
75%        0.660138
max       56.471822
Name: % error, dtype: float64",6
90,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",Ridge(alpha=0.01),Performance,0.3,"no_mbtree        32.338824
no_8x8dct        17.144993
no_cabac         10.730402
no_fast_pskip     5.543913
dtype: float64","count    149.000000
mean       2.045138
std        8.947916
min        0.004284
25%        0.161269
50%        0.323284
75%        0.667526
max       56.480013
Name: % error, dtype: float64",6
91,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=10)",Performance,0.3,"no_mbtree        32.309006
no_8x8dct        17.093403
no_cabac         10.675107
no_fast_pskip     5.488259
dtype: float64","count    149.000000
mean       2.046887
std        8.946807
min        0.000532
25%        0.179829
50%        0.327849
75%        0.660138
max       56.471822
Name: % error, dtype: float64",6
92,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.3,"no_8x8dct        2.877653e+14
no_cabac         2.992425e+13
no_mbtree        7.207616e+12
ref_1            6.844862e+12
ref_9            4.531945e+12
no_fast_pskip    4.421115e+12
dtype: float64","count    1.490000e+02
mean     4.336965e+11
std      3.571043e+12
min      5.630446e-04
25%      8.661504e-02
50%      1.620870e-01
75%      4.115018e-01
max      3.577940e+13
Name: % error, dtype: float64",6
93,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",RandomForestRegressor(),Performance,0.3,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    149.000000
mean       1.987136
std        8.931785
min        0.006532
25%        0.098642
50%        0.251445
75%        0.628134
max       56.042033
Name: % error, dtype: float64",6
94,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.3,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    149.000000
mean       1.859623
std        8.929053
min        0.000078
25%        0.049648
50%        0.124416
75%        0.375646
max       56.032456
Name: % error, dtype: float64",6
95,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.3,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    149.000000
mean       1.841228
std        8.828257
min        0.001074
25%        0.058493
50%        0.122730
75%        0.371171
max       56.041661
Name: % error, dtype: float64",6
96,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.4,"ref_1            1.683393e+02
no_mbtree        3.240107e+01
no_8x8dct        1.707074e+01
no_cabac         1.032003e+01
no_fast_pskip    5.438623e+00
ref_9            7.105427e-15
dtype: float64","count    128.000000
mean       1.064478
std        4.195296
min        0.001596
25%        0.202347
50%        0.337577
75%        0.592339
max       28.194299
Name: % error, dtype: float64",6
97,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.4,"ref_1            143.973133
no_mbtree         30.893020
no_8x8dct         14.344321
no_cabac          10.196012
no_fast_pskip      4.454979
dtype: float64","count    128.000000
mean       1.525895
std        4.746329
min        0.014126
25%        0.498854
50%        0.777810
75%        1.069191
max       32.137263
Name: % error, dtype: float64",6
98,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",Ridge(alpha=0.05),Performance,0.4,"ref_1            159.812679
no_mbtree         32.124409
no_8x8dct         16.776407
no_cabac          10.389329
no_fast_pskip      5.185185
dtype: float64","count    128.000000
mean       1.145561
std        4.394225
min        0.030553
25%        0.254155
50%        0.391247
75%        0.580688
max       29.545909
Name: % error, dtype: float64",6
99,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.4,"ref_1            143.973133
no_mbtree         30.893020
no_8x8dct         14.344321
no_cabac          10.196012
no_fast_pskip      4.454979
dtype: float64","count    128.000000
mean       1.525895
std        4.746329
min        0.014126
25%        0.498854
50%        0.777810
75%        1.069191
max       32.137263
Name: % error, dtype: float64",6
100,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.4,"no_8x8dct        1.490628e+14
ref_1            5.140223e+13
no_mbtree        3.549343e+13
no_fast_pskip    2.411324e+13
ref_9            5.680194e+12
no_cabac         3.924594e+12
dtype: float64","count    1.280000e+02
mean     1.252213e+12
std      8.157690e+12
min      5.968011e-03
25%      8.066262e-02
50%      1.881263e-01
75%      4.041746e-01
max      6.439285e+13
Name: % error, dtype: float64",6
101,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",RandomForestRegressor(),Performance,0.4,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    128.000000
mean       1.336254
std        6.299657
min        0.001646
25%        0.097784
50%        0.160879
75%        0.404311
max       41.247060
Name: % error, dtype: float64",6
102,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.4,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    128.000000
mean       0.982652
std        4.601342
min        0.000004
25%        0.094147
50%        0.141142
75%        0.385582
max       31.742868
Name: % error, dtype: float64",6
103,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.4,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    128.000000
mean       0.962070
std        4.513662
min        0.002457
25%        0.089439
50%        0.142929
75%        0.383226
max       30.979221
Name: % error, dtype: float64",6
104,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.5,"ref_1            168.334613
ref_9            162.273333
no_mbtree         32.421409
no_8x8dct         17.101080
no_cabac          10.485879
no_fast_pskip      5.470783
dtype: float64","count    106.000000
mean       0.441964
std        0.358189
min        0.003423
25%        0.178207
50%        0.332453
75%        0.591216
max        1.716058
Name: % error, dtype: float64",6
105,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","Lasso(alpha=0.2, max_iter=1)",Performance,0.5,"ref_1            216.209519
ref_9             85.256321
no_mbtree         30.729730
no_8x8dct         15.498616
no_cabac           9.479595
no_fast_pskip      4.677301
dtype: float64","count    106.000000
mean       0.785360
std        1.281292
min        0.012539
25%        0.188706
50%        0.688008
75%        0.937987
max       10.308923
Name: % error, dtype: float64",6
106,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",Ridge(alpha=0.01),Performance,0.5,"ref_1            168.168625
ref_9            160.740215
no_mbtree         32.374535
no_8x8dct         17.054307
no_cabac          10.510315
no_fast_pskip      5.427644
dtype: float64","count    106.000000
mean       0.450211
std        0.372041
min        0.000594
25%        0.191413
50%        0.332321
75%        0.592612
max        1.985920
Name: % error, dtype: float64",6
107,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=1)",Performance,0.5,"ref_1            216.209519
ref_9             85.256321
no_mbtree         30.729730
no_8x8dct         15.498616
no_cabac           9.479595
no_fast_pskip      4.677301
dtype: float64","count    106.000000
mean       0.785360
std        1.281292
min        0.012539
25%        0.188706
50%        0.688008
75%        0.937987
max       10.308923
Name: % error, dtype: float64",6
108,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.5,"no_8x8dct        8.032463e+13
no_cabac         1.847835e+13
no_mbtree        1.522348e+13
ref_9            1.058407e+13
no_fast_pskip    8.581610e+12
ref_1            7.734733e+12
dtype: float64","count    1.060000e+02
mean     6.741818e+11
std      4.008620e+12
min      5.072093e-03
25%      8.033817e-02
50%      1.858445e-01
75%      4.091887e-01
max      2.851810e+13
Name: % error, dtype: float64",6
109,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",RandomForestRegressor(),Performance,0.5,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    106.000000
mean       0.708199
std        3.047954
min        0.001601
25%        0.094567
50%        0.163091
75%        0.386635
max       22.262764
Name: % error, dtype: float64",6
110,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.5,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    106.000000
mean       0.595211
std        2.333018
min        0.004699
25%        0.087791
50%        0.142095
75%        0.409054
max       17.138516
Name: % error, dtype: float64",6
111,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.5,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    106.000000
mean       0.854477
std        4.206722
min        0.003572
25%        0.093513
50%        0.144441
75%        0.378795
max       30.979221
Name: % error, dtype: float64",6
112,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.6,"ref_1            168.309322
ref_9            162.273333
no_mbtree         32.368990
no_8x8dct         17.147611
no_cabac          10.568699
no_fast_pskip      5.366548
dtype: float64","count    85.000000
mean      0.436774
std       0.378267
min       0.010333
25%       0.193233
50%       0.317658
75%       0.612946
max       1.708467
Name: % error, dtype: float64",6
113,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","Lasso(alpha=0.5, max_iter=5)",Performance,0.6,"ref_1            165.130734
ref_9             96.676021
no_mbtree         28.804471
no_8x8dct         13.357183
no_cabac           9.126111
no_fast_pskip      1.722128
dtype: float64","count    85.000000
mean      1.506784
std       1.869795
min       0.049082
25%       0.644498
50%       1.275430
75%       1.990625
max      12.677701
Name: % error, dtype: float64",6
114,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",Ridge(alpha=0.01),Performance,0.6,"ref_1            168.157603
ref_9            160.740107
no_mbtree         32.327621
no_8x8dct         17.108360
no_cabac          10.585907
no_fast_pskip      5.330419
dtype: float64","count    85.000000
mean      0.446120
std       0.396023
min       0.004934
25%       0.203060
50%       0.320753
75%       0.619810
max       1.977102
Name: % error, dtype: float64",6
115,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","ElasticNet(alpha=0.01, max_iter=5)",Performance,0.6,"ref_1            143.679702
ref_9            111.330208
no_mbtree         30.041424
no_8x8dct         14.972062
no_cabac          11.431953
no_fast_pskip      3.393761
dtype: float64","count    85.000000
mean      1.207887
std       2.057856
min       0.063736
25%       0.485307
50%       0.878754
75%       1.077564
max      13.698456
Name: % error, dtype: float64",6
116,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.6,"no_8x8dct        5.861792e+13
ref_1            4.787561e+13
no_mbtree        2.827601e+13
no_fast_pskip    9.421356e+12
ref_9            2.763204e+12
no_cabac         1.960722e+12
dtype: float64","count    8.500000e+01
mean     3.065177e+11
std      1.629590e+12
min      1.476883e-02
25%      7.902677e-02
50%      1.869430e-01
75%      4.021892e-01
max      1.047030e+13
Name: % error, dtype: float64",6
117,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",RandomForestRegressor(),Performance,0.6,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    85.000000
mean      0.792449
std       3.356573
min       0.006776
25%       0.080763
50%       0.140283
75%       0.378660
max      22.261677
Name: % error, dtype: float64",6
118,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.6,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    85.000000
mean      0.550666
std       1.725927
min       0.003347
25%       0.087851
50%       0.143035
75%       0.407516
max      11.263355
Name: % error, dtype: float64",6
119,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.6,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    85.000000
mean      0.388589
std       0.795156
min       0.009789
25%       0.076862
50%       0.142337
75%       0.395605
max       4.505930
Name: % error, dtype: float64",6
120,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.7,"ref_1            168.353429
ref_9            162.273333
no_mbtree         32.293780
no_8x8dct         17.187077
no_cabac          10.479087
no_fast_pskip      5.381213
dtype: float64","count    64.000000
mean      0.454593
std       0.390632
min       0.003963
25%       0.190411
50%       0.365043
75%       0.632870
max       1.702028
Name: % error, dtype: float64",6
121,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","Lasso(alpha=0.1, max_iter=5)",Performance,0.7,"ref_1            171.003779
ref_9            143.963043
no_mbtree         31.613790
no_8x8dct         16.509260
no_cabac          10.171965
no_fast_pskip      4.723878
dtype: float64","count    64.000000
mean      0.629296
std       0.687902
min       0.055778
25%       0.315793
50%       0.493727
75%       0.679056
max       4.215687
Name: % error, dtype: float64",6
122,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",Ridge(alpha=0.05),Performance,0.7,"ref_1            167.419486
ref_9            155.131189
no_mbtree         32.118474
no_8x8dct         17.023293
no_cabac          10.556218
no_fast_pskip      5.238215
dtype: float64","count    64.000000
mean      0.514437
std       0.528662
min       0.019008
25%       0.250360
50%       0.385301
75%       0.635107
max       2.994154
Name: % error, dtype: float64",6
123,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=5)",Performance,0.7,"ref_1            171.003779
ref_9            143.963043
no_mbtree         31.613790
no_8x8dct         16.509260
no_cabac          10.171965
no_fast_pskip      4.723878
dtype: float64","count    64.000000
mean      0.629296
std       0.687902
min       0.055778
25%       0.315793
50%       0.493727
75%       0.679056
max       4.215687
Name: % error, dtype: float64",6
124,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.7,"no_mbtree        3.058454e+14
no_8x8dct        2.078710e+14
no_cabac         7.035856e+13
ref_1            4.805734e+13
no_fast_pskip    1.984257e+13
ref_9            4.119941e+12
dtype: float64","count    6.400000e+01
mean     8.569698e+11
std      3.954183e+12
min      1.583799e-02
25%      8.531808e-02
50%      1.672176e-01
75%      3.846945e-01
max      2.270495e+13
Name: % error, dtype: float64",6
125,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",RandomForestRegressor(),Performance,0.7,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    64.000000
mean      0.814740
std       3.259973
min       0.003420
25%       0.091265
50%       0.146723
75%       0.385732
max      18.916558
Name: % error, dtype: float64",6
126,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.7,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    64.000000
mean      0.763609
std       2.674453
min       0.002678
25%       0.094449
50%       0.162243
75%       0.395034
max      15.344748
Name: % error, dtype: float64",6
127,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.7,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    64.000000
mean      1.248586
std       5.390044
min       0.007178
25%       0.091011
50%       0.154389
75%       0.385812
max      30.979221
Name: % error, dtype: float64",6
128,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.8,"ref_1            169.418966
ref_9            167.567543
no_mbtree         32.323416
no_8x8dct         17.341410
no_cabac          10.469544
no_fast_pskip      5.516179
dtype: float64","count    43.000000
mean      0.425127
std       0.374957
min       0.005461
25%       0.138733
50%       0.265739
75%       0.649544
max       1.250539
Name: % error, dtype: float64",6
129,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","Lasso(alpha=0.01, max_iter=100)",Performance,0.8,"ref_1            169.373531
ref_9            166.991813
no_mbtree         32.257094
no_8x8dct         17.298232
no_cabac          10.450518
no_fast_pskip      5.450678
dtype: float64","count    43.000000
mean      0.429078
std       0.369564
min       0.021647
25%       0.159568
50%       0.288866
75%       0.658245
max       1.266811
Name: % error, dtype: float64",6
130,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",Ridge(alpha=0.01),Performance,0.8,"ref_1            169.365163
ref_9            167.022783
no_mbtree         32.293416
no_8x8dct         17.339782
no_cabac          10.487016
no_fast_pskip      5.492720
dtype: float64","count    43.000000
mean      0.425412
std       0.374149
min       0.006252
25%       0.142309
50%       0.269661
75%       0.658236
max       1.265909
Name: % error, dtype: float64",6
131,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=100)",Performance,0.8,"ref_1            169.373531
ref_9            166.991813
no_mbtree         32.257094
no_8x8dct         17.298232
no_cabac          10.450518
no_fast_pskip      5.450678
dtype: float64","count    43.000000
mean      0.429078
std       0.369564
min       0.021647
25%       0.159568
50%       0.288866
75%       0.658245
max       1.266811
Name: % error, dtype: float64",6
132,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.8,"ref_1            86.212846
ref_9            84.878333
no_mbtree        11.750225
no_8x8dct         9.586667
no_cabac          3.000255
no_fast_pskip     2.365372
dtype: float64","count    43.000000
mean      0.232534
std       0.180504
min       0.000454
25%       0.090882
50%       0.142329
75%       0.326740
max       0.588381
Name: % error, dtype: float64",6
133,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",RandomForestRegressor(),Performance,0.8,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    43.000000
mean      0.230315
std       0.183467
min       0.005215
25%       0.090180
50%       0.140845
75%       0.363993
max       0.677039
Name: % error, dtype: float64",6
134,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.8,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    43.000000
mean      0.237769
std       0.188835
min       0.003125
25%       0.089481
50%       0.179324
75%       0.339037
max       0.715630
Name: % error, dtype: float64",6
135,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.8,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    43.000000
mean      0.232981
std       0.183538
min       0.003459
25%       0.089438
50%       0.158019
75%       0.371545
max       0.682248
Name: % error, dtype: float64",6
136,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.9,"ref_1            169.362323
ref_9            167.562066
no_mbtree         32.349287
no_8x8dct         17.374268
no_cabac          10.546863
no_fast_pskip      5.401029
dtype: float64","count    22.000000
mean      0.400940
std       0.391119
min       0.049983
25%       0.154692
50%       0.226890
75%       0.482759
max       1.277748
Name: % error, dtype: float64",6
137,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","Lasso(alpha=0.01, max_iter=100)",Performance,0.9,"ref_1            169.319181
ref_9            166.915608
no_mbtree         32.286301
no_8x8dct         17.334710
no_cabac          10.526335
no_fast_pskip      5.338510
dtype: float64","count    22.000000
mean      0.403242
std       0.389912
min       0.039160
25%       0.177829
50%       0.241738
75%       0.473878
max       1.293876
Name: % error, dtype: float64",6
138,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",Ridge(alpha=0.01),Performance,0.9,"ref_1            169.314023
ref_9            167.016908
no_mbtree         32.323318
no_8x8dct         17.373792
no_cabac          10.561523
no_fast_pskip      5.381349
dtype: float64","count    22.000000
mean      0.402154
std       0.390933
min       0.046122
25%       0.158866
50%       0.235584
75%       0.486612
max       1.291368
Name: % error, dtype: float64",6
139,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=100)",Performance,0.9,"ref_1            169.319181
ref_9            166.915608
no_mbtree         32.286301
no_8x8dct         17.334710
no_cabac          10.526335
no_fast_pskip      5.338510
dtype: float64","count    22.000000
mean      0.403242
std       0.389912
min       0.039160
25%       0.177829
50%       0.241738
75%       0.473878
max       1.293876
Name: % error, dtype: float64",6
140,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",LinearRegression(),Performance,0.9,"no_8x8dct        6.604860e+13
no_fast_pskip    4.323527e+13
no_mbtree        9.038892e+12
ref_1            2.166159e+12
no_cabac         3.273216e+11
ref_9            2.226996e+11
dtype: float64","count    22.000000
mean      0.258912
std       0.187366
min       0.025332
25%       0.100893
50%       0.224432
75%       0.410237
max       0.605592
Name: % error, dtype: float64",6
141,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",RandomForestRegressor(),Performance,0.9,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    22.000000
mean      0.255463
std       0.202590
min       0.005520
25%       0.106307
50%       0.185816
75%       0.353950
max       0.708869
Name: % error, dtype: float64",6
142,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",GradientBoostingRegressor(),Performance,0.9,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    22.000000
mean      0.263886
std       0.205540
min       0.012656
25%       0.104859
50%       0.206946
75%       0.382613
max       0.711243
Name: % error, dtype: float64",6
143,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct', 'no_cabac',
       'no_fast_pskip'],
      dtype='object')",DecisionTreeRegressor(),Performance,0.9,"ref_1           NaN
no_mbtree       NaN
ref_9           NaN
no_8x8dct       NaN
no_cabac        NaN
no_fast_pskip   NaN
Name: % error, dtype: float64","count    22.000000
mean      0.258240
std       0.204813
min       0.006860
25%       0.105314
50%       0.186164
75%       0.366890
max       0.711955
Name: % error, dtype: float64",6
