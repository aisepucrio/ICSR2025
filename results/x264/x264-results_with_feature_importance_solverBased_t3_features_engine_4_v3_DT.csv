,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.1,"no_mixed_refs    117.245877
no_fast_pskip    115.147867
no_mbtree         67.282320
dtype: float64","count    191.000000
mean       6.437507
std       17.986635
min        0.084998
25%        1.138054
50%        2.566920
75%        3.744208
max      139.034317
Name: % error, dtype: float64",4
1,Lasso,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","Lasso(alpha=0.8, max_iter=5)",Performance,0.1,"no_mixed_refs    113.573836
no_fast_pskip    112.089911
no_mbtree         64.569745
dtype: float64","count    191.000000
mean       6.313091
std       18.129461
min        0.026216
25%        0.983494
50%        2.405052
75%        3.628992
max      139.717448
Name: % error, dtype: float64",4
2,Ridge,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",Ridge(alpha=0.1),Performance,0.1,"no_mixed_refs    114.774994
no_fast_pskip    112.867513
no_mbtree         66.398205
dtype: float64","count    191.000000
mean       6.341646
std       18.055975
min        0.006098
25%        1.033810
50%        2.456671
75%        3.527766
max      139.354576
Name: % error, dtype: float64",4
3,ElasticNet,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.1, max_iter=5)",Performance,0.1,"no_mixed_refs    112.656647
no_fast_pskip    110.912650
no_mbtree         65.622751
dtype: float64","count    191.000000
mean       6.294119
std       18.107873
min        0.044635
25%        1.086799
50%        2.225932
75%        3.695218
max      139.632702
Name: % error, dtype: float64",4
4,PolynomialRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.1,"no_fast_pskip    37.41430
no_mixed_refs    33.27487
no_mbtree        32.01513
dtype: float64","count    191.000000
mean       5.827506
std       17.590026
min        0.023811
25%        1.126338
50%        1.890959
75%        2.885287
max      136.312322
Name: % error, dtype: float64",4
5,RandomForest,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",RandomForestRegressor(),Performance,0.1,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    191.000000
mean       6.930850
std       17.644227
min        0.158257
25%        1.547145
50%        2.657022
75%        4.526955
max      137.986607
Name: % error, dtype: float64",4
6,GradientBoostingTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    191.000000
mean       6.018934
std       17.754504
min        0.000227
25%        0.979198
50%        2.281264
75%        3.307957
max      137.355611
Name: % error, dtype: float64",4
7,DecisionTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    191.000000
mean       6.512333
std       18.924270
min        0.000593
25%        0.978922
50%        2.281718
75%        3.308495
max      137.354750
Name: % error, dtype: float64",4
8,LinearRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.2,"ref_9            183.822776
no_fast_pskip    115.402723
no_mixed_refs    111.870318
no_mbtree         65.402336
dtype: float64","count    170.000000
mean       3.436774
std        7.971911
min        0.023396
25%        0.931781
50%        2.264119
75%        3.420700
max       66.863569
Name: % error, dtype: float64",4
9,Lasso,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.2,"ref_9            183.615953
no_fast_pskip    115.359910
no_mixed_refs    111.824624
no_mbtree         65.377705
dtype: float64","count    170.000000
mean       3.436843
std        7.982357
min        0.032796
25%        0.935251
50%        2.262346
75%        3.422861
max       66.945157
Name: % error, dtype: float64",4
10,Ridge,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",Ridge(alpha=0.01),Performance,0.2,"ref_9            182.856396
no_fast_pskip    115.276858
no_mixed_refs    111.762678
no_mbtree         65.420482
dtype: float64","count    170.000000
mean       3.439237
std        8.017572
min        0.036408
25%        0.935430
50%        2.259760
75%        3.419833
max       67.226063
Name: % error, dtype: float64",4
11,ElasticNet,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.2,"ref_9            183.615953
no_fast_pskip    115.359910
no_mixed_refs    111.824624
no_mbtree         65.377705
dtype: float64","count    170.000000
mean       3.436843
std        7.982357
min        0.032796
25%        0.935251
50%        2.262346
75%        3.422861
max       66.945157
Name: % error, dtype: float64",4
12,PolynomialRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.2,"ref_9            88.427527
no_fast_pskip    42.206844
no_mixed_refs    31.399883
no_mbtree        30.025483
dtype: float64","count    170.000000
mean       2.939950
std        7.798408
min        0.034089
25%        0.953968
50%        1.867009
75%        2.761297
max       65.917299
Name: % error, dtype: float64",4
13,RandomForest,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",RandomForestRegressor(),Performance,0.2,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    170.000000
mean       3.672486
std       10.671819
min        0.009573
25%        1.109861
50%        2.001109
75%        2.740846
max       88.165659
Name: % error, dtype: float64",4
14,GradientBoostingTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    170.000000
mean       3.084087
std        7.867638
min        0.064867
25%        1.043764
50%        1.854345
75%        2.619717
max       65.978368
Name: % error, dtype: float64",4
15,DecisionTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    170.000000
mean       3.112790
std        7.897545
min        0.101636
25%        1.050783
50%        1.851368
75%        2.614100
max       65.917299
Name: % error, dtype: float64",4
16,LinearRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.3,"ref_9            222.669578
no_fast_pskip    115.893463
no_mixed_refs    106.308610
no_mbtree         67.050234
dtype: float64","count    149.000000
mean       3.252552
std        5.637974
min        0.091035
25%        1.256996
50%        1.983945
75%        3.022715
max       50.665103
Name: % error, dtype: float64",4
17,Lasso,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","Lasso(alpha=0.3, max_iter=10)",Performance,0.3,"ref_9            217.907243
no_fast_pskip    114.493569
no_mixed_refs    104.820768
no_mbtree         66.224695
dtype: float64","count    149.000000
mean       3.241438
std        5.783623
min        0.090090
25%        1.176914
50%        2.108439
75%        3.008765
max       52.502402
Name: % error, dtype: float64",4
18,Ridge,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",Ridge(alpha=0.2),Performance,0.3,"ref_9            211.137798
no_fast_pskip    114.069411
no_mixed_refs    104.792198
no_mbtree         67.352033
dtype: float64","count    149.000000
mean       3.220856
std        5.977914
min        0.022227
25%        1.183594
50%        2.059515
75%        3.150375
max       54.869779
Name: % error, dtype: float64",4
19,ElasticNet,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","ElasticNet(alpha=0.01, max_iter=10)",Performance,0.3,"ref_9            204.977415
no_fast_pskip    113.031799
no_mixed_refs    103.908935
no_mbtree         67.448510
dtype: float64","count    149.000000
mean       3.205991
std        6.185485
min        0.008351
25%        1.175372
50%        2.035945
75%        3.346517
max       57.123281
Name: % error, dtype: float64",4
20,PolynomialRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.3,"ref_9            1.536465e+15
no_mixed_refs    1.373258e+15
no_fast_pskip    1.268855e+15
no_mbtree        1.849063e+14
dtype: float64","count    1.490000e+02
mean     5.577462e+12
std      4.798972e+13
min      2.790379e-01
25%      1.339669e+00
50%      1.908629e+00
75%      2.504601e+00
max      4.246231e+14
Name: % error, dtype: float64",4
21,RandomForest,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",RandomForestRegressor(),Performance,0.3,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    149.000000
mean       2.891591
std        5.611884
min        0.292983
25%        1.254132
50%        1.926894
75%        2.628700
max       50.057997
Name: % error, dtype: float64",4
22,GradientBoostingTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    149.000000
mean       2.949350
std        5.011042
min        0.368218
25%        1.269180
50%        1.944552
75%        2.593271
max       35.740748
Name: % error, dtype: float64",4
23,DecisionTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    149.000000
mean       3.065429
std        5.535410
min        0.341355
25%        1.287398
50%        1.931172
75%        2.594621
max       35.671945
Name: % error, dtype: float64",4
24,LinearRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.4,"ref_9            207.597447
no_fast_pskip    115.049144
no_mixed_refs    106.143510
no_mbtree         66.420694
dtype: float64","count    128.000000
mean       3.318093
std        6.550995
min        0.023097
25%        1.172985
50%        2.052495
75%        3.552145
max       56.728453
Name: % error, dtype: float64",4
25,Lasso,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","Lasso(alpha=0.2, max_iter=5)",Performance,0.4,"ref_9            205.092523
no_fast_pskip    114.167862
no_mixed_refs    105.180861
no_mbtree         65.847302
dtype: float64","count    128.000000
mean       3.324481
std        6.660214
min        0.076903
25%        1.170928
50%        2.112474
75%        3.684251
max       57.706238
Name: % error, dtype: float64",4
26,Ridge,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",Ridge(alpha=0.2),Performance,0.4,"ref_9            201.045134
no_fast_pskip    113.751977
no_mixed_refs    104.980460
no_mbtree         66.586285
dtype: float64","count    128.000000
mean       3.327366
std        6.807764
min        0.002190
25%        1.143219
50%        2.070827
75%        3.620604
max       59.078728
Name: % error, dtype: float64",4
27,ElasticNet,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","ElasticNet(alpha=0.01, max_iter=5)",Performance,0.4,"ref_9            194.257973
no_fast_pskip    112.346702
no_mixed_refs    103.705108
no_mbtree         66.684836
dtype: float64","count    128.000000
mean       3.339901
std        7.087186
min        0.072488
25%        1.202418
50%        2.048484
75%        3.403204
max       61.523466
Name: % error, dtype: float64",4
28,PolynomialRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.4,"ref_9            110.207950
no_fast_pskip     57.105000
no_mbtree         32.894328
no_mixed_refs     25.810826
dtype: float64","count    128.000000
mean       2.759166
std        5.531681
min        0.441394
25%        1.302162
50%        1.727188
75%        2.607883
max       48.357760
Name: % error, dtype: float64",4
29,RandomForest,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",RandomForestRegressor(),Performance,0.4,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    128.000000
mean       2.820809
std        5.783932
min        0.397725
25%        1.261687
50%        1.818177
75%        2.598551
max       50.448534
Name: % error, dtype: float64",4
30,GradientBoostingTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    128.000000
mean       2.759444
std        5.538549
min        0.445162
25%        1.292591
50%        1.739675
75%        2.625064
max       48.419289
Name: % error, dtype: float64",4
31,DecisionTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    128.000000
mean       2.759779
std        5.532159
min        0.411094
25%        1.291337
50%        1.752503
75%        2.621700
max       48.357760
Name: % error, dtype: float64",4
32,LinearRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.5,"ref_9            224.240616
no_fast_pskip    113.711142
no_mixed_refs    108.997495
no_mbtree         70.306629
dtype: float64","count    106.000000
mean       3.037987
std        5.206067
min        0.036111
25%        1.276516
50%        1.894430
75%        3.068993
max       51.006506
Name: % error, dtype: float64",4
33,Lasso,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","Lasso(alpha=0.2, max_iter=5)",Performance,0.5,"ref_9            221.479864
no_fast_pskip    112.910268
no_mixed_refs    108.070312
no_mbtree         69.804580
dtype: float64","count    106.000000
mean       3.029458
std        5.272677
min        0.047233
25%        1.224148
50%        1.879507
75%        3.194241
max       52.067483
Name: % error, dtype: float64",4
34,Ridge,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",Ridge(alpha=0.1),Performance,0.5,"ref_9            221.115052
no_fast_pskip    113.263872
no_mixed_refs    108.499100
no_mbtree         70.429144
dtype: float64","count    106.000000
mean       3.029263
std        5.272956
min        0.008520
25%        1.242452
50%        1.894932
75%        3.107243
max       52.105960
Name: % error, dtype: float64",4
35,ElasticNet,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=5)",Performance,0.5,"ref_9            221.479864
no_fast_pskip    112.910268
no_mixed_refs    108.070312
no_mbtree         69.804580
dtype: float64","count    106.000000
mean       3.029458
std        5.272677
min        0.047233
25%        1.224148
50%        1.879507
75%        3.194241
max       52.067483
Name: % error, dtype: float64",4
36,PolynomialRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.5,"no_mixed_refs    3.012261e+15
ref_9            2.750404e+15
no_mbtree        1.068599e+15
no_fast_pskip    8.517441e+13
dtype: float64","count    106.000000
mean       2.513182
std        4.332202
min        0.491509
25%        1.294978
50%        1.826028
75%        2.456610
max       40.336769
Name: % error, dtype: float64",4
37,RandomForest,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",RandomForestRegressor(),Performance,0.5,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    106.000000
mean       2.624751
std        4.344169
min        0.596967
25%        1.311373
50%        1.871539
75%        2.527960
max       38.540712
Name: % error, dtype: float64",4
38,GradientBoostingTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    106.000000
mean       2.552852
std        4.224081
min        0.561847
25%        1.312863
50%        1.890784
75%        2.503748
max       37.706345
Name: % error, dtype: float64",4
39,DecisionTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    106.000000
mean       2.556080
std        4.221799
min        0.634240
25%        1.324118
50%        1.900046
75%        2.510166
max       37.640997
Name: % error, dtype: float64",4
40,LinearRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.6,"ref_9            220.111978
no_fast_pskip    111.879460
no_mixed_refs    111.868160
no_mbtree         69.865173
dtype: float64","count    85.000000
mean      3.090481
std       5.933925
min       0.001374
25%       1.219295
50%       2.052253
75%       3.108892
max      53.377242
Name: % error, dtype: float64",4
41,Lasso,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","Lasso(alpha=0.3, max_iter=5)",Performance,0.6,"ref_9            215.720739
no_fast_pskip    110.761859
no_mixed_refs    110.366983
no_mbtree         69.047215
dtype: float64","count    85.000000
mean      3.084323
std       6.071621
min       0.027800
25%       1.173590
50%       1.939850
75%       3.342010
max      55.037733
Name: % error, dtype: float64",4
42,Ridge,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",Ridge(alpha=0.2),Performance,0.6,"ref_9            214.771208
no_fast_pskip    111.249045
no_mixed_refs    110.931372
no_mbtree         69.995245
dtype: float64","count    85.000000
mean      3.086525
std       6.084478
min       0.059746
25%       1.236864
50%       1.954442
75%       3.243429
max      55.238253
Name: % error, dtype: float64",4
43,ElasticNet,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=5)",Performance,0.6,"ref_9            215.720739
no_fast_pskip    110.761859
no_mixed_refs    110.366983
no_mbtree         69.047215
dtype: float64","count    85.000000
mean      3.084323
std       6.071621
min       0.027800
25%       1.173590
50%       1.939850
75%       3.342010
max      55.037733
Name: % error, dtype: float64",4
44,PolynomialRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.6,"no_mbtree        1.292938e+15
no_mixed_refs    2.431433e+13
ref_9            2.269514e+13
no_fast_pskip    1.786989e+13
dtype: float64","count    85.000000
mean      2.612199
std       4.819896
min       0.657213
25%       1.293311
50%       1.963185
75%       2.339589
max      43.172610
Name: % error, dtype: float64",4
45,RandomForest,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",RandomForestRegressor(),Performance,0.6,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    85.000000
mean      2.718478
std       4.841815
min       0.769360
25%       1.272159
50%       1.972177
75%       2.376501
max      41.618485
Name: % error, dtype: float64",4
46,GradientBoostingTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    85.000000
mean      2.617755
std       4.834176
min       0.807774
25%       1.305403
50%       2.034235
75%       2.394380
max      43.399039
Name: % error, dtype: float64",4
47,DecisionTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    85.000000
mean      2.621286
std       4.828566
min       0.819175
25%       1.277121
50%       2.027897
75%       2.393902
max      43.330018
Name: % error, dtype: float64",4
48,LinearRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.7,"ref_9            226.322212
no_fast_pskip    112.496401
no_mixed_refs    111.004345
no_mbtree         69.699789
dtype: float64","count    64.000000
mean      2.410992
std       2.148158
min       0.055787
25%       1.062456
50%       1.950486
75%       3.076843
max      13.662483
Name: % error, dtype: float64",4
49,Lasso,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","Lasso(alpha=0.1, max_iter=5)",Performance,0.7,"ref_9            224.985236
no_fast_pskip    112.128880
no_mixed_refs    110.453267
no_mbtree         69.410108
dtype: float64","count    64.000000
mean      2.412425
std       2.122597
min       0.070201
25%       1.117399
50%       1.952295
75%       3.162400
max      13.341786
Name: % error, dtype: float64",4
50,Ridge,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",Ridge(alpha=0.1),Performance,0.7,"ref_9            224.150739
no_fast_pskip    112.235671
no_mixed_refs    110.531841
no_mbtree         69.752903
dtype: float64","count    64.000000
mean      2.410987
std       2.107041
min       0.102000
25%       1.100265
50%       1.951109
75%       3.140505
max      13.199018
Name: % error, dtype: float64",4
51,ElasticNet,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=5)",Performance,0.7,"ref_9            224.985236
no_fast_pskip    112.128880
no_mixed_refs    110.453267
no_mbtree         69.410108
dtype: float64","count    64.000000
mean      2.412425
std       2.122597
min       0.070201
25%       1.117399
50%       1.952295
75%       3.162400
max      13.341786
Name: % error, dtype: float64",4
52,PolynomialRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.7,"ref_9            1.229704e+15
no_mixed_refs    5.545653e+14
no_mbtree        9.652398e+13
no_fast_pskip    9.110647e+13
dtype: float64","count    64.000000
mean      1.975889
std       0.757513
min       0.796160
25%       1.326262
50%       2.050701
75%       2.401148
max       3.732002
Name: % error, dtype: float64",4
53,RandomForest,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",RandomForestRegressor(),Performance,0.7,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    64.000000
mean      1.936428
std       0.723052
min       0.844348
25%       1.270397
50%       2.030944
75%       2.479179
max       3.702768
Name: % error, dtype: float64",4
54,GradientBoostingTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    64.000000
mean      1.949214
std       0.707390
min       0.878295
25%       1.322533
50%       2.038889
75%       2.481390
max       3.683519
Name: % error, dtype: float64",4
55,DecisionTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    64.000000
mean      1.951412
std       0.703748
min       0.847416
25%       1.335855
50%       2.050669
75%       2.460945
max       3.616492
Name: % error, dtype: float64",4
56,LinearRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.8,"ref_9            227.083381
no_fast_pskip    113.476416
no_mixed_refs    110.572980
no_mbtree         68.719326
dtype: float64","count    43.000000
mean      2.660736
std       2.425811
min       0.038203
25%       1.233323
50%       1.746353
75%       3.240583
max      13.462072
Name: % error, dtype: float64",4
57,Lasso,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","Lasso(alpha=0.02, max_iter=5)",Performance,0.8,"ref_9            226.778396
no_fast_pskip    113.402716
no_mixed_refs    110.466530
no_mbtree         68.670274
dtype: float64","count    43.000000
mean      2.660680
std       2.418743
min       0.040425
25%       1.240135
50%       1.763933
75%       3.247636
max      13.390742
Name: % error, dtype: float64",4
58,Ridge,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",Ridge(alpha=0.05),Performance,0.8,"ref_9            226.004695
no_fast_pskip    113.357574
no_mixed_refs    110.365289
no_mbtree         68.757990
dtype: float64","count    43.000000
mean      2.657361
std       2.400827
min       0.029961
25%       1.252355
50%       1.773562
75%       3.242202
max      13.231900
Name: % error, dtype: float64",4
59,ElasticNet,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=1.0, max_iter=5)",Performance,0.8,"ref_9            226.778396
no_fast_pskip    113.402716
no_mixed_refs    110.466530
no_mbtree         68.670274
dtype: float64","count    43.000000
mean      2.660680
std       2.418743
min       0.040425
25%       1.240135
50%       1.763933
75%       3.247636
max      13.390742
Name: % error, dtype: float64",4
60,PolynomialRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.8,"ref_9            1.492224e+15
no_mixed_refs    7.965079e+14
no_mbtree        2.713510e+14
no_fast_pskip    3.032940e+13
dtype: float64","count    43.000000
mean      1.993476
std       0.699750
min       0.793723
25%       1.515349
50%       1.940955
75%       2.570158
max       3.439604
Name: % error, dtype: float64",4
61,RandomForest,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",RandomForestRegressor(),Performance,0.8,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    43.000000
mean      2.016111
std       0.673598
min       0.789245
25%       1.574870
50%       2.028864
75%       2.488501
max       3.564586
Name: % error, dtype: float64",4
62,GradientBoostingTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    43.000000
mean      2.030851
std       0.655593
min       0.757350
25%       1.495011
50%       2.078696
75%       2.515775
max       3.479724
Name: % error, dtype: float64",4
63,DecisionTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    43.000000
mean      2.042106
std       0.653430
min       0.789738
25%       1.542415
50%       2.100818
75%       2.506878
max       3.547039
Name: % error, dtype: float64",4
64,LinearRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.9,"ref_9            227.344338
no_mixed_refs    112.230601
no_fast_pskip    111.626441
no_mbtree         69.899405
dtype: float64","count    22.000000
mean      2.827228
std       2.986065
min       0.218889
25%       1.272067
50%       1.790455
75%       3.717605
max      13.981989
Name: % error, dtype: float64",4
65,Lasso,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","Lasso(alpha=0.1, max_iter=5)",Performance,0.9,"ref_9            225.657195
no_mixed_refs    111.708747
no_fast_pskip    111.248289
no_mbtree         69.663531
dtype: float64","count    22.000000
mean      2.826165
std       2.910530
min       0.231374
25%       1.299726
50%       1.811145
75%       3.728969
max      13.589260
Name: % error, dtype: float64",4
66,Ridge,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",Ridge(alpha=0.1),Performance,0.9,"ref_9            225.226084
no_mixed_refs    111.862871
no_fast_pskip    111.422495
no_mbtree         69.973658
dtype: float64","count    22.000000
mean      2.815497
std       2.896614
min       0.259364
25%       1.290589
50%       1.823722
75%       3.697529
max      13.526694
Name: % error, dtype: float64",4
67,ElasticNet,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=5)",Performance,0.9,"ref_9            225.657195
no_mixed_refs    111.708747
no_fast_pskip    111.248289
no_mbtree         69.663531
dtype: float64","count    22.000000
mean      2.826165
std       2.910530
min       0.231374
25%       1.299726
50%       1.811145
75%       3.728969
max      13.589260
Name: % error, dtype: float64",4
68,PolynomialRegression,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",LinearRegression(),Performance,0.9,"no_mixed_refs    1.189008e+15
no_mbtree        1.258180e+14
no_fast_pskip    1.833881e+13
ref_9            1.058484e+13
dtype: float64","count    22.000000
mean      2.004447
std       0.661988
min       0.693933
25%       1.455697
50%       2.106390
75%       2.447842
max       3.681812
Name: % error, dtype: float64",4
69,RandomForest,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",RandomForestRegressor(),Performance,0.9,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    22.000000
mean      1.893525
std       0.640996
min       0.898214
25%       1.333199
50%       1.900476
75%       2.379858
max       3.421648
Name: % error, dtype: float64",4
70,GradientBoostingTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    22.000000
mean      1.944150
std       0.631772
min       0.825207
25%       1.324284
50%       1.958160
75%       2.432214
max       3.393814
Name: % error, dtype: float64",4
71,DecisionTree,False,DecisionTree,"Index(['ref_9', 'no_mixed_refs', 'no_fast_pskip', 'no_mbtree'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"ref_9           NaN
no_mixed_refs   NaN
no_fast_pskip   NaN
no_mbtree       NaN
Name: % error, dtype: float64","count    22.000000
mean      1.952375
std       0.628507
min       0.862863
25%       1.381869
50%       1.980263
75%       2.372791
max       3.481067
Name: % error, dtype: float64",4
