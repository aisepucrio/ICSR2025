,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    29.087111
no_8x8dct    15.045111
dtype: float64","count    191.000000
mean       3.265230
std        7.742054
min        0.006130
25%        1.171846
50%        1.973755
75%        2.947440
max       56.044760
Name: % error, dtype: float64",4
1,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.3, max_iter=10)",Performance,0.1,"no_mbtree    28.037161
no_8x8dct    13.995103
dtype: float64","count    191.000000
mean       3.335669
std        7.731019
min        0.006121
25%        1.316277
50%        1.704100
75%        3.285514
max       55.865384
Name: % error, dtype: float64",4
2,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.1),Performance,0.1,"no_mbtree    28.565284
no_8x8dct    14.843460
dtype: float64","count    191.000000
mean       3.299270
std        7.732070
min        0.013311
25%        1.238778
50%        1.862166
75%        3.056550
max       55.979054
Name: % error, dtype: float64",4
3,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=10)",Performance,0.1,"no_mbtree    28.037161
no_8x8dct    13.995103
dtype: float64","count    191.000000
mean       3.335669
std        7.731019
min        0.006121
25%        1.316277
50%        1.704100
75%        3.285514
max       55.865384
Name: % error, dtype: float64",4
4,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    10.083704
no_8x8dct     4.627037
dtype: float64","count    191.000000
mean       3.240254
std        7.693519
min        0.100911
25%        1.101274
50%        1.930214
75%        2.822512
max       55.697487
Name: % error, dtype: float64",4
5,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.1,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.177511
std        7.735589
min        0.041543
25%        1.019409
50%        1.832977
75%        2.827968
max       55.890474
Name: % error, dtype: float64",4
6,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.244164
std        7.714731
min        0.100964
25%        1.101410
50%        1.930265
75%        2.822696
max       55.697449
Name: % error, dtype: float64",4
7,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.250119
std        7.748040
min        0.100911
25%        1.101274
50%        1.930214
75%        2.822512
max       55.978474
Name: % error, dtype: float64",4
8,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    2.987159e+01
no_8x8dct    1.498980e+01
ref_9        3.552714e-15
dtype: float64","count    170.000000
mean       3.333581
std        8.220818
min        0.001836
25%        0.957922
50%        1.863901
75%        2.901475
max       56.206593
Name: % error, dtype: float64",4
9,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.2, max_iter=5)",Performance,0.2,"no_mbtree    29.071587
no_8x8dct    14.187985
dtype: float64","count    170.000000
mean       3.388370
std        8.208838
min        0.015267
25%        1.119917
50%        1.780460
75%        3.153506
max       56.066506
Name: % error, dtype: float64",4
10,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.2),Performance,0.2,"no_mbtree    29.313240
no_8x8dct    14.708995
dtype: float64","count    170.000000
mean       3.367753
std        8.209975
min        0.017257
25%        1.072636
50%        1.861647
75%        3.034577
max       56.133771
Name: % error, dtype: float64",4
11,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=5)",Performance,0.2,"no_mbtree    29.071587
no_8x8dct    14.187985
dtype: float64","count    170.000000
mean       3.388370
std        8.208838
min        0.015267
25%        1.119917
50%        1.780460
75%        3.153506
max       56.066506
Name: % error, dtype: float64",4
12,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    1.145876e+15
no_8x8dct    4.263742e+14
ref_9        1.956257e+14
dtype: float64","count    1.700000e+02
mean     6.546917e+11
std      4.967308e+12
min      1.870472e-02
25%      9.737586e-01
50%      1.830135e+00
75%      2.679467e+00
max      4.689437e+13
Name: % error, dtype: float64",4
13,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.2,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.359548
std        8.147971
min        0.087398
25%        0.897143
50%        2.000722
75%        2.675876
max       55.883629
Name: % error, dtype: float64",4
14,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.353073
std        8.171456
min        0.012026
25%        0.872757
50%        2.045787
75%        2.682062
max       55.935172
Name: % error, dtype: float64",4
15,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.361623
std        8.216298
min        0.012115
25%        0.872862
50%        2.045841
75%        2.681934
max       55.975342
Name: % error, dtype: float64",4
16,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree    3.075194e+01
no_8x8dct    1.413544e+01
ref_9        7.105427e-15
dtype: float64","count    149.000000
mean       3.575404
std        8.779662
min        0.003489
25%        0.712019
50%        1.888084
75%        3.046239
max       56.275052
Name: % error, dtype: float64",4
17,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.3,"no_mbtree    30.711192
no_8x8dct    14.094853
dtype: float64","count    149.000000
mean       3.577446
std        8.779255
min        0.003278
25%        0.711807
50%        1.874091
75%        3.059555
max       56.268216
Name: % error, dtype: float64",4
18,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"no_mbtree    30.732191
no_8x8dct    14.126209
dtype: float64","count    149.000000
mean       3.576187
std        8.779375
min        0.005227
25%        0.713770
50%        1.882986
75%        3.051090
max       56.272673
Name: % error, dtype: float64",4
19,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.3,"no_mbtree    30.711192
no_8x8dct    14.094853
dtype: float64","count    149.000000
mean       3.577446
std        8.779255
min        0.003278
25%        0.711807
50%        1.874091
75%        3.059555
max       56.268216
Name: % error, dtype: float64",4
20,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.3,"no_8x8dct    1.339381e+15
no_mbtree    2.355321e+14
ref_9        5.887296e+13
dtype: float64","count    1.490000e+02
mean     1.806337e+12
std      1.476653e+13
min      1.963879e-02
25%      9.175989e-01
50%      2.169869e+00
75%      2.972461e+00
max      1.508976e+14
Name: % error, dtype: float64",4
21,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.3,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.613103
std        8.714205
min        0.092841
25%        1.013352
50%        2.148576
75%        3.061659
max       56.109400
Name: % error, dtype: float64",4
22,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.597086
std        8.724165
min        0.060783
25%        0.921464
50%        2.200039
75%        2.997369
max       56.123458
Name: % error, dtype: float64",4
23,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.607025
std        8.772815
min        0.060698
25%        0.921249
50%        2.199969
75%        2.997154
max       56.123495
Name: % error, dtype: float64",4
24,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.4,"ref_1        1.678257e+02
no_mbtree    3.164120e+01
no_8x8dct    1.503902e+01
ref_9        1.776357e-14
dtype: float64","count    128.000000
mean       2.560462
std        4.188705
min        0.050328
25%        0.761298
50%        2.053391
75%        2.816795
max       28.525753
Name: % error, dtype: float64",4
25,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.3, max_iter=5)",Performance,0.4,"ref_1        140.360049
no_mbtree     29.808180
no_8x8dct     13.056269
dtype: float64","count    128.000000
mean       2.864432
std        4.856450
min        0.039964
25%        1.185535
50%        1.709167
75%        3.254021
max       32.960354
Name: % error, dtype: float64",4
26,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.2),Performance,0.4,"ref_1        138.77768
no_mbtree     30.70289
no_8x8dct     14.10580
dtype: float64","count    128.000000
mean       2.790664
std        4.900054
min        0.012653
25%        0.929495
50%        1.882873
75%        2.913372
max       33.206041
Name: % error, dtype: float64",4
27,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=5)",Performance,0.4,"ref_1        140.360049
no_mbtree     29.808180
no_8x8dct     13.056269
dtype: float64","count    128.000000
mean       2.864432
std        4.856450
min        0.039964
25%        1.185535
50%        1.709167
75%        3.254021
max       32.960354
Name: % error, dtype: float64",4
28,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.4,"no_mbtree    1.899426e+15
no_8x8dct    1.801047e+15
ref_9        8.348290e+13
ref_1        1.641800e+13
dtype: float64","count    1.280000e+02
mean     9.699103e+12
std      6.314593e+13
min      7.008800e-02
25%      1.073613e+00
50%      2.176515e+00
75%      2.825410e+00
max      5.130377e+14
Name: % error, dtype: float64",4
29,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.4,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.908339
std        5.791707
min        0.004308
25%        0.700178
50%        2.111266
75%        2.750714
max       39.226427
Name: % error, dtype: float64",4
30,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.621592
std        4.426346
min        0.029868
25%        0.785714
50%        2.130549
75%        2.723784
max       30.979841
Name: % error, dtype: float64",4
31,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.621529
std        4.426251
min        0.030114
25%        0.785515
50%        2.130627
75%        2.723654
max       30.979221
Name: % error, dtype: float64",4
32,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.5,"ref_1        169.375876
ref_9        162.273333
no_mbtree     32.330699
no_8x8dct     15.929301
dtype: float64","count    106.000000
mean       1.828881
std        1.166109
min        0.086807
25%        0.768921
50%        1.906749
75%        2.802579
max        3.854096
Name: % error, dtype: float64",4
33,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.5, max_iter=1)",Performance,0.5,"ref_1        200.003750
ref_9         55.157016
no_mbtree     29.911117
no_8x8dct     13.064423
dtype: float64","count    106.000000
mean       2.196178
std        2.206320
min        0.006213
25%        0.763070
50%        1.801508
75%        3.270637
max       14.356688
Name: % error, dtype: float64",4
34,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.3),Performance,0.5,"ref_1        159.324969
ref_9        131.294265
no_mbtree     31.122830
no_8x8dct     14.769281
dtype: float64","count    106.000000
mean       1.987491
std        1.533861
min        0.012330
25%        0.544770
50%        1.941218
75%        2.903711
max        8.522277
Name: % error, dtype: float64",4
35,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.5, l1_ratio=1.0, max_iter=1)",Performance,0.5,"ref_1        200.003750
ref_9         55.157016
no_mbtree     29.911117
no_8x8dct     13.064423
dtype: float64","count    106.000000
mean       2.196178
std        2.206320
min        0.006213
25%        0.763070
50%        1.801508
75%        3.270637
max       14.356688
Name: % error, dtype: float64",4
36,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.5,"no_8x8dct    1.611856e+15
ref_1        3.785372e+14
no_mbtree    1.839589e+14
ref_9        2.600404e+13
dtype: float64","count    1.060000e+02
mean     1.466293e+13
std      8.742769e+13
min      2.498415e-01
25%      5.542846e-01
50%      2.086310e+00
75%      2.918362e+00
max      6.338911e+14
Name: % error, dtype: float64",4
37,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.5,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.168968
std        2.551445
min        0.023356
25%        0.778491
50%        2.121068
75%        2.544082
max       18.708040
Name: % error, dtype: float64",4
38,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.188205
std        2.639050
min        0.014925
25%        0.790552
50%        2.129218
75%        2.537500
max       19.394695
Name: % error, dtype: float64",4
39,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.407096
std        4.126703
min        0.014800
25%        0.790752
50%        2.129059
75%        2.537317
max       30.979221
Name: % error, dtype: float64",4
40,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        168.882358
ref_9        162.273333
no_mbtree     31.643303
no_8x8dct     15.762220
dtype: float64","count    85.000000
mean      1.819035
std       1.195642
min       0.006941
25%       0.666193
50%       1.896461
75%       2.799616
max       4.048645
Name: % error, dtype: float64",4
41,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.5, max_iter=1)",Performance,0.6,"ref_1        194.249787
ref_9         49.778624
no_mbtree     28.127277
no_8x8dct     12.615659
dtype: float64","count    85.000000
mean      2.518914
std       2.551299
min       0.081180
25%       1.080516
50%       1.969858
75%       3.686388
max      16.044666
Name: % error, dtype: float64",4
42,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.6,"ref_1        168.751703
ref_9        160.745932
no_mbtree     31.605289
no_8x8dct     15.726519
dtype: float64","count    85.000000
mean      1.826961
std       1.198492
min       0.015521
25%       0.671747
50%       1.916744
75%       2.807066
max       4.069356
Name: % error, dtype: float64",4
43,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.01, max_iter=5)",Performance,0.6,"ref_1        145.103134
ref_9        111.687369
no_mbtree     29.493098
no_8x8dct     13.777181
dtype: float64","count    85.000000
mean      2.321675
std       2.289774
min       0.027105
25%       0.895527
50%       1.742982
75%       3.222382
max      13.930172
Name: % error, dtype: float64",4
44,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        1.584006e+15
no_mbtree    9.398416e+14
no_8x8dct    1.007657e+14
ref_9        2.367878e+13
dtype: float64","count    8.500000e+01
mean     4.736720e+12
std      2.527619e+13
min      1.901141e-01
25%      7.437724e-01
50%      2.110348e+00
75%      2.661444e+00
max      1.662367e+14
Name: % error, dtype: float64",4
45,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.6,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.372392
std       3.536972
min       0.122796
25%       0.776424
50%       2.247475
75%       2.631023
max      23.903124
Name: % error, dtype: float64",4
46,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.191166
std       2.411882
min       0.142766
25%       0.758837
50%       2.234367
75%       2.638180
max      15.814013
Name: % error, dtype: float64",4
47,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      1.924608
std       1.234485
min       0.142494
25%       0.758804
50%       2.234090
75%       2.637998
max       4.505930
Name: % error, dtype: float64",4
48,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        169.300594
ref_9        162.273333
no_mbtree     31.974783
no_8x8dct     16.307201
dtype: float64","count    64.000000
mean      1.892172
std       1.158596
min       0.025902
25%       0.806146
50%       1.872030
75%       2.780916
max       3.916818
Name: % error, dtype: float64",4
49,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.2, max_iter=1)",Performance,0.7,"ref_1        211.946164
ref_9         66.787937
no_mbtree     30.171518
no_8x8dct     15.271563
dtype: float64","count    64.000000
mean      2.368352
std       2.082856
min       0.153238
25%       0.633486
50%       2.180144
75%       3.182069
max      10.400812
Name: % error, dtype: float64",4
50,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.3),Performance,0.7,"ref_1        159.608202
ref_9        131.347371
no_mbtree     31.038984
no_8x8dct     15.443037
dtype: float64","count    64.000000
mean      2.154988
std       1.647870
min       0.066798
25%       0.680049
50%       2.130977
75%       2.941614
max       8.414959
Name: % error, dtype: float64",4
51,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=1)",Performance,0.7,"ref_1        211.946164
ref_9         66.787937
no_mbtree     30.171518
no_8x8dct     15.271563
dtype: float64","count    64.000000
mean      2.368352
std       2.082856
min       0.153238
25%       0.633486
50%       2.180144
75%       3.182069
max      10.400812
Name: % error, dtype: float64",4
52,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        61.327667
ref_9        54.091111
no_8x8dct    15.516619
no_mbtree    11.184911
dtype: float64","count    64.000000
mean      2.548995
std       3.273949
min       0.048304
25%       0.819422
50%       2.213595
75%       2.545271
max      18.393127
Name: % error, dtype: float64",4
53,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.7,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.584234
std       3.908685
min       0.018198
25%       0.821539
50%       2.188747
75%       2.559348
max      23.359344
Name: % error, dtype: float64",4
54,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.108634
std       1.528958
min       0.048036
25%       0.819272
50%       2.213563
75%       2.545365
max       7.825394
Name: % error, dtype: float64",4
55,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.004693
std       1.225359
min       0.048304
25%       0.819422
50%       2.213595
75%       2.545271
max       4.505930
Name: % error, dtype: float64",4
56,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.8,"ref_1        170.966275
ref_9        167.637794
no_mbtree     32.640332
no_8x8dct     16.919905
dtype: float64","count    43.000000
mean      1.759195
std       1.074925
min       0.053211
25%       0.918698
50%       1.512757
75%       2.436961
max       3.921198
Name: % error, dtype: float64",4
57,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.8,"ref_1        170.578239
ref_9        162.046260
no_mbtree     32.003487
no_8x8dct     16.536242
dtype: float64","count    43.000000
mean      1.744454
std       1.105374
min       0.068521
25%       0.876516
50%       1.744108
75%       2.531747
max       4.005253
Name: % error, dtype: float64",4
58,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.02),Performance,0.8,"ref_1        170.875915
ref_9        166.570337
no_mbtree     32.584679
no_8x8dct     16.920164
dtype: float64","count    43.000000
mean      1.758686
std       1.074621
min       0.070779
25%       0.918674
50%       1.531667
75%       2.436895
max       3.939445
Name: % error, dtype: float64",4
59,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=100)",Performance,0.8,"ref_1        170.578239
ref_9        162.046260
no_mbtree     32.003487
no_8x8dct     16.536242
dtype: float64","count    43.000000
mean      1.744454
std       1.105374
min       0.068521
25%       0.876516
50%       1.744108
75%       2.531747
max       4.005253
Name: % error, dtype: float64",4
60,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.8,"ref_1        86.457624
ref_9        84.878333
no_mbtree    11.433731
no_8x8dct     9.586667
dtype: float64","count    43.000000
mean      1.689328
std       1.061104
min       0.046450
25%       0.820926
50%       1.909980
75%       2.226389
max       4.062450
Name: % error, dtype: float64",4
61,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.8,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.695143
std       1.063368
min       0.004353
25%       0.832448
50%       1.858231
75%       2.265773
max       4.009607
Name: % error, dtype: float64",4
62,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.689333
std       1.061107
min       0.046772
25%       0.820766
50%       1.910309
75%       2.226548
max       4.062785
Name: % error, dtype: float64",4
63,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.689328
std       1.061104
min       0.046450
25%       0.820926
50%       1.909980
75%       2.226389
max       4.062450
Name: % error, dtype: float64",4
64,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.9,"ref_1        171.034274
ref_9        167.593791
no_mbtree     32.688288
no_8x8dct     17.183921
dtype: float64","count    22.000000
mean      1.646978
std       1.178342
min       0.076917
25%       0.639723
50%       1.411634
75%       2.372087
max       3.880762
Name: % error, dtype: float64",4
65,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.9,"ref_1        170.641622
ref_9        161.298337
no_mbtree     32.062172
no_8x8dct     16.821500
dtype: float64","count    22.000000
mean      1.614171
std       1.192240
min       0.149477
25%       0.545282
50%       1.538123
75%       2.498427
max       3.819150
Name: % error, dtype: float64",4
66,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.9,"ref_1        170.992953
ref_9        167.056478
no_mbtree     32.663065
no_8x8dct     17.184762
dtype: float64","count    22.000000
mean      1.646510
std       1.177138
min       0.085087
25%       0.643802
50%       1.411640
75%       2.373107
max       3.872702
Name: % error, dtype: float64",4
67,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=100)",Performance,0.9,"ref_1        170.641622
ref_9        161.298337
no_mbtree     32.062172
no_8x8dct     16.821500
dtype: float64","count    22.000000
mean      1.614171
std       1.192240
min       0.149477
25%       0.545282
50%       1.538123
75%       2.498427
max       3.819150
Name: % error, dtype: float64",4
68,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.9,"no_mbtree    2.437726e+14
no_8x8dct    8.982768e+13
ref_1        1.130415e+13
ref_9        2.105799e+11
dtype: float64","count    22.000000
mean      1.599982
std       1.152835
min       0.077921
25%       0.771644
50%       1.260320
75%       2.322215
max       4.223483
Name: % error, dtype: float64",4
69,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.9,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.565303
std       1.170497
min       0.003004
25%       0.589503
50%       1.337964
75%       2.173281
max       3.971443
Name: % error, dtype: float64",4
70,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.562933
std       1.164768
min       0.011350
25%       0.616764
50%       1.358187
75%       2.165354
max       4.025941
Name: % error, dtype: float64",4
71,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.562930
std       1.164806
min       0.011031
25%       0.616763
50%       1.358356
75%       2.165231
max       4.025609
Name: % error, dtype: float64",4
