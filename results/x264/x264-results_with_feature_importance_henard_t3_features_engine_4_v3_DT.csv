,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    29.087111
no_8x8dct    15.045111
dtype: float64","count    191.000000
mean       3.265230
std        7.742054
min        0.006130
25%        1.171846
50%        1.973755
75%        2.947440
max       56.044760
Name: % error, dtype: float64",4
1,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.3, max_iter=10)",Performance,0.1,"no_mbtree    28.037161
no_8x8dct    13.995103
dtype: float64","count    191.000000
mean       3.335669
std        7.731019
min        0.006121
25%        1.316277
50%        1.704100
75%        3.285514
max       55.865384
Name: % error, dtype: float64",4
2,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.1),Performance,0.1,"no_mbtree    28.565284
no_8x8dct    14.843460
dtype: float64","count    191.000000
mean       3.299270
std        7.732070
min        0.013311
25%        1.238778
50%        1.862166
75%        3.056550
max       55.979054
Name: % error, dtype: float64",4
3,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=10)",Performance,0.1,"no_mbtree    28.037161
no_8x8dct    13.995103
dtype: float64","count    191.000000
mean       3.335669
std        7.731019
min        0.006121
25%        1.316277
50%        1.704100
75%        3.285514
max       55.865384
Name: % error, dtype: float64",4
4,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    1.008370e+01
no_8x8dct    4.627037e+00
ref_9        1.776357e-15
dtype: float64","count    191.000000
mean       3.240254
std        7.693519
min        0.100911
25%        1.101274
50%        1.930214
75%        2.822512
max       55.697487
Name: % error, dtype: float64",4
5,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.236088
std        7.693233
min        0.106431
25%        1.111837
50%        1.949082
75%        2.888509
max       55.696734
Name: % error, dtype: float64",4
6,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.237221
std        7.676635
min        0.100964
25%        1.101410
50%        1.930265
75%        2.822696
max       55.697449
Name: % error, dtype: float64",4
7,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.250119
std        7.748040
min        0.100911
25%        1.101274
50%        1.930214
75%        2.822512
max       55.978474
Name: % error, dtype: float64",4
8,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    29.871587
no_8x8dct    14.989803
dtype: float64","count    170.000000
mean       3.333581
std        8.220818
min        0.001836
25%        0.957922
50%        1.863901
75%        2.901475
max       56.206593
Name: % error, dtype: float64",4
9,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.2, max_iter=5)",Performance,0.2,"no_mbtree    29.071587
no_8x8dct    14.187985
dtype: float64","count    170.000000
mean       3.388370
std        8.208838
min        0.015267
25%        1.119917
50%        1.780460
75%        3.153506
max       56.066506
Name: % error, dtype: float64",4
10,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.2),Performance,0.2,"no_mbtree    29.313240
no_8x8dct    14.708995
dtype: float64","count    170.000000
mean       3.367753
std        8.209975
min        0.017257
25%        1.072636
50%        1.861647
75%        3.034577
max       56.133771
Name: % error, dtype: float64",4
11,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=5)",Performance,0.2,"no_mbtree    29.071587
no_8x8dct    14.187985
dtype: float64","count    170.000000
mean       3.388370
std        8.208838
min        0.015267
25%        1.119917
50%        1.780460
75%        3.153506
max       56.066506
Name: % error, dtype: float64",4
12,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    1.077758e+01
no_8x8dct    4.135202e+00
ref_9        1.776357e-15
dtype: float64","count    170.000000
mean       3.351718
std        8.164737
min        0.012115
25%        0.872862
50%        2.045841
75%        2.681934
max       55.935211
Name: % error, dtype: float64",4
13,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.338906
std        8.153588
min        0.060409
25%        0.840580
50%        2.045907
75%        2.599983
max       55.900528
Name: % error, dtype: float64",4
14,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.353464
std        8.173480
min        0.012026
25%        0.872757
50%        2.045787
75%        2.682062
max       55.935172
Name: % error, dtype: float64",4
15,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.361623
std        8.216298
min        0.012115
25%        0.872862
50%        2.045841
75%        2.681934
max       55.975342
Name: % error, dtype: float64",4
16,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree    30.751939
no_8x8dct    14.135438
dtype: float64","count    149.000000
mean       3.575404
std        8.779662
min        0.003489
25%        0.712019
50%        1.888084
75%        3.046239
max       56.275052
Name: % error, dtype: float64",4
17,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.3,"no_mbtree    30.711192
no_8x8dct    14.094853
dtype: float64","count    149.000000
mean       3.577446
std        8.779255
min        0.003278
25%        0.711807
50%        1.874091
75%        3.059555
max       56.268216
Name: % error, dtype: float64",4
18,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"no_mbtree    30.732191
no_8x8dct    14.126209
dtype: float64","count    149.000000
mean       3.576187
std        8.779375
min        0.005227
25%        0.713770
50%        1.882986
75%        3.051090
max       56.272673
Name: % error, dtype: float64",4
19,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.3,"no_mbtree    30.711192
no_8x8dct    14.094853
dtype: float64","count    149.000000
mean       3.577446
std        8.779255
min        0.003278
25%        0.711807
50%        1.874091
75%        3.059555
max       56.268216
Name: % error, dtype: float64",4
20,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.3,"no_8x8dct    3.208980e+14
no_mbtree    1.076809e+13
ref_9        1.109493e+12
dtype: float64","count    1.490000e+02
mean     4.384910e+11
std      3.801774e+12
min      1.960584e-02
25%      9.325934e-01
50%      2.191487e+00
75%      3.034523e+00
max      3.782392e+13
Name: % error, dtype: float64",4
21,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.608713
std        8.724525
min        0.052887
25%        0.912764
50%        2.261887
75%        3.037840
max       56.126920
Name: % error, dtype: float64",4
22,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.599961
std        8.738094
min        0.060783
25%        0.921464
50%        2.200039
75%        2.997369
max       56.123458
Name: % error, dtype: float64",4
23,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.607025
std        8.772815
min        0.060698
25%        0.921249
50%        2.199969
75%        2.997154
max       56.123495
Name: % error, dtype: float64",4
24,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.4,"ref_1        167.825658
no_mbtree     31.641198
no_8x8dct     15.039024
dtype: float64","count    128.000000
mean       2.560462
std        4.188705
min        0.050328
25%        0.761298
50%        2.053391
75%        2.816795
max       28.525753
Name: % error, dtype: float64",4
25,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.3, max_iter=5)",Performance,0.4,"ref_1        140.360049
no_mbtree     29.808180
no_8x8dct     13.056269
dtype: float64","count    128.000000
mean       2.864432
std        4.856450
min        0.039964
25%        1.185535
50%        1.709167
75%        3.254021
max       32.960354
Name: % error, dtype: float64",4
26,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.2),Performance,0.4,"ref_1        138.77768
no_mbtree     30.70289
no_8x8dct     14.10580
dtype: float64","count    128.000000
mean       2.790664
std        4.900054
min        0.012653
25%        0.929495
50%        1.882873
75%        2.913372
max       33.206041
Name: % error, dtype: float64",4
27,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=5)",Performance,0.4,"ref_1        140.360049
no_mbtree     29.808180
no_8x8dct     13.056269
dtype: float64","count    128.000000
mean       2.864432
std        4.856450
min        0.039964
25%        1.185535
50%        1.709167
75%        3.254021
max       32.960354
Name: % error, dtype: float64",4
28,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.4,"no_8x8dct    1.576307e+15
ref_1        4.162915e+14
no_mbtree    6.287095e+13
ref_9        2.179598e+13
dtype: float64","count    1.280000e+02
mean     1.020678e+13
std      6.686606e+13
min      1.901141e-01
25%      9.356007e-01
50%      2.250890e+00
75%      2.995908e+00
max      5.356782e+14
Name: % error, dtype: float64",4
29,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.910340
std        5.792378
min        0.095869
25%        0.745947
50%        2.138632
75%        2.682158
max       39.246002
Name: % error, dtype: float64",4
30,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.621592
std        4.426346
min        0.029868
25%        0.785714
50%        2.130549
75%        2.723784
max       30.979841
Name: % error, dtype: float64",4
31,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.621529
std        4.426251
min        0.030114
25%        0.785515
50%        2.130627
75%        2.723654
max       30.979221
Name: % error, dtype: float64",4
32,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.5,"ref_1        169.375876
ref_9        162.273333
no_mbtree     32.330699
no_8x8dct     15.929301
dtype: float64","count    106.000000
mean       1.828881
std        1.166109
min        0.086807
25%        0.768921
50%        1.906749
75%        2.802579
max        3.854096
Name: % error, dtype: float64",4
33,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.5, max_iter=1)",Performance,0.5,"ref_1        200.003750
ref_9         68.395934
no_mbtree     28.960134
no_8x8dct     13.352296
dtype: float64","count    106.000000
mean       2.205058
std        1.961160
min        0.029699
25%        0.785020
50%        1.973397
75%        3.410717
max       12.124859
Name: % error, dtype: float64",4
34,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.3),Performance,0.5,"ref_1        159.324969
ref_9        131.294265
no_mbtree     31.122830
no_8x8dct     14.769281
dtype: float64","count    106.000000
mean       1.987491
std        1.533861
min        0.012330
25%        0.544770
50%        1.941218
75%        2.903711
max        8.522277
Name: % error, dtype: float64",4
35,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.5, l1_ratio=1.0, max_iter=1)",Performance,0.5,"ref_1        200.003750
ref_9         68.395934
no_mbtree     28.960134
no_8x8dct     13.352296
dtype: float64","count    106.000000
mean       2.205058
std        1.961160
min        0.029699
25%        0.785020
50%        1.973397
75%        3.410717
max       12.124859
Name: % error, dtype: float64",4
36,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.5,"no_8x8dct    1.532565e+14
ref_1        1.281756e+14
no_mbtree    3.469118e+13
ref_9        1.686636e+13
dtype: float64","count    1.060000e+02
mean     6.118009e+12
std      3.647076e+13
min      3.404211e-02
25%      8.848941e-01
50%      2.170409e+00
75%      2.648693e+00
max      2.640697e+14
Name: % error, dtype: float64",4
37,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.321888
std        3.313150
min        0.002678
25%        0.771852
50%        2.150984
75%        2.601559
max       24.083218
Name: % error, dtype: float64",4
38,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.069165
std        1.898295
min        0.014925
25%        0.790552
50%        2.129218
75%        2.537500
max       13.095499
Name: % error, dtype: float64",4
39,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.407096
std        4.126703
min        0.014800
25%        0.790752
50%        2.129059
75%        2.537317
max       30.979221
Name: % error, dtype: float64",4
40,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        168.882358
ref_9        162.273333
no_mbtree     31.643303
no_8x8dct     15.762220
dtype: float64","count    85.000000
mean      1.819035
std       1.195642
min       0.006941
25%       0.666193
50%       1.896461
75%       2.799616
max       4.048645
Name: % error, dtype: float64",4
41,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.8, max_iter=5)",Performance,0.6,"ref_1        163.901619
ref_9         59.643633
no_mbtree     26.542626
no_8x8dct     10.521455
dtype: float64","count    85.000000
mean      2.811290
std       3.044337
min       0.102144
25%       1.086831
50%       2.375318
75%       4.151199
max      19.362958
Name: % error, dtype: float64",4
42,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.6,"ref_1        168.751703
ref_9        160.745932
no_mbtree     31.605289
no_8x8dct     15.726519
dtype: float64","count    85.000000
mean      1.826961
std       1.198492
min       0.015521
25%       0.671747
50%       1.916744
75%       2.807066
max       4.069356
Name: % error, dtype: float64",4
43,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.01, max_iter=5)",Performance,0.6,"ref_1        145.054763
ref_9        111.710176
no_mbtree     29.489310
no_8x8dct     13.775854
dtype: float64","count    85.000000
mean      2.322235
std       2.290469
min       0.026852
25%       0.896729
50%       1.743232
75%       3.223044
max      13.934060
Name: % error, dtype: float64",4
44,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        1.449893e+15
no_mbtree    2.636768e+14
no_8x8dct    2.090690e+14
ref_9        3.782116e+13
dtype: float64","count    8.500000e+01
mean     3.695154e+12
std      1.974816e+13
min      6.542790e-03
25%      6.994038e-01
50%      2.105573e+00
75%      2.571116e+00
max      1.309756e+14
Name: % error, dtype: float64",4
45,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.384136
std       3.575056
min       0.136865
25%       0.712725
50%       2.228343
75%       2.633436
max      24.123161
Name: % error, dtype: float64",4
46,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.148366
std       2.173852
min       0.142766
25%       0.758837
50%       2.234367
75%       2.638180
max      13.997905
Name: % error, dtype: float64",4
47,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      1.924608
std       1.234485
min       0.142494
25%       0.758804
50%       2.234090
75%       2.637998
max       4.505930
Name: % error, dtype: float64",4
48,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        169.300594
ref_9        162.273333
no_mbtree     31.974783
no_8x8dct     16.307201
dtype: float64","count    64.000000
mean      1.892172
std       1.158596
min       0.025902
25%       0.806146
50%       1.872030
75%       2.780916
max       3.916818
Name: % error, dtype: float64",4
49,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.2, max_iter=1)",Performance,0.7,"ref_1        211.946164
ref_9         80.553249
no_mbtree     29.326101
no_8x8dct     15.415194
dtype: float64","count    64.000000
mean      2.347265
std       1.832193
min       0.112323
25%       0.811601
50%       2.158330
75%       3.275336
max       9.169065
Name: % error, dtype: float64",4
50,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.3),Performance,0.7,"ref_1        159.608202
ref_9        131.347371
no_mbtree     31.038984
no_8x8dct     15.443037
dtype: float64","count    64.000000
mean      2.154988
std       1.647870
min       0.066798
25%       0.680049
50%       2.130977
75%       2.941614
max       8.414959
Name: % error, dtype: float64",4
51,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=1)",Performance,0.7,"ref_1        211.946164
ref_9         80.553249
no_mbtree     29.326101
no_8x8dct     15.415194
dtype: float64","count    64.000000
mean      2.347265
std       1.832193
min       0.112323
25%       0.811601
50%       2.158330
75%       3.275336
max       9.169065
Name: % error, dtype: float64",4
52,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        61.327667
ref_9        54.091111
no_8x8dct    15.516619
no_mbtree    11.184911
dtype: float64","count    64.000000
mean      2.548995
std       3.273949
min       0.048304
25%       0.819422
50%       2.213595
75%       2.545271
max      18.393127
Name: % error, dtype: float64",4
53,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.449083
std       3.236089
min       0.103706
25%       0.883618
50%       2.211454
75%       2.594321
max      19.363047
Name: % error, dtype: float64",4
54,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.172290
std       1.784897
min       0.048036
25%       0.819272
50%       2.213563
75%       2.545365
max       9.859171
Name: % error, dtype: float64",4
55,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.833288
std       5.203845
min       0.048304
25%       0.819422
50%       2.213595
75%       2.545271
max      30.979221
Name: % error, dtype: float64",4
56,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.8,"ref_1        170.966275
ref_9        167.637794
no_mbtree     32.640332
no_8x8dct     16.919905
dtype: float64","count    43.000000
mean      1.759195
std       1.074925
min       0.053211
25%       0.918698
50%       1.512757
75%       2.436961
max       3.921198
Name: % error, dtype: float64",4
57,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.8,"ref_1        170.574059
ref_9        162.049981
no_mbtree     32.002958
no_8x8dct     16.536204
dtype: float64","count    43.000000
mean      1.744455
std       1.105383
min       0.068395
25%       0.876434
50%       1.744179
75%       2.531826
max       4.005362
Name: % error, dtype: float64",4
58,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.02),Performance,0.8,"ref_1        170.875915
ref_9        166.570337
no_mbtree     32.584679
no_8x8dct     16.920164
dtype: float64","count    43.000000
mean      1.758686
std       1.074621
min       0.070779
25%       0.918674
50%       1.531667
75%       2.436895
max       3.939445
Name: % error, dtype: float64",4
59,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=100)",Performance,0.8,"ref_1        170.574059
ref_9        162.049981
no_mbtree     32.002958
no_8x8dct     16.536204
dtype: float64","count    43.000000
mean      1.744455
std       1.105383
min       0.068395
25%       0.876434
50%       1.744179
75%       2.531826
max       4.005362
Name: % error, dtype: float64",4
60,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.8,"no_8x8dct    4.129091e+14
no_mbtree    2.088318e+13
ref_1        1.798255e+13
ref_9        1.046156e+12
dtype: float64","count    43.000000
mean      1.679839
std       1.094341
min       0.054328
25%       0.753786
50%       1.998455
75%       2.347139
max       4.212636
Name: % error, dtype: float64",4
61,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.691122
std       1.054561
min       0.016749
25%       0.853464
50%       1.879726
75%       2.183571
max       4.031556
Name: % error, dtype: float64",4
62,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.689333
std       1.061107
min       0.046772
25%       0.820766
50%       1.910309
75%       2.226548
max       4.062785
Name: % error, dtype: float64",4
63,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.689328
std       1.061104
min       0.046450
25%       0.820926
50%       1.909980
75%       2.226389
max       4.062450
Name: % error, dtype: float64",4
64,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.9,"ref_1        171.034274
ref_9        167.593791
no_mbtree     32.688288
no_8x8dct     17.183921
dtype: float64","count    22.000000
mean      1.646978
std       1.178342
min       0.076917
25%       0.639723
50%       1.411634
75%       2.372087
max       3.880762
Name: % error, dtype: float64",4
65,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.9,"ref_1        170.637322
ref_9        161.302194
no_mbtree     32.061683
no_8x8dct     16.821482
dtype: float64","count    22.000000
mean      1.614172
std       1.192241
min       0.149360
25%       0.545358
50%       1.538227
75%       2.498495
max       3.819271
Name: % error, dtype: float64",4
66,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.9,"ref_1        170.992953
ref_9        167.056478
no_mbtree     32.663065
no_8x8dct     17.184762
dtype: float64","count    22.000000
mean      1.646510
std       1.177138
min       0.085087
25%       0.643802
50%       1.411640
75%       2.373107
max       3.872702
Name: % error, dtype: float64",4
67,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=100)",Performance,0.9,"ref_1        170.637322
ref_9        161.302194
no_mbtree     32.061683
no_8x8dct     16.821482
dtype: float64","count    22.000000
mean      1.614172
std       1.192241
min       0.149360
25%       0.545358
50%       1.538227
75%       2.498495
max       3.819271
Name: % error, dtype: float64",4
68,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.9,"no_mbtree    1.314752e+15
no_8x8dct    6.266918e+13
ref_1        1.320528e+13
ref_9        9.353929e+11
dtype: float64","count    22.000000
mean      1.528574
std       1.193550
min       0.028484
25%       0.510666
50%       1.464324
75%       2.050082
max       3.908493
Name: % error, dtype: float64",4
69,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.578808
std       1.161088
min       0.025395
25%       0.634573
50%       1.343726
75%       2.180205
max       3.948163
Name: % error, dtype: float64",4
70,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.562933
std       1.164768
min       0.011350
25%       0.616764
50%       1.358187
75%       2.165354
max       4.025941
Name: % error, dtype: float64",4
71,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.562930
std       1.164806
min       0.011031
25%       0.616763
50%       1.358356
75%       2.165231
max       4.025609
Name: % error, dtype: float64",4
