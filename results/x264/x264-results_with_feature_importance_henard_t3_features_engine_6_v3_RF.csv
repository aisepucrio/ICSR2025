,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    29.087111
no_8x8dct    15.045111
dtype: float64","count    191.000000
mean       3.265230
std        7.742054
min        0.006130
25%        1.171846
50%        1.973755
75%        2.947440
max       56.044760
Name: % error, dtype: float64",4
1,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.3, max_iter=10)",Performance,0.1,"no_mbtree    28.037161
no_8x8dct    13.995103
dtype: float64","count    191.000000
mean       3.335669
std        7.731019
min        0.006121
25%        1.316277
50%        1.704100
75%        3.285514
max       55.865384
Name: % error, dtype: float64",4
2,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.1),Performance,0.1,"no_mbtree    28.565284
no_8x8dct    14.843460
dtype: float64","count    191.000000
mean       3.299270
std        7.732070
min        0.013311
25%        1.238778
50%        1.862166
75%        3.056550
max       55.979054
Name: % error, dtype: float64",4
3,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=10)",Performance,0.1,"no_mbtree    28.037161
no_8x8dct    13.995103
dtype: float64","count    191.000000
mean       3.335669
std        7.731019
min        0.006121
25%        1.316277
50%        1.704100
75%        3.285514
max       55.865384
Name: % error, dtype: float64",4
4,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    10.083704
no_8x8dct     4.627037
dtype: float64","count    191.000000
mean       3.240254
std        7.693519
min        0.100911
25%        1.101274
50%        1.930214
75%        2.822512
max       55.697487
Name: % error, dtype: float64",4
5,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.1,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.210120
std        7.713154
min        0.019518
25%        1.027917
50%        1.863772
75%        2.800787
max       55.752643
Name: % error, dtype: float64",4
6,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.237921
std        7.680456
min        0.100964
25%        1.101410
50%        1.930265
75%        2.822696
max       55.697449
Name: % error, dtype: float64",4
7,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    191.000000
mean       3.220525
std        7.587052
min        0.100911
25%        1.101274
50%        1.930214
75%        2.822512
max       55.697487
Name: % error, dtype: float64",4
8,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    2.987159e+01
no_8x8dct    1.498980e+01
ref_9        3.552714e-15
dtype: float64","count    170.000000
mean       3.333581
std        8.220818
min        0.001836
25%        0.957922
50%        1.863901
75%        2.901475
max       56.206593
Name: % error, dtype: float64",4
9,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.2, max_iter=5)",Performance,0.2,"no_mbtree    29.071587
no_8x8dct    14.187985
dtype: float64","count    170.000000
mean       3.388370
std        8.208838
min        0.015267
25%        1.119917
50%        1.780460
75%        3.153506
max       56.066506
Name: % error, dtype: float64",4
10,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.2),Performance,0.2,"no_mbtree    29.313240
no_8x8dct    14.708995
dtype: float64","count    170.000000
mean       3.367753
std        8.209975
min        0.017257
25%        1.072636
50%        1.861647
75%        3.034577
max       56.133771
Name: % error, dtype: float64",4
11,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=5)",Performance,0.2,"no_mbtree    29.071587
no_8x8dct    14.187985
dtype: float64","count    170.000000
mean       3.388370
std        8.208838
min        0.015267
25%        1.119917
50%        1.780460
75%        3.153506
max       56.066506
Name: % error, dtype: float64",4
12,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    1.145876e+15
no_8x8dct    4.263742e+14
ref_9        1.956257e+14
dtype: float64","count    1.700000e+02
mean     6.546917e+11
std      4.967308e+12
min      1.870472e-02
25%      9.737586e-01
50%      1.830135e+00
75%      2.679467e+00
max      4.689437e+13
Name: % error, dtype: float64",4
13,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.2,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.341872
std        8.167547
min        0.008481
25%        0.857500
50%        2.072005
75%        2.627752
max       55.946256
Name: % error, dtype: float64",4
14,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.353692
std        8.174661
min        0.012026
25%        0.872757
50%        2.045787
75%        2.682062
max       55.935172
Name: % error, dtype: float64",4
15,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    170.000000
mean       3.361623
std        8.216298
min        0.012115
25%        0.872862
50%        2.045841
75%        2.681934
max       55.975342
Name: % error, dtype: float64",4
16,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree    3.075194e+01
no_8x8dct    1.413544e+01
ref_9        7.105427e-15
dtype: float64","count    149.000000
mean       3.575404
std        8.779662
min        0.003489
25%        0.712019
50%        1.888084
75%        3.046239
max       56.275052
Name: % error, dtype: float64",4
17,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.3,"no_mbtree    30.711192
no_8x8dct    14.094853
dtype: float64","count    149.000000
mean       3.577446
std        8.779255
min        0.003278
25%        0.711807
50%        1.874091
75%        3.059555
max       56.268216
Name: % error, dtype: float64",4
18,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"no_mbtree    30.732191
no_8x8dct    14.126209
dtype: float64","count    149.000000
mean       3.576187
std        8.779375
min        0.005227
25%        0.713770
50%        1.882986
75%        3.051090
max       56.272673
Name: % error, dtype: float64",4
19,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.3,"no_mbtree    30.711192
no_8x8dct    14.094853
dtype: float64","count    149.000000
mean       3.577446
std        8.779255
min        0.003278
25%        0.711807
50%        1.874091
75%        3.059555
max       56.268216
Name: % error, dtype: float64",4
20,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.3,"no_8x8dct    1.339381e+15
no_mbtree    2.355321e+14
ref_9        5.887296e+13
dtype: float64","count    1.490000e+02
mean     1.806337e+12
std      1.476653e+13
min      1.963879e-02
25%      9.175989e-01
50%      2.169869e+00
75%      2.972461e+00
max      1.508976e+14
Name: % error, dtype: float64",4
21,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.3,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.577847
std        8.713087
min        0.046515
25%        0.910527
50%        2.185120
75%        2.886902
max       56.112069
Name: % error, dtype: float64",4
22,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.597078
std        8.724123
min        0.060783
25%        0.921464
50%        2.200039
75%        2.997369
max       56.123458
Name: % error, dtype: float64",4
23,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    149.000000
mean       3.607025
std        8.772815
min        0.060698
25%        0.921249
50%        2.199969
75%        2.997154
max       56.123495
Name: % error, dtype: float64",4
24,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.4,"ref_1        1.678257e+02
no_mbtree    3.164120e+01
no_8x8dct    1.503902e+01
ref_9        1.776357e-14
dtype: float64","count    128.000000
mean       2.560462
std        4.188705
min        0.050328
25%        0.761298
50%        2.053391
75%        2.816795
max       28.525753
Name: % error, dtype: float64",4
25,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.3, max_iter=5)",Performance,0.4,"ref_1        140.360049
no_mbtree     29.808180
no_8x8dct     13.056269
dtype: float64","count    128.000000
mean       2.864432
std        4.856450
min        0.039964
25%        1.185535
50%        1.709167
75%        3.254021
max       32.960354
Name: % error, dtype: float64",4
26,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.2),Performance,0.4,"ref_1        138.77768
no_mbtree     30.70289
no_8x8dct     14.10580
dtype: float64","count    128.000000
mean       2.790664
std        4.900054
min        0.012653
25%        0.929495
50%        1.882873
75%        2.913372
max       33.206041
Name: % error, dtype: float64",4
27,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=5)",Performance,0.4,"ref_1        140.360049
no_mbtree     29.808180
no_8x8dct     13.056269
dtype: float64","count    128.000000
mean       2.864432
std        4.856450
min        0.039964
25%        1.185535
50%        1.709167
75%        3.254021
max       32.960354
Name: % error, dtype: float64",4
28,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.4,"no_mbtree    1.899426e+15
no_8x8dct    1.801047e+15
ref_9        8.348290e+13
ref_1        1.641800e+13
dtype: float64","count    1.280000e+02
mean     9.699103e+12
std      6.314593e+13
min      7.008800e-02
25%      1.073613e+00
50%      2.176515e+00
75%      2.825410e+00
max      5.130377e+14
Name: % error, dtype: float64",4
29,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.4,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.886599
std        5.706306
min        0.113300
25%        0.752096
50%        2.138589
75%        2.673978
max       38.764008
Name: % error, dtype: float64",4
30,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.621592
std        4.426346
min        0.029868
25%        0.785714
50%        2.130549
75%        2.723784
max       30.979841
Name: % error, dtype: float64",4
31,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    128.000000
mean       2.621529
std        4.426251
min        0.030114
25%        0.785515
50%        2.130627
75%        2.723654
max       30.979221
Name: % error, dtype: float64",4
32,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.5,"ref_1        169.375876
ref_9        162.273333
no_mbtree     32.330699
no_8x8dct     15.929301
dtype: float64","count    106.000000
mean       1.828881
std        1.166109
min        0.086807
25%        0.768921
50%        1.906749
75%        2.802579
max        3.854096
Name: % error, dtype: float64",4
33,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.5, max_iter=1)",Performance,0.5,"ref_1        200.003750
ref_9         55.157016
no_mbtree     29.911117
no_8x8dct     13.064423
dtype: float64","count    106.000000
mean       2.196178
std        2.206320
min        0.006213
25%        0.763070
50%        1.801508
75%        3.270637
max       14.356688
Name: % error, dtype: float64",4
34,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.3),Performance,0.5,"ref_1        159.324969
ref_9        131.294265
no_mbtree     31.122830
no_8x8dct     14.769281
dtype: float64","count    106.000000
mean       1.987491
std        1.533861
min        0.012330
25%        0.544770
50%        1.941218
75%        2.903711
max        8.522277
Name: % error, dtype: float64",4
35,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.5, l1_ratio=1.0, max_iter=1)",Performance,0.5,"ref_1        200.003750
ref_9         55.157016
no_mbtree     29.911117
no_8x8dct     13.064423
dtype: float64","count    106.000000
mean       2.196178
std        2.206320
min        0.006213
25%        0.763070
50%        1.801508
75%        3.270637
max       14.356688
Name: % error, dtype: float64",4
36,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.5,"no_8x8dct    1.611856e+15
ref_1        3.785372e+14
no_mbtree    1.839589e+14
ref_9        2.600404e+13
dtype: float64","count    1.060000e+02
mean     1.466293e+13
std      8.742769e+13
min      2.498415e-01
25%      5.542846e-01
50%      2.086310e+00
75%      2.918362e+00
max      6.338911e+14
Name: % error, dtype: float64",4
37,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.5,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.253637
std        2.871433
min        0.014169
25%        0.774855
50%        2.104098
75%        2.543388
max       20.701280
Name: % error, dtype: float64",4
38,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.154360
std        2.420252
min        0.014925
25%        0.790552
50%        2.129218
75%        2.537500
max       17.603740
Name: % error, dtype: float64",4
39,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    106.000000
mean       2.407096
std        4.126703
min        0.014800
25%        0.790752
50%        2.129059
75%        2.537317
max       30.979221
Name: % error, dtype: float64",4
40,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        168.882358
ref_9        162.273333
no_mbtree     31.643303
no_8x8dct     15.762220
dtype: float64","count    85.000000
mean      1.819035
std       1.195642
min       0.006941
25%       0.666193
50%       1.896461
75%       2.799616
max       4.048645
Name: % error, dtype: float64",4
41,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.5, max_iter=1)",Performance,0.6,"ref_1        194.249787
ref_9         49.778624
no_mbtree     28.127277
no_8x8dct     12.615659
dtype: float64","count    85.000000
mean      2.518914
std       2.551299
min       0.081180
25%       1.080516
50%       1.969858
75%       3.686388
max      16.044666
Name: % error, dtype: float64",4
42,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.6,"ref_1        168.751703
ref_9        160.745932
no_mbtree     31.605289
no_8x8dct     15.726519
dtype: float64","count    85.000000
mean      1.826961
std       1.198492
min       0.015521
25%       0.671747
50%       1.916744
75%       2.807066
max       4.069356
Name: % error, dtype: float64",4
43,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.01, max_iter=5)",Performance,0.6,"ref_1        145.103134
ref_9        111.687369
no_mbtree     29.493098
no_8x8dct     13.777181
dtype: float64","count    85.000000
mean      2.321675
std       2.289774
min       0.027105
25%       0.895527
50%       1.742982
75%       3.222382
max      13.930172
Name: % error, dtype: float64",4
44,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        1.584006e+15
no_mbtree    9.398416e+14
no_8x8dct    1.007657e+14
ref_9        2.367878e+13
dtype: float64","count    8.500000e+01
mean     4.736720e+12
std      2.527619e+13
min      1.901141e-01
25%      7.437724e-01
50%      2.110348e+00
75%      2.661444e+00
max      1.662367e+14
Name: % error, dtype: float64",4
45,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.6,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.265465
std       3.084993
min       0.048775
25%       0.771846
50%       2.153303
75%       2.621994
max      20.757496
Name: % error, dtype: float64",4
46,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.107671
std       1.957149
min       0.142766
25%       0.758837
50%       2.234367
75%       2.638180
max      12.271058
Name: % error, dtype: float64",4
47,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    85.000000
mean      2.548491
std       4.575826
min       0.142494
25%       0.758804
50%       2.234090
75%       2.637998
max      30.979221
Name: % error, dtype: float64",4
48,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        169.300594
ref_9        162.273333
no_mbtree     31.974783
no_8x8dct     16.307201
dtype: float64","count    64.000000
mean      1.892172
std       1.158596
min       0.025902
25%       0.806146
50%       1.872030
75%       2.780916
max       3.916818
Name: % error, dtype: float64",4
49,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.2, max_iter=1)",Performance,0.7,"ref_1        211.946164
ref_9         66.787937
no_mbtree     30.171518
no_8x8dct     15.271563
dtype: float64","count    64.000000
mean      2.368352
std       2.082856
min       0.153238
25%       0.633486
50%       2.180144
75%       3.182069
max      10.400812
Name: % error, dtype: float64",4
50,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.3),Performance,0.7,"ref_1        159.608202
ref_9        131.347371
no_mbtree     31.038984
no_8x8dct     15.443037
dtype: float64","count    64.000000
mean      2.154988
std       1.647870
min       0.066798
25%       0.680049
50%       2.130977
75%       2.941614
max       8.414959
Name: % error, dtype: float64",4
51,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=1)",Performance,0.7,"ref_1        211.946164
ref_9         66.787937
no_mbtree     30.171518
no_8x8dct     15.271563
dtype: float64","count    64.000000
mean      2.368352
std       2.082856
min       0.153238
25%       0.633486
50%       2.180144
75%       3.182069
max      10.400812
Name: % error, dtype: float64",4
52,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        61.327667
ref_9        54.091111
no_8x8dct    15.516619
no_mbtree    11.184911
dtype: float64","count    64.000000
mean      2.548995
std       3.273949
min       0.048304
25%       0.819422
50%       2.213595
75%       2.545271
max      18.393127
Name: % error, dtype: float64",4
53,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.7,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.496291
std       3.729946
min       0.081538
25%       0.810305
50%       2.121963
75%       2.562775
max      22.284747
Name: % error, dtype: float64",4
54,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.385509
std       2.808187
min       0.048036
25%       0.819272
50%       2.213563
75%       2.545365
max      16.671440
Name: % error, dtype: float64",4
55,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    64.000000
mean      2.004693
std       1.225359
min       0.048304
25%       0.819422
50%       2.213595
75%       2.545271
max       4.505930
Name: % error, dtype: float64",4
56,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.8,"ref_1        170.966275
ref_9        167.637794
no_mbtree     32.640332
no_8x8dct     16.919905
dtype: float64","count    43.000000
mean      1.759195
std       1.074925
min       0.053211
25%       0.918698
50%       1.512757
75%       2.436961
max       3.921198
Name: % error, dtype: float64",4
57,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.8,"ref_1        170.578239
ref_9        162.046260
no_mbtree     32.003487
no_8x8dct     16.536242
dtype: float64","count    43.000000
mean      1.744454
std       1.105374
min       0.068521
25%       0.876516
50%       1.744108
75%       2.531747
max       4.005253
Name: % error, dtype: float64",4
58,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.02),Performance,0.8,"ref_1        170.875915
ref_9        166.570337
no_mbtree     32.584679
no_8x8dct     16.920164
dtype: float64","count    43.000000
mean      1.758686
std       1.074621
min       0.070779
25%       0.918674
50%       1.531667
75%       2.436895
max       3.939445
Name: % error, dtype: float64",4
59,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=100)",Performance,0.8,"ref_1        170.578239
ref_9        162.046260
no_mbtree     32.003487
no_8x8dct     16.536242
dtype: float64","count    43.000000
mean      1.744454
std       1.105374
min       0.068521
25%       0.876516
50%       1.744108
75%       2.531747
max       4.005253
Name: % error, dtype: float64",4
60,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.8,"ref_1        86.457624
ref_9        84.878333
no_mbtree    11.433731
no_8x8dct     9.586667
dtype: float64","count    43.000000
mean      1.689328
std       1.061104
min       0.046450
25%       0.820926
50%       1.909980
75%       2.226389
max       4.062450
Name: % error, dtype: float64",4
61,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.8,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.691630
std       1.062465
min       0.001399
25%       0.828448
50%       1.861240
75%       2.214276
max       4.012681
Name: % error, dtype: float64",4
62,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.689333
std       1.061107
min       0.046772
25%       0.820766
50%       1.910309
75%       2.226548
max       4.062785
Name: % error, dtype: float64",4
63,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    43.000000
mean      1.689328
std       1.061104
min       0.046450
25%       0.820926
50%       1.909980
75%       2.226389
max       4.062450
Name: % error, dtype: float64",4
64,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.9,"ref_1        171.034274
ref_9        167.593791
no_mbtree     32.688288
no_8x8dct     17.183921
dtype: float64","count    22.000000
mean      1.646978
std       1.178342
min       0.076917
25%       0.639723
50%       1.411634
75%       2.372087
max       3.880762
Name: % error, dtype: float64",4
65,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.9,"ref_1        170.641622
ref_9        161.298337
no_mbtree     32.062172
no_8x8dct     16.821500
dtype: float64","count    22.000000
mean      1.614171
std       1.192240
min       0.149477
25%       0.545282
50%       1.538123
75%       2.498427
max       3.819150
Name: % error, dtype: float64",4
66,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",Ridge(alpha=0.01),Performance,0.9,"ref_1        170.992953
ref_9        167.056478
no_mbtree     32.663065
no_8x8dct     17.184762
dtype: float64","count    22.000000
mean      1.646510
std       1.177138
min       0.085087
25%       0.643802
50%       1.411640
75%       2.373107
max       3.872702
Name: % error, dtype: float64",4
67,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=100)",Performance,0.9,"ref_1        170.641622
ref_9        161.298337
no_mbtree     32.062172
no_8x8dct     16.821500
dtype: float64","count    22.000000
mean      1.614171
std       1.192240
min       0.149477
25%       0.545282
50%       1.538123
75%       2.498427
max       3.819150
Name: % error, dtype: float64",4
68,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",LinearRegression(),Performance,0.9,"no_mbtree    2.437726e+14
no_8x8dct    8.982768e+13
ref_1        1.130415e+13
ref_9        2.105799e+11
dtype: float64","count    22.000000
mean      1.599982
std       1.152835
min       0.077921
25%       0.771644
50%       1.260320
75%       2.322215
max       4.223483
Name: % error, dtype: float64",4
69,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",RandomForestRegressor(),Performance,0.9,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.562668
std       1.164331
min       0.057391
25%       0.624304
50%       1.318205
75%       2.196151
max       4.073831
Name: % error, dtype: float64",4
70,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.562933
std       1.164768
min       0.011350
25%       0.616764
50%       1.358187
75%       2.165354
max       4.025941
Name: % error, dtype: float64",4
71,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
Name: % error, dtype: float64","count    22.000000
mean      1.562930
std       1.164806
min       0.011031
25%       0.616763
50%       1.358356
75%       2.165231
max       4.025609
Name: % error, dtype: float64",4
72,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    3.220708e+01
no_8x8dct    1.539177e+01
no_cabac     1.039988e+01
ref_9        2.192690e-15
dtype: float64","count    191.000000
mean       2.280277
std        7.768605
min        0.001451
25%        0.575059
50%        1.211964
75%        1.486984
max       55.867090
Name: % error, dtype: float64",6
73,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","Lasso(alpha=0.1, max_iter=5)",Performance,0.1,"no_mbtree    31.636131
no_8x8dct    15.017228
no_cabac      9.663082
dtype: float64","count    191.000000
mean       2.300667
std        7.767068
min        0.000526
25%        0.494157
50%        1.117527
75%        1.620018
max       55.819894
Name: % error, dtype: float64",6
74,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.1,"no_mbtree    32.131753
no_8x8dct    15.369947
no_cabac     10.345941
dtype: float64","count    191.000000
mean       2.281209
std        7.767887
min        0.000655
25%        0.546795
50%        1.201195
75%        1.501739
max       55.860772
Name: % error, dtype: float64",6
75,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=5)",Performance,0.1,"no_mbtree    31.636131
no_8x8dct    15.017228
no_cabac      9.663082
dtype: float64","count    191.000000
mean       2.300667
std        7.767068
min        0.000526
25%        0.494157
50%        1.117527
75%        1.620018
max       55.819894
Name: % error, dtype: float64",6
76,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    1.125481e+01
no_8x8dct    3.730370e+00
no_cabac     3.645833e+00
ref_9        1.421085e-14
ref_1        3.774758e-15
ref_5        8.881784e-16
dtype: float64","count    191.000000
mean       2.331256
std        7.745030
min        0.013831
25%        0.469245
50%        1.027597
75%        1.681791
max       55.697487
Name: % error, dtype: float64",6
77,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.1,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    191.000000
mean       2.304894
std        7.760222
min        0.003574
25%        0.364096
50%        1.032336
75%        1.704005
max       55.799831
Name: % error, dtype: float64",6
78,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    191.000000
mean       2.535711
std        7.728585
min        0.013613
25%        0.524809
50%        1.095068
75%        1.900466
max       55.697449
Name: % error, dtype: float64",6
79,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    191.000000
mean       2.522001
std        7.654271
min        0.013831
25%        0.524721
50%        1.095269
75%        1.900378
max       55.697487
Name: % error, dtype: float64",6
80,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    31.460268
no_8x8dct    16.202977
no_cabac     11.120765
dtype: float64","count    170.000000
mean       2.434046
std        8.190723
min        0.006457
25%        0.521328
50%        1.156167
75%        1.419999
max       55.772342
Name: % error, dtype: float64",6
81,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","Lasso(alpha=0.05, max_iter=5)",Performance,0.2,"no_mbtree    31.219832
no_8x8dct    15.971645
no_cabac     10.838169
dtype: float64","count    170.000000
mean       2.440624
std        8.190470
min        0.004639
25%        0.477680
50%        1.125041
75%        1.484318
max       55.748345
Name: % error, dtype: float64",6
82,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Ridge(alpha=0.05),Performance,0.2,"no_mbtree    31.297981
no_8x8dct    16.115943
no_cabac     11.028023
dtype: float64","count    170.000000
mean       2.436965
std        8.189464
min        0.000189
25%        0.481254
50%        1.144694
75%        1.453883
max       55.756350
Name: % error, dtype: float64",6
83,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=1.0, max_iter=5)",Performance,0.2,"no_mbtree    31.219832
no_8x8dct    15.971645
no_cabac     10.838169
dtype: float64","count    170.000000
mean       2.440624
std        8.190470
min        0.004639
25%        0.477680
50%        1.125041
75%        1.484318
max       55.748345
Name: % error, dtype: float64",6
84,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    1.073791e+01
no_8x8dct    4.524450e+00
no_cabac     3.665711e+00
ref_5        1.776357e-15
ref_1        2.876906e-17
dtype: float64","count    170.000000
mean       2.444175
std        8.123762
min        0.010766
25%        0.695046
50%        1.034931
75%        1.367157
max       55.282820
Name: % error, dtype: float64",6
85,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.2,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    170.000000
mean       2.439398
std        8.110247
min        0.008798
25%        0.599577
50%        0.988353
75%        1.421998
max       55.288608
Name: % error, dtype: float64",6
86,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    170.000000
mean       2.450790
std        8.150426
min        0.094769
25%        0.635333
50%        1.025098
75%        1.389634
max       55.256626
Name: % error, dtype: float64",6
87,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    170.000000
mean       2.423074
std        8.007303
min        0.094960
25%        0.635236
50%        1.025095
75%        1.389529
max       55.256647
Name: % error, dtype: float64",6
88,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree    3.194948e+01
no_8x8dct    1.570165e+01
no_cabac     9.847298e+00
ref_9        7.105427e-15
dtype: float64","count    149.000000
mean       2.646772
std        8.765437
min        0.076088
25%        0.565633
50%        1.244390
75%        1.535192
max       55.921914
Name: % error, dtype: float64",6
89,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.3,"no_mbtree    31.901561
no_8x8dct    15.651686
no_cabac      9.788386
dtype: float64","count    149.000000
mean       2.649441
std        8.765344
min        0.062862
25%        0.565762
50%        1.237315
75%        1.561577
max       55.917189
Name: % error, dtype: float64",6
90,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"no_mbtree    31.927516
no_8x8dct    15.689533
no_cabac      9.835459
dtype: float64","count    149.000000
mean       2.647229
std        8.765284
min        0.072732
25%        0.568385
50%        1.241023
75%        1.540042
max       55.919809
Name: % error, dtype: float64",6
91,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.3,"no_mbtree    31.901561
no_8x8dct    15.651686
no_cabac      9.788386
dtype: float64","count    149.000000
mean       2.649441
std        8.765344
min        0.062862
25%        0.565762
50%        1.237315
75%        1.561577
max       55.917189
Name: % error, dtype: float64",6
92,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.3,"no_8x8dct    1.375800e+15
no_mbtree    1.026684e+15
ref_1        1.500416e+14
no_cabac     7.215873e+13
ref_9        6.293393e+13
ref_5        4.489744e+13
dtype: float64","count    1.490000e+02
mean     2.117329e+12
std      1.243014e+13
min      3.879207e-02
25%      5.094169e-01
50%      1.213047e+00
75%      1.482231e+00
max      1.097851e+14
Name: % error, dtype: float64",6
93,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.3,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    149.000000
mean       2.638522
std        8.700506
min        0.130057
25%        0.688367
50%        1.001877
75%        1.464209
max       55.573621
Name: % error, dtype: float64",6
94,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    149.000000
mean       2.638251
std        8.719609
min        0.171528
25%        0.718525
50%        1.030515
75%        1.404320
max       55.555220
Name: % error, dtype: float64",6
95,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    149.000000
mean       2.647668
std        8.766099
min        0.171478
25%        0.718530
50%        1.030655
75%        1.404076
max       55.685597
Name: % error, dtype: float64",6
96,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.4,"ref_1        8.258852e+01
ref_5        8.258852e+01
no_mbtree    3.203174e+01
no_8x8dct    1.633888e+01
no_cabac     1.019892e+01
ref_9        7.105427e-15
dtype: float64","count    128.000000
mean       1.986170
std        6.205529
min        0.015809
25%        0.573940
50%        1.212725
75%        1.410276
max       41.831700
Name: % error, dtype: float64",6
97,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.4,"ref_1        143.973133
no_mbtree     30.893020
ref_5         22.266480
no_8x8dct     14.344321
no_cabac       9.791167
dtype: float64","count    128.000000
mean       1.843070
std        4.665593
min        0.008211
25%        0.476384
50%        1.308878
75%        1.808468
max       31.857221
Name: % error, dtype: float64",6
98,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Ridge(alpha=0.1),Performance,0.4,"ref_1        78.450631
ref_5        78.450631
no_mbtree    31.697304
no_8x8dct    16.038491
no_cabac     10.236087
dtype: float64","count    128.000000
mean       2.024596
std        6.303339
min        0.005323
25%        0.557404
50%        1.256619
75%        1.515718
max       42.465026
Name: % error, dtype: float64",6
99,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.4,"ref_1        143.973133
no_mbtree     30.893020
ref_5         22.266480
no_8x8dct     14.344321
no_cabac       9.791167
dtype: float64","count    128.000000
mean       1.843070
std        4.665593
min        0.008211
25%        0.476384
50%        1.308878
75%        1.808468
max       31.857221
Name: % error, dtype: float64",6
100,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.4,"no_mbtree    5.688136e+14
ref_5        2.727988e+14
no_8x8dct    1.915937e+14
no_cabac     1.668660e+14
ref_1        1.111804e+14
ref_9        1.113126e+13
dtype: float64","count    1.280000e+02
mean     1.651557e+12
std      1.230310e+13
min      2.911141e-01
25%      6.693471e-01
50%      1.037700e+00
75%      1.445295e+00
max      1.037643e+14
Name: % error, dtype: float64",6
101,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.4,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    128.000000
mean       2.359327
std        7.615841
min        0.188967
25%        0.727767
50%        1.008246
75%        1.290225
max       50.113514
Name: % error, dtype: float64",6
102,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    128.000000
mean       2.161415
std        6.832172
min        0.183446
25%        0.729208
50%        1.014989
75%        1.277693
max       46.669621
Name: % error, dtype: float64",6
103,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    128.000000
mean       1.746142
std        4.402310
min        0.181006
25%        0.729173
50%        1.015074
75%        1.279002
max       30.979221
Name: % error, dtype: float64",6
104,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.5,"ref_1        164.209564
ref_9        163.241449
no_mbtree     31.945396
no_8x8dct     16.314604
no_cabac      10.724264
ref_5          0.968115
dtype: float64","count    106.000000
mean       1.044254
std        0.544191
min        0.010704
25%        0.600359
50%        1.183693
75%        1.404545
max        2.253642
Name: % error, dtype: float64",6
105,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","Lasso(alpha=0.3, max_iter=1)",Performance,0.5,"ref_1        210.807596
ref_9         65.857968
no_mbtree     31.275347
no_8x8dct     14.480036
ref_5         11.107905
no_cabac       9.626964
dtype: float64","count    106.000000
mean       1.366652
std        1.478028
min        0.035965
25%        0.601348
50%        1.271385
75%        1.725972
max       10.265394
Name: % error, dtype: float64",6
106,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.5,"ref_1        163.620874
ref_9        162.143770
no_mbtree     31.903292
no_8x8dct     16.275247
no_cabac      10.746011
ref_5          1.477104
dtype: float64","count    106.000000
mean       1.051307
std        0.552214
min        0.010082
25%        0.592531
50%        1.192644
75%        1.413777
max        2.263178
Name: % error, dtype: float64",6
107,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.3, l1_ratio=1.0, max_iter=1)",Performance,0.5,"ref_1        210.807596
ref_9         65.857968
no_mbtree     31.275347
no_8x8dct     14.480036
ref_5         11.107905
no_cabac       9.626964
dtype: float64","count    106.000000
mean       1.366652
std        1.478028
min        0.035965
25%        0.601348
50%        1.271385
75%        1.725972
max       10.265394
Name: % error, dtype: float64",6
108,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.5,"no_cabac     2.543995e+14
no_8x8dct    2.373097e+14
ref_9        1.695918e+14
ref_5        1.671755e+14
ref_1        1.214150e+14
no_mbtree    6.224703e+13
dtype: float64","count    1.060000e+02
mean     1.600028e+12
std      9.534066e+12
min      2.625304e-01
25%      7.648941e-01
50%      1.091496e+00
75%      1.400888e+00
max      6.884430e+13
Name: % error, dtype: float64",6
109,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.5,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    106.000000
mean       1.609841
std        3.556084
min        0.097352
25%        0.778055
50%        1.038792
75%        1.346907
max       26.782749
Name: % error, dtype: float64",6
110,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    106.000000
mean       1.279843
std        1.429118
min        0.096663
25%        0.765300
50%        1.046477
75%        1.368437
max       11.075191
Name: % error, dtype: float64",6
111,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    106.000000
mean       1.671773
std        4.106399
min        0.094021
25%        0.771700
50%        1.039960
75%        1.364358
max       30.979221
Name: % error, dtype: float64",6
112,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.6,"ref_9        5.308365e+12
ref_5        5.308365e+12
ref_1        5.308365e+12
no_mbtree    3.185107e+01
no_8x8dct    1.651318e+01
no_cabac     1.082715e+01
dtype: float64","count    85.000000
mean      1.078975
std       0.538989
min       0.016293
25%       0.604597
50%       1.174934
75%       1.409659
max       2.343692
Name: % error, dtype: float64",6
113,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","Lasso(alpha=0.5, max_iter=1)",Performance,0.6,"ref_1        194.249787
ref_9         49.778624
no_mbtree     28.127277
no_8x8dct     12.615659
no_cabac       8.979826
dtype: float64","count    85.000000
mean      1.925775
std       2.323034
min       0.089941
25%       0.768694
50%       1.366215
75%       2.589200
max      15.479441
Name: % error, dtype: float64",6
114,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.6,"ref_1        163.598496
ref_9        162.132582
no_mbtree     31.813344
no_8x8dct     16.479031
no_cabac      10.842590
ref_5          1.465915
dtype: float64","count    85.000000
mean      1.087450
std       0.548046
min       0.026828
25%       0.605579
50%       1.180372
75%       1.412008
max       2.351727
Name: % error, dtype: float64",6
115,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, max_iter=1)",Performance,0.6,"ref_1        171.018167
ref_9         83.040549
no_mbtree     29.327930
no_8x8dct     14.143737
no_cabac      11.196142
ref_5          2.474321
dtype: float64","count    85.000000
mean      1.545208
std       2.045348
min       0.006849
25%       0.412663
50%       1.381391
75%       1.984641
max      13.656257
Name: % error, dtype: float64",6
116,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.6,"no_mbtree    8.238694e+14
ref_1        4.815574e+14
ref_5        3.397462e+14
no_8x8dct    7.914466e+13
no_cabac     6.646256e+13
ref_9        5.624386e+13
dtype: float64","count    8.500000e+01
mean     4.369228e+11
std      2.548605e+12
min      6.594968e-02
25%      6.981424e-01
50%      1.098458e+00
75%      1.323195e+00
max      2.062910e+13
Name: % error, dtype: float64",6
117,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.6,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    85.000000
mean      1.607631
std       3.317732
min       0.074786
25%       0.765858
50%       1.111173
75%       1.335813
max      22.750350
Name: % error, dtype: float64",6
118,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    85.000000
mean      1.253785
std       0.932893
min       0.098577
25%       0.750711
50%       1.111259
75%       1.359678
max       6.155313
Name: % error, dtype: float64",6
119,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    85.000000
mean      1.547643
std       3.449589
min       0.094021
25%       0.746004
50%       1.099583
75%       1.355908
max      32.357264
Name: % error, dtype: float64",6
120,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        164.338711
ref_9        163.306022
no_mbtree     31.862953
no_8x8dct     16.657164
no_cabac      10.574880
ref_5          1.032689
dtype: float64","count    64.000000
mean      1.092944
std       0.539045
min       0.041904
25%       0.692229
50%       1.161937
75%       1.420914
max       2.161839
Name: % error, dtype: float64",6
121,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","Lasso(alpha=0.1, max_iter=1)",Performance,0.7,"ref_1        219.447534
ref_9         74.238277
ref_5         36.177146
no_mbtree     30.857569
no_8x8dct     16.015676
no_cabac      10.297529
dtype: float64","count    64.000000
mean      1.365846
std       1.234699
min       0.007896
25%       0.728274
50%       1.321532
75%       1.662990
max       7.303110
Name: % error, dtype: float64",6
122,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Ridge(alpha=0.1),Performance,0.7,"ref_1        158.742760
ref_9        153.131986
no_mbtree     31.549176
no_8x8dct     16.372369
no_cabac      10.714286
ref_5          5.610774
dtype: float64","count    64.000000
mean      1.192302
std       0.761169
min       0.038153
25%       0.731239
50%       1.223317
75%       1.486591
max       4.333137
Name: % error, dtype: float64",6
123,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=1)",Performance,0.7,"ref_1        219.447534
ref_9         74.238277
ref_5         36.177146
no_mbtree     30.857569
no_8x8dct     16.015676
no_cabac      10.297529
dtype: float64","count    64.000000
mean      1.365846
std       1.234699
min       0.007896
25%       0.728274
50%       1.321532
75%       1.662990
max       7.303110
Name: % error, dtype: float64",6
124,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        57.716326
ref_9        55.903718
no_8x8dct    14.501140
no_mbtree    11.155343
no_cabac      3.142438
ref_5         1.812607
dtype: float64","count    64.000000
mean      1.774470
std       3.265067
min       0.323358
25%       0.807418
50%       1.027825
75%       1.472704
max      18.357505
Name: % error, dtype: float64",6
125,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.7,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    64.000000
mean      1.759836
std       3.940595
min       0.260552
25%       0.785482
50%       0.968626
75%       1.409944
max      23.531440
Name: % error, dtype: float64",6
126,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    64.000000
mean      1.341929
std       1.278542
min       0.273840
25%       0.812162
50%       1.027233
75%       1.506199
max       7.579367
Name: % error, dtype: float64",6
127,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    64.000000
mean      1.231724
std       0.802209
min       0.271083
25%       0.811655
50%       1.032593
75%       1.509265
max       4.505930
Name: % error, dtype: float64",6
128,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.8,"ref_9        167.269731
ref_1        166.904453
no_mbtree     31.979789
no_8x8dct     16.936616
no_cabac      10.879926
ref_5          0.365278
dtype: float64","count    43.000000
mean      1.039395
std       0.566022
min       0.056057
25%       0.502230
50%       1.119170
75%       1.320215
max       2.247496
Name: % error, dtype: float64",6
129,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Lasso(alpha=0.01),Performance,0.8,"ref_9        167.059635
ref_1        166.526944
no_mbtree     31.917961
no_8x8dct     16.898248
no_cabac      10.856040
dtype: float64","count    43.000000
mean      1.041941
std       0.566805
min       0.047188
25%       0.502120
50%       1.115076
75%       1.328962
max       2.251864
Name: % error, dtype: float64",6
130,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.8,"ref_9        166.888751
ref_1        166.699771
no_mbtree     31.951677
no_8x8dct     16.936835
no_cabac      10.895259
ref_5          0.188980
dtype: float64","count    43.000000
mean      1.040544
std       0.566637
min       0.051317
25%       0.496708
50%       1.124350
75%       1.324890
max       2.258457
Name: % error, dtype: float64",6
131,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0)",Performance,0.8,"ref_9        167.059635
ref_1        166.526944
no_mbtree     31.917961
no_8x8dct     16.898248
no_cabac      10.856040
dtype: float64","count    43.000000
mean      1.041941
std       0.566805
min       0.047188
25%       0.502120
50%       1.115076
75%       1.328962
max       2.251864
Name: % error, dtype: float64",6
132,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.8,"ref_9        84.735379
ref_1        84.592425
no_mbtree    11.261227
no_8x8dct     8.582219
no_cabac      3.311690
ref_5         0.142954
dtype: float64","count    43.000000
mean      1.048470
std       0.396556
min       0.458758
25%       0.748180
50%       0.962935
75%       1.182188
max       2.004694
Name: % error, dtype: float64",6
133,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.8,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    43.000000
mean      1.049633
std       0.404130
min       0.517616
25%       0.726931
50%       0.969551
75%       1.168793
max       2.025654
Name: % error, dtype: float64",6
134,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    43.000000
mean      1.050058
std       0.398199
min       0.490903
25%       0.732893
50%       0.970511
75%       1.165038
max       2.025213
Name: % error, dtype: float64",6
135,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    43.000000
mean      1.048233
std       0.397465
min       0.491269
25%       0.730961
50%       0.971485
75%       1.157697
max       2.026197
Name: % error, dtype: float64",6
136,LinearRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.9,"ref_1        1.206628e+15
ref_5        1.206628e+15
ref_9        1.206628e+15
no_mbtree    3.175000e+01
no_8x8dct    1.714062e+01
no_cabac     1.100000e+01
dtype: float64","count    22.000000
mean      1.226010
std       0.519691
min       0.373148
25%       0.961370
50%       1.147149
75%       1.415627
max       2.399245
Name: % error, dtype: float64",6
137,Lasso,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Lasso(alpha=0.01),Performance,0.9,"ref_9        166.964484
ref_1        166.635329
no_mbtree     32.171014
no_8x8dct     17.026116
no_cabac      10.826138
dtype: float64","count    22.000000
mean      1.222514
std       0.497711
min       0.315833
25%       1.000876
50%       1.152355
75%       1.353911
max       2.236751
Name: % error, dtype: float64",6
138,Ridge,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.9,"ref_9        166.910702
ref_1        166.764527
no_mbtree     32.206935
no_8x8dct     17.062803
no_cabac      10.863481
ref_5          0.146175
dtype: float64","count    22.000000
mean      1.220756
std       0.501545
min       0.306802
25%       0.984531
50%       1.166628
75%       1.358290
max       2.241779
Name: % error, dtype: float64",6
139,ElasticNet,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0)",Performance,0.9,"ref_9        166.964484
ref_1        166.635329
no_mbtree     32.171014
no_8x8dct     17.026116
no_cabac      10.826138
dtype: float64","count    22.000000
mean      1.222514
std       0.497711
min       0.315833
25%       1.000876
50%       1.152355
75%       1.353911
max       2.236751
Name: % error, dtype: float64",6
140,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.9,"no_mbtree    2.921282e+14
no_cabac     5.417324e+13
ref_1        4.880076e+13
no_8x8dct    3.118218e+13
ref_9        2.503033e+13
ref_5        2.122790e+13
dtype: float64","count    22.000000
mean      1.169388
std       0.395354
min       0.664492
25%       0.903975
50%       0.992892
75%       1.518947
max       1.923168
Name: % error, dtype: float64",6
141,RandomForest,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.9,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    22.000000
mean      1.158203
std       0.384758
min       0.658608
25%       0.886311
50%       1.018725
75%       1.496834
max       1.922876
Name: % error, dtype: float64",6
142,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    22.000000
mean      1.160518
std       0.387828
min       0.651699
25%       0.874402
50%       0.996682
75%       1.488951
max       1.884309
Name: % error, dtype: float64",6
143,DecisionTree,False,DecisionTree,"Index(['ref_1', 'ref_9', 'no_mbtree', 'no_8x8dct', 'ref_5', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"ref_1       NaN
ref_9       NaN
no_mbtree   NaN
no_8x8dct   NaN
ref_5       NaN
no_cabac    NaN
Name: % error, dtype: float64","count    22.000000
mean      1.158681
std       0.387837
min       0.657050
25%       0.875670
50%       0.993931
75%       1.489302
max       1.885980
Name: % error, dtype: float64",6
