,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    31.59463
dtype: float64","count    191.000000
mean       4.391489
std        7.839393
min        0.028106
25%        1.464271
50%        2.904386
75%        5.243760
max       57.207198
Name: % error, dtype: float64",4
1,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Lasso(max_iter=1),Performance,0.1,"no_mbtree    27.511296
dtype: float64","count    191.000000
mean       4.457360
std        7.790820
min        0.163996
25%        1.428904
50%        3.085218
75%        4.976699
max       56.826538
Name: % error, dtype: float64",4
2,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Ridge(),Performance,0.1,"no_mbtree    26.451318
dtype: float64","count    191.000000
mean       4.479392
std        7.787459
min        0.008248
25%        1.314625
50%        3.321156
75%        4.988090
max       56.727724
Name: % error, dtype: float64",4
3,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=0.1, max_iter=1)",Performance,0.1,"no_mbtree    23.074074
dtype: float64","count    191.000000
mean       4.627350
std        7.763862
min        0.189720
25%        1.340146
50%        3.169061
75%        5.162409
max       56.412887
Name: % error, dtype: float64",4
4,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    10.531543
dtype: float64","count    191.000000
mean       4.391489
std        7.839393
min        0.028106
25%        1.464271
50%        2.904386
75%        5.243760
max       57.207198
Name: % error, dtype: float64",4
5,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",RandomForestRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    191.000000
mean       4.391838
std        7.848127
min        0.097659
25%        1.592210
50%        2.878117
75%        5.202216
max       57.271323
Name: % error, dtype: float64",4
6,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    191.000000
mean       4.391489
std        7.839383
min        0.028289
25%        1.464091
50%        2.904209
75%        5.243754
max       57.207120
Name: % error, dtype: float64",4
7,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    191.000000
mean       4.391489
std        7.839393
min        0.028106
25%        1.464271
50%        2.904386
75%        5.243760
max       57.207198
Name: % error, dtype: float64",4
8,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    29.871587
dtype: float64","count    170.000000
mean       4.630361
std        8.207845
min        0.288434
25%        1.461181
50%        2.999291
75%        5.213217
max       56.898950
Name: % error, dtype: float64",4
9,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","Lasso(alpha=0.5, max_iter=1)",Performance,0.2,"no_mbtree    27.871587
dtype: float64","count    170.000000
mean       4.663744
std        8.194845
min        0.344524
25%        1.332020
50%        3.389150
75%        5.485279
max       56.735810
Name: % error, dtype: float64",4
10,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Ridge(alpha=0.5),Performance,0.2,"no_mbtree    28.513788
dtype: float64","count    170.000000
mean       4.653025
std        8.197307
min        0.465187
25%        1.411078
50%        3.263966
75%        5.375723
max       56.788194
Name: % error, dtype: float64",4
11,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.1, max_iter=1)",Performance,0.2,"no_mbtree    27.857824
dtype: float64","count    170.000000
mean       4.663974
std        8.194810
min        0.341938
25%        1.329460
50%        3.391833
75%        5.487627
max       56.734687
Name: % error, dtype: float64",4
12,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    9.957196
dtype: float64","count    170.000000
mean       4.630361
std        8.207845
min        0.288434
25%        1.461181
50%        2.999291
75%        5.213217
max       56.898950
Name: % error, dtype: float64",4
13,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",RandomForestRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    170.000000
mean       4.629569
std        8.208329
min        0.280054
25%        1.459923
50%        2.990684
75%        5.209559
max       56.902551
Name: % error, dtype: float64",4
14,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    170.000000
mean       4.630375
std        8.207837
min        0.288585
25%        1.461108
50%        2.999446
75%        5.213345
max       56.898885
Name: % error, dtype: float64",4
15,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    170.000000
mean       4.630361
std        8.207845
min        0.288434
25%        1.461181
50%        2.999291
75%        5.213217
max       56.898950
Name: % error, dtype: float64",4
16,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree    30.579905
dtype: float64","count    149.000000
mean       4.917173
std        8.729184
min        0.003498
25%        1.355934
50%        3.413027
75%        5.282809
max       57.024414
Name: % error, dtype: float64",4
17,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.3,"no_mbtree    30.539652
dtype: float64","count    149.000000
mean       4.917763
std        8.728645
min        0.003535
25%        1.363063
50%        3.420301
75%        5.276147
max       57.021391
Name: % error, dtype: float64",4
18,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Ridge(alpha=0.05),Performance,0.3,"no_mbtree    30.482522
dtype: float64","count    149.000000
mean       4.918666
std        8.727853
min        0.013518
25%        1.373182
50%        3.430625
75%        5.272635
max       57.017101
Name: % error, dtype: float64",4
19,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.3,"no_mbtree    30.539652
dtype: float64","count    149.000000
mean       4.917763
std        8.728645
min        0.003535
25%        1.363063
50%        3.420301
75%        5.276147
max       57.021391
Name: % error, dtype: float64",4
20,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree    1.019330e+01
ref_5        1.166815e-61
dtype: float64","count    149.000000
mean       4.917173
std        8.729184
min        0.003498
25%        1.355934
50%        3.413027
75%        5.282809
max       57.024414
Name: % error, dtype: float64",4
21,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",RandomForestRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    149.000000
mean       4.920753
std        8.726856
min        0.016381
25%        1.376084
50%        3.433586
75%        5.245586
max       57.015870
Name: % error, dtype: float64",4
22,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    149.000000
mean       4.917184
std        8.729174
min        0.003356
25%        1.356078
50%        3.413174
75%        5.282675
max       57.024353
Name: % error, dtype: float64",4
23,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    149.000000
mean       4.917173
std        8.729184
min        0.003498
25%        1.355934
50%        3.413027
75%        5.282809
max       57.024414
Name: % error, dtype: float64",4
24,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.4,"ref_1        79.568222
ref_5        79.568222
no_mbtree    31.263023
dtype: float64","count    128.000000
mean       4.384690
std        6.385760
min        0.018093
25%        1.486174
50%        3.206232
75%        5.004837
max       43.959991
Name: % error, dtype: float64",4
25,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","Lasso(alpha=0.2, max_iter=1)",Performance,0.4,"ref_1        127.820843
no_mbtree     29.774927
ref_5         13.631894
dtype: float64","count    128.000000
mean       4.270505
std        5.258271
min        0.222793
25%        1.572268
50%        3.404405
75%        5.200268
max       35.943884
Name: % error, dtype: float64",4
26,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Ridge(alpha=0.1),Performance,0.4,"ref_5        75.666443
ref_1        75.666443
no_mbtree    30.944676
dtype: float64","count    128.000000
mean       4.426042
std        6.474973
min        0.045674
25%        1.509242
50%        3.232933
75%        5.017492
max       44.557877
Name: % error, dtype: float64",4
27,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=1)",Performance,0.4,"ref_1        127.820843
no_mbtree     29.774927
ref_5         13.631894
dtype: float64","count    128.000000
mean       4.270505
std        5.258271
min        0.222793
25%        1.572268
50%        3.404405
75%        5.200268
max       35.943884
Name: % error, dtype: float64",4
28,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.4,"ref_1        39.784111
ref_5        39.784111
no_mbtree    10.421008
dtype: float64","count    128.000000
mean       4.384690
std        6.385760
min        0.018093
25%        1.486174
50%        3.206232
75%        5.004837
max       43.959991
Name: % error, dtype: float64",4
29,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",RandomForestRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    128.000000
mean       4.651586
std        7.528603
min        0.023788
25%        1.475582
50%        3.211746
75%        5.037974
max       51.002396
Name: % error, dtype: float64",4
30,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    128.000000
mean       4.435294
std        6.694892
min        0.018230
25%        1.486309
50%        3.206365
75%        5.004897
max       46.082300
Name: % error, dtype: float64",4
31,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    128.000000
mean       4.694032
std        8.299002
min        0.018093
25%        1.486174
50%        3.206232
75%        5.004837
max       56.940760
Name: % error, dtype: float64",4
32,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.5,"ref_9        161.796329
ref_1        161.319325
no_mbtree     32.425516
ref_5          0.477004
dtype: float64","count    106.000000
mean       3.318860
std        1.999349
min        0.000386
25%        1.661767
50%        2.935904
75%        5.093770
max        7.339651
Name: % error, dtype: float64",4
33,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","Lasso(alpha=0.8, max_iter=5)",Performance,0.5,"ref_1        159.363919
ref_9         75.937928
no_mbtree     27.630278
dtype: float64","count    106.000000
mean       3.681745
std        2.926748
min        0.353825
25%        1.765925
50%        3.566278
75%        5.404672
max       18.340212
Name: % error, dtype: float64",4
34,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Ridge(alpha=0.8),Performance,0.5,"ref_1        126.185266
ref_9        108.168559
no_mbtree     29.703476
ref_5         18.016707
dtype: float64","count    106.000000
mean       3.702056
std        2.922034
min        0.369801
25%        1.576670
50%        3.345880
75%        5.192231
max       18.623236
Name: % error, dtype: float64",4
35,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","ElasticNet(alpha=0.8, l1_ratio=1.0, max_iter=5)",Performance,0.5,"ref_1        159.363919
ref_9         75.937928
no_mbtree     27.630278
dtype: float64","count    106.000000
mean       3.681745
std        2.926748
min        0.353825
25%        1.765925
50%        3.566278
75%        5.404672
max       18.340212
Name: % error, dtype: float64",4
36,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.5,"ref_9        80.898165
ref_1        80.659663
no_mbtree    10.808505
ref_5         0.238502
dtype: float64","count    106.000000
mean       3.318860
std        1.999349
min        0.000386
25%        1.661767
50%        2.935904
75%        5.093770
max        7.339651
Name: % error, dtype: float64",4
37,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",RandomForestRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    106.000000
mean       3.616899
std        2.918385
min        0.063781
25%        1.797344
50%        2.992397
75%        5.183143
max       18.745606
Name: % error, dtype: float64",4
38,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    106.000000
mean       3.318901
std        1.999366
min        0.000581
25%        1.661884
50%        2.935943
75%        5.093975
max        7.339860
Name: % error, dtype: float64",4
39,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    106.000000
mean       3.318860
std        1.999349
min        0.000386
25%        1.661767
50%        2.935904
75%        5.093770
max        7.339651
Name: % error, dtype: float64",4
40,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        5.799686e+14
ref_5        5.799686e+14
ref_9        5.799686e+14
no_mbtree    3.087500e+01
dtype: float64","count    85.000000
mean      3.462435
std       1.992681
min       0.075391
25%       2.032172
50%       3.422160
75%       5.315697
max       7.601888
Name: % error, dtype: float64",4
41,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","Lasso(alpha=0.8, max_iter=100)",Performance,0.6,"ref_1        157.034268
ref_9         60.665487
no_mbtree     25.975081
dtype: float64","count    85.000000
mean      4.059115
std       3.486698
min       0.052502
25%       1.733261
50%       4.147914
75%       5.844853
max      21.080966
Name: % error, dtype: float64",4
42,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Ridge(alpha=0.01),Performance,0.6,"ref_9        160.486086
ref_1        160.305505
no_mbtree     30.760047
ref_5          0.180581
dtype: float64","count    85.000000
mean      3.481048
std       2.003440
min       0.045533
25%       2.028013
50%       3.453064
75%       5.330026
max       7.634040
Name: % error, dtype: float64",4
43,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","ElasticNet(alpha=0.01, max_iter=1)",Performance,0.6,"ref_1        171.018167
ref_9         91.203212
no_mbtree     28.112894
ref_5          7.304954
dtype: float64","count    85.000000
mean      3.789224
std       2.636528
min       0.373721
25%       1.797856
50%       3.887896
75%       5.640614
max      14.048244
Name: % error, dtype: float64",4
44,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        5.052048e+14
ref_5        2.363553e+14
ref_9        1.293624e+14
no_mbtree    1.548976e+13
dtype: float64","count    85.000000
mean      3.462495
std       1.995216
min       0.075391
25%       2.053017
50%       3.422160
75%       5.328265
max       7.601888
Name: % error, dtype: float64",4
45,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",RandomForestRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    85.000000
mean      3.898201
std       3.499376
min       0.098136
25%       2.064596
50%       3.398619
75%       5.349628
max      22.419417
Name: % error, dtype: float64",4
46,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    85.000000
mean      3.473581
std       1.999066
min       0.056521
25%       2.038783
50%       3.441691
75%       5.328480
max       7.622208
Name: % error, dtype: float64",4
47,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    85.000000
mean      3.473518
std       1.999017
min       0.056706
25%       2.038965
50%       3.441499
75%       5.328373
max       7.622008
Name: % error, dtype: float64",4
48,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.7,"ref_9        161.650808
ref_1        161.028283
no_mbtree     30.879043
ref_5          0.622525
dtype: float64","count    64.000000
mean      3.430030
std       2.038775
min       0.152970
25%       2.037087
50%       3.242506
75%       5.356315
max       7.518348
Name: % error, dtype: float64",4
49,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","Lasso(alpha=0.2, max_iter=5)",Performance,0.7,"ref_1        165.143529
ref_9        127.204191
no_mbtree     29.681226
dtype: float64","count    64.000000
mean      3.609527
std       2.307435
min       0.056579
25%       1.932072
50%       3.385562
75%       5.535907
max       9.334878
Name: % error, dtype: float64",4
50,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Ridge(alpha=0.01),Performance,0.7,"ref_9        160.571731
ref_1        160.476795
no_mbtree     30.849724
ref_5          0.094936
dtype: float64","count    64.000000
mean      3.439476
std       2.044020
min       0.143525
25%       2.038579
50%       3.252272
75%       5.355158
max       7.528519
Name: % error, dtype: float64",4
51,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=5)",Performance,0.7,"ref_1        165.143529
ref_9        127.204191
no_mbtree     29.681226
dtype: float64","count    64.000000
mean      3.609527
std       2.307435
min       0.056579
25%       1.932072
50%       3.385562
75%       5.535907
max       9.334878
Name: % error, dtype: float64",4
52,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.7,"no_mbtree    3.579975e+15
ref_5        1.863573e+13
ref_1        1.073798e+13
ref_9        1.036242e+13
dtype: float64","count    64.000000
mean      3.538864
std       2.164454
min       0.168741
25%       1.693536
50%       3.781792
75%       5.823884
max       8.079970
Name: % error, dtype: float64",4
53,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",RandomForestRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    64.000000
mean      3.859624
std       3.181409
min       0.126982
25%       2.068921
50%       3.269378
75%       5.416313
max      17.405534
Name: % error, dtype: float64",4
54,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    64.000000
mean      3.430112
std       2.038830
min       0.152792
25%       2.037204
50%       3.242690
75%       5.356358
max       7.518540
Name: % error, dtype: float64",4
55,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    64.000000
mean      3.430030
std       2.038775
min       0.152970
25%       2.037087
50%       3.242506
75%       5.356315
max       7.518348
Name: % error, dtype: float64",4
56,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.8,"ref_9        170.364953
ref_1        170.272127
no_mbtree     31.419516
ref_5          0.092825
dtype: float64","count    43.000000
mean      3.219879
std       1.933134
min       0.224007
25%       1.917176
50%       2.788493
75%       5.229379
max       7.441854
Name: % error, dtype: float64",4
57,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.8,"ref_1        257.162236
ref_5         86.537947
ref_9         83.535615
no_mbtree     30.539073
dtype: float64","count    43.000000
mean      3.252519
std       1.968818
min       0.071953
25%       2.077507
50%       2.640347
75%       5.342537
max       7.605591
Name: % error, dtype: float64",4
58,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Ridge(alpha=0.01),Performance,0.8,"ref_1        170.067498
ref_9        169.979558
no_mbtree     31.392066
ref_5          0.087939
dtype: float64","count    43.000000
mean      3.220978
std       1.934455
min       0.215102
25%       1.918519
50%       2.779817
75%       5.234723
max       7.451443
Name: % error, dtype: float64",4
59,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.8,"ref_1        257.162236
ref_5         86.537947
ref_9         83.535615
no_mbtree     30.539073
dtype: float64","count    43.000000
mean      3.252519
std       1.968818
min       0.071953
25%       2.077507
50%       2.640347
75%       5.342537
max       7.605591
Name: % error, dtype: float64",4
60,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.8,"ref_9        85.182476
ref_1        85.136064
no_mbtree    10.473172
ref_5         0.046413
dtype: float64","count    43.000000
mean      3.219879
std       1.933134
min       0.224007
25%       1.917176
50%       2.788493
75%       5.229379
max       7.441854
Name: % error, dtype: float64",4
61,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",RandomForestRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    43.000000
mean      3.215001
std       1.927475
min       0.264213
25%       1.911946
50%       2.827666
75%       5.205653
max       7.398559
Name: % error, dtype: float64",4
62,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    43.000000
mean      3.219912
std       1.933170
min       0.223779
25%       1.917254
50%       2.788271
75%       5.229537
max       7.442099
Name: % error, dtype: float64",4
63,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    43.000000
mean      3.219879
std       1.933134
min       0.224007
25%       1.917176
50%       2.788493
75%       5.229379
max       7.441854
Name: % error, dtype: float64",4
64,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.9,"ref_1        170.476493
ref_9        170.467136
no_mbtree     32.045448
ref_5          0.009358
dtype: float64","count    22.000000
mean      2.906270
std       1.872566
min       0.340533
25%       1.677454
50%       2.599662
75%       4.567378
max       7.316375
Name: % error, dtype: float64",4
65,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.9,"ref_1        256.607351
ref_5         85.577897
ref_9         84.197368
no_mbtree     31.189561
dtype: float64","count    22.000000
mean      2.921084
std       1.945691
min       0.186053
25%       1.600595
50%       2.442918
75%       4.496954
max       7.482724
Name: % error, dtype: float64",4
66,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",Ridge(alpha=0.01),Performance,0.9,"ref_1        170.272848
ref_9        170.082319
no_mbtree     32.020409
ref_5          0.190529
dtype: float64","count    22.000000
mean      2.906508
std       1.874966
min       0.332352
25%       1.671692
50%       2.598435
75%       4.563649
max       7.325184
Name: % error, dtype: float64",4
67,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.9,"ref_1        256.607351
ref_5         85.577897
ref_9         84.197368
no_mbtree     31.189561
dtype: float64","count    22.000000
mean      2.921084
std       1.945691
min       0.186053
25%       1.600595
50%       2.442918
75%       4.496954
max       7.482724
Name: % error, dtype: float64",4
68,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",LinearRegression(),Performance,0.9,"no_mbtree    3.565289e+15
ref_1        1.594582e+13
ref_5        4.937583e+12
ref_9        1.201943e+12
dtype: float64","count    22.000000
mean      2.869976
std       1.658880
min       0.240144
25%       1.509430
50%       2.514370
75%       4.143515
max       6.609150
Name: % error, dtype: float64",4
69,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",RandomForestRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    22.000000
mean      2.910504
std       1.878814
min       0.355767
25%       1.702668
50%       2.541411
75%       4.564717
max       7.299970
Name: % error, dtype: float64",4
70,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    22.000000
mean      2.906280
std       1.872642
min       0.340305
25%       1.677307
50%       2.599574
75%       4.567274
max       7.316620
Name: % error, dtype: float64",4
71,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
Name: % error, dtype: float64","count    22.000000
mean      2.906270
std       1.872566
min       0.340533
25%       1.677454
50%       2.599662
75%       4.567378
max       7.316375
Name: % error, dtype: float64",4
72,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    3.220708e+01
no_8x8dct    1.539177e+01
no_cabac     1.039988e+01
ref_9        7.105427e-15
ref_5        1.776357e-15
dtype: float64","count    191.000000
mean       2.280277
std        7.768605
min        0.001451
25%        0.575059
50%        1.211964
75%        1.486984
max       55.867090
Name: % error, dtype: float64",6
73,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","Lasso(alpha=0.1, max_iter=5)",Performance,0.1,"no_mbtree    31.636131
no_8x8dct    15.017228
no_cabac      9.663082
dtype: float64","count    191.000000
mean       2.300667
std        7.767068
min        0.000526
25%        0.494157
50%        1.117527
75%        1.620018
max       55.819894
Name: % error, dtype: float64",6
74,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.1,"no_mbtree    32.131753
no_8x8dct    15.369947
no_cabac     10.345941
dtype: float64","count    191.000000
mean       2.281209
std        7.767887
min        0.000655
25%        0.546795
50%        1.201195
75%        1.501739
max       55.860772
Name: % error, dtype: float64",6
75,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=5)",Performance,0.1,"no_mbtree    31.636131
no_8x8dct    15.017228
no_cabac      9.663082
dtype: float64","count    191.000000
mean       2.300667
std        7.767068
min        0.000526
25%        0.494157
50%        1.117527
75%        1.620018
max       55.819894
Name: % error, dtype: float64",6
76,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.1,"no_mbtree    1.125481e+01
no_8x8dct    3.730370e+00
no_cabac     3.645833e+00
ref_9        1.065814e-14
ref_1        1.998401e-15
ref_5        1.776357e-15
dtype: float64","count    191.000000
mean       2.331256
std        7.745030
min        0.013831
25%        0.469245
50%        1.027597
75%        1.681791
max       55.697487
Name: % error, dtype: float64",6
77,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    191.000000
mean       2.323971
std        7.749583
min        0.011732
25%        0.408064
50%        1.035619
75%        1.766288
max       55.747284
Name: % error, dtype: float64",6
78,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    191.000000
mean       2.539738
std        7.750701
min        0.013613
25%        0.524809
50%        1.095068
75%        1.900466
max       55.697449
Name: % error, dtype: float64",6
79,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    191.000000
mean       2.522001
std        7.654271
min        0.013831
25%        0.524721
50%        1.095269
75%        1.900378
max       55.697487
Name: % error, dtype: float64",6
80,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    3.146027e+01
no_8x8dct    1.620298e+01
no_cabac     1.112076e+01
ref_9        3.552714e-15
ref_5        1.776357e-15
dtype: float64","count    170.000000
mean       2.434046
std        8.190723
min        0.006457
25%        0.521328
50%        1.156167
75%        1.419999
max       55.772342
Name: % error, dtype: float64",6
81,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","Lasso(alpha=0.05, max_iter=5)",Performance,0.2,"no_mbtree    31.219832
no_8x8dct    15.971645
no_cabac     10.838169
dtype: float64","count    170.000000
mean       2.440624
std        8.190470
min        0.004639
25%        0.477680
50%        1.125041
75%        1.484318
max       55.748345
Name: % error, dtype: float64",6
82,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Ridge(alpha=0.05),Performance,0.2,"no_mbtree    31.297981
no_8x8dct    16.115943
no_cabac     11.028023
dtype: float64","count    170.000000
mean       2.436965
std        8.189464
min        0.000189
25%        0.481254
50%        1.144694
75%        1.453883
max       55.756350
Name: % error, dtype: float64",6
83,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=1.0, max_iter=5)",Performance,0.2,"no_mbtree    31.219832
no_8x8dct    15.971645
no_cabac     10.838169
dtype: float64","count    170.000000
mean       2.440624
std        8.190470
min        0.004639
25%        0.477680
50%        1.125041
75%        1.484318
max       55.748345
Name: % error, dtype: float64",6
84,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.2,"no_mbtree    1.073791e+01
no_8x8dct    4.524450e+00
no_cabac     3.665711e+00
ref_5        1.776357e-15
ref_9        7.771561e-16
ref_1        2.876906e-17
dtype: float64","count    170.000000
mean       2.444175
std        8.123762
min        0.010766
25%        0.695046
50%        1.034931
75%        1.367157
max       55.282820
Name: % error, dtype: float64",6
85,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    170.000000
mean       2.444203
std        8.119013
min        0.078645
25%        0.666546
50%        0.944068
75%        1.407834
max       55.250928
Name: % error, dtype: float64",6
86,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    170.000000
mean       2.438678
std        8.087163
min        0.094769
25%        0.635333
50%        1.025098
75%        1.389634
max       55.256626
Name: % error, dtype: float64",6
87,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    170.000000
mean       2.456307
std        8.179637
min        0.094960
25%        0.635236
50%        1.025095
75%        1.389529
max       55.515646
Name: % error, dtype: float64",6
88,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree    3.194948e+01
no_8x8dct    1.570165e+01
no_cabac     9.847298e+00
ref_5        3.552714e-15
ref_9        1.776357e-15
dtype: float64","count    149.000000
mean       2.646772
std        8.765437
min        0.076088
25%        0.565633
50%        1.244390
75%        1.535192
max       55.921914
Name: % error, dtype: float64",6
89,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.3,"no_mbtree    31.901561
no_8x8dct    15.651686
no_cabac      9.788386
dtype: float64","count    149.000000
mean       2.649441
std        8.765344
min        0.062862
25%        0.565762
50%        1.237315
75%        1.561577
max       55.917189
Name: % error, dtype: float64",6
90,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"no_mbtree    31.927516
no_8x8dct    15.689533
no_cabac      9.835459
dtype: float64","count    149.000000
mean       2.647229
std        8.765284
min        0.072732
25%        0.568385
50%        1.241023
75%        1.540042
max       55.919809
Name: % error, dtype: float64",6
91,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.3,"no_mbtree    31.901561
no_8x8dct    15.651686
no_cabac      9.788386
dtype: float64","count    149.000000
mean       2.649441
std        8.765344
min        0.062862
25%        0.565762
50%        1.237315
75%        1.561577
max       55.917189
Name: % error, dtype: float64",6
92,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.3,"no_mbtree    1.120496e+01
no_8x8dct    4.323336e+00
no_cabac     2.953733e+00
ref_5        4.440892e-15
ref_1        4.622764e-16
dtype: float64","count    149.000000
mean       2.635382
std        8.708176
min        0.157803
25%        0.746720
50%        1.014652
75%        1.378062
max       55.561310
Name: % error, dtype: float64",6
93,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    149.000000
mean       2.636436
std        8.699334
min        0.158422
25%        0.705454
50%        1.026748
75%        1.444421
max       55.561036
Name: % error, dtype: float64",6
94,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    149.000000
mean       2.633679
std        8.697255
min        0.171528
25%        0.718525
50%        1.030515
75%        1.404320
max       55.555220
Name: % error, dtype: float64",6
95,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    149.000000
mean       2.647668
std        8.766099
min        0.171478
25%        0.718530
50%        1.030655
75%        1.404076
max       55.685597
Name: % error, dtype: float64",6
96,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.4,"ref_1        82.588523
ref_5        82.588523
no_mbtree    32.031741
no_8x8dct    16.338884
no_cabac     10.198924
dtype: float64","count    128.000000
mean       1.986170
std        6.205529
min        0.015809
25%        0.573940
50%        1.212725
75%        1.410276
max       41.831700
Name: % error, dtype: float64",6
97,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.4,"ref_1        143.973133
no_mbtree     30.893020
no_8x8dct     14.726585
ref_5         14.143792
no_cabac       9.994694
dtype: float64","count    128.000000
mean       1.823872
std        4.663880
min        0.005458
25%        0.481458
50%        1.293820
75%        1.719116
max       31.802513
Name: % error, dtype: float64",6
98,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Ridge(alpha=0.1),Performance,0.4,"ref_1        78.450631
ref_5        78.450631
no_mbtree    31.697304
no_8x8dct    16.038491
no_cabac     10.236087
dtype: float64","count    128.000000
mean       2.024596
std        6.303339
min        0.005323
25%        0.557404
50%        1.256619
75%        1.515718
max       42.465026
Name: % error, dtype: float64",6
99,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.4,"ref_1        143.973133
no_mbtree     30.893020
no_8x8dct     14.726585
ref_5         14.143792
no_cabac       9.994694
dtype: float64","count    128.000000
mean       1.823872
std        4.663880
min        0.005458
25%        0.481458
50%        1.293820
75%        1.719116
max       31.802513
Name: % error, dtype: float64",6
100,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.4,"no_8x8dct    1.300655e+14
ref_1        1.135320e+14
ref_5        9.942514e+13
ref_9        6.145274e+13
no_mbtree    4.475762e+13
no_cabac     4.414466e+13
dtype: float64","count    1.280000e+02
mean     1.340891e+12
std      9.061087e+12
min      3.799485e-01
25%      6.822143e-01
50%      1.028762e+00
75%      1.403204e+00
max      8.606784e+13
Name: % error, dtype: float64",6
101,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    128.000000
mean       2.342474
std        7.586477
min        0.245460
25%        0.747906
50%        0.996482
75%        1.264173
max       50.110565
Name: % error, dtype: float64",6
102,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    128.000000
mean       2.154053
std        6.723447
min        0.183446
25%        0.729208
50%        1.014989
75%        1.277693
max       45.677204
Name: % error, dtype: float64",6
103,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    128.000000
mean       1.746142
std        4.402310
min        0.181006
25%        0.729173
50%        1.015074
75%        1.279002
max       30.979221
Name: % error, dtype: float64",6
104,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.5,"ref_1        164.209564
ref_9        163.241449
no_mbtree     31.945396
no_8x8dct     16.314604
no_cabac      10.724264
ref_5          0.968115
dtype: float64","count    106.000000
mean       1.044254
std        0.544191
min        0.010704
25%        0.600359
50%        1.183693
75%        1.404545
max        2.253642
Name: % error, dtype: float64",6
105,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","Lasso(alpha=0.2, max_iter=1)",Performance,0.5,"ref_1        216.209519
ref_9         85.256321
ref_5         34.946698
no_mbtree     30.729730
no_8x8dct     14.799682
no_cabac       9.979995
dtype: float64","count    106.000000
mean       1.241133
std        0.919049
min        0.001763
25%        0.630243
50%        1.177814
75%        1.734499
max        6.142086
Name: % error, dtype: float64",6
106,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.5,"ref_1        163.620874
ref_9        162.143770
no_mbtree     31.903292
no_8x8dct     16.275247
no_cabac      10.746011
ref_5          1.477104
dtype: float64","count    106.000000
mean       1.051307
std        0.552214
min        0.010082
25%        0.592531
50%        1.192644
75%        1.413777
max        2.263178
Name: % error, dtype: float64",6
107,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=1)",Performance,0.5,"ref_1        216.209519
ref_9         85.256321
ref_5         34.946698
no_mbtree     30.729730
no_8x8dct     14.799682
no_cabac       9.979995
dtype: float64","count    106.000000
mean       1.241133
std        0.919049
min        0.001763
25%        0.630243
50%        1.177814
75%        1.734499
max        6.142086
Name: % error, dtype: float64",6
108,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.5,"no_8x8dct    2.216186e+14
ref_5        2.057762e+14
ref_1        1.327895e+14
no_cabac     1.265336e+14
ref_9        1.046598e+14
no_mbtree    9.108157e+13
dtype: float64","count    1.060000e+02
mean     1.730229e+12
std      1.048047e+13
min      2.593598e-01
25%      7.597022e-01
50%      1.041316e+00
75%      1.331534e+00
max      8.176116e+13
Name: % error, dtype: float64",6
109,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    106.000000
mean       1.458333
std        2.703270
min        0.079398
25%        0.778718
50%        1.038064
75%        1.340843
max       20.675325
Name: % error, dtype: float64",6
110,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    106.000000
mean       1.244859
std        1.185360
min        0.096663
25%        0.765300
50%        1.046477
75%        1.368437
max        9.143771
Name: % error, dtype: float64",6
111,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    106.000000
mean       1.435847
std        3.099113
min        0.094021
25%        0.771700
50%        1.039960
75%        1.364358
max       32.357264
Name: % error, dtype: float64",6
112,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.6,"ref_9        4.936037e+12
ref_5        4.936037e+12
ref_1        4.936037e+12
no_mbtree    3.185059e+01
no_8x8dct    1.651367e+01
no_cabac     1.082739e+01
dtype: float64","count    85.000000
mean      1.078907
std       0.538978
min       0.015963
25%       0.604155
50%       1.175275
75%       1.410035
max       2.344056
Name: % error, dtype: float64",6
113,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","Lasso(alpha=0.5, max_iter=5)",Performance,0.6,"ref_1        164.086731
ref_9         96.670368
no_mbtree     28.633547
no_8x8dct     13.148896
no_cabac       9.211292
dtype: float64","count    85.000000
mean      1.710508
std       1.896767
min       0.015523
25%       0.742357
50%       1.275694
75%       2.337715
max      12.715731
Name: % error, dtype: float64",6
114,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.6,"ref_1        163.598496
ref_9        162.132582
no_mbtree     31.813344
no_8x8dct     16.479031
no_cabac      10.842590
ref_5          1.465915
dtype: float64","count    85.000000
mean      1.087450
std       0.548046
min       0.026828
25%       0.605579
50%       1.180372
75%       1.412008
max       2.351727
Name: % error, dtype: float64",6
115,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, max_iter=1)",Performance,0.6,"ref_1        171.018167
ref_9         91.203212
no_mbtree     28.112894
no_8x8dct     14.113142
no_cabac      11.118158
ref_5          7.304954
dtype: float64","count    85.000000
mean      1.612049
std       1.859841
min       0.077727
25%       0.562937
50%       1.144664
75%       2.213811
max      12.242538
Name: % error, dtype: float64",6
116,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.6,"ref_1        3.909117e+14
ref_9        1.281481e+14
ref_5        1.247862e+14
no_8x8dct    7.796085e+13
no_cabac     6.071424e+13
no_mbtree    4.281297e+12
dtype: float64","count    8.500000e+01
mean     2.724598e+11
std      1.447360e+12
min      2.181412e-01
25%      7.682975e-01
50%      1.067869e+00
75%      1.371356e+00
max      9.246399e+12
Name: % error, dtype: float64",6
117,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    85.000000
mean      1.791983
std       4.180227
min       0.114387
25%       0.760739
50%       1.093294
75%       1.408256
max      28.334500
Name: % error, dtype: float64",6
118,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    85.000000
mean      1.315630
std       1.274416
min       0.098577
25%       0.750711
50%       1.111259
75%       1.359678
max       8.771764
Name: % error, dtype: float64",6
119,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    85.000000
mean      1.217974
std       0.762772
min       0.094021
25%       0.746004
50%       1.099583
75%       1.355908
max       4.505930
Name: % error, dtype: float64",6
120,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        164.338711
ref_9        163.306022
no_mbtree     31.862953
no_8x8dct     16.657164
no_cabac      10.574880
ref_5          1.032689
dtype: float64","count    64.000000
mean      1.092944
std       0.539045
min       0.041904
25%       0.692229
50%       1.161937
75%       1.420914
max       2.161839
Name: % error, dtype: float64",6
121,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","Lasso(alpha=0.1, max_iter=100)",Performance,0.7,"ref_1        164.745444
ref_9        147.460544
no_mbtree     31.222858
no_8x8dct     15.990743
no_cabac      10.295284
dtype: float64","count    64.000000
mean      1.216774
std       0.773743
min       0.001966
25%       0.665280
50%       1.316082
75%       1.593112
max       4.311649
Name: % error, dtype: float64",6
122,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Ridge(alpha=0.1),Performance,0.7,"ref_1        158.742760
ref_9        153.131986
no_mbtree     31.549176
no_8x8dct     16.372369
no_cabac      10.714286
ref_5          5.610774
dtype: float64","count    64.000000
mean      1.192302
std       0.761169
min       0.038153
25%       0.731239
50%       1.223317
75%       1.486591
max       4.333137
Name: % error, dtype: float64",6
123,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=100)",Performance,0.7,"ref_1        164.745444
ref_9        147.460544
no_mbtree     31.222858
no_8x8dct     15.990743
no_cabac      10.295284
dtype: float64","count    64.000000
mean      1.216774
std       0.773743
min       0.001966
25%       0.665280
50%       1.316082
75%       1.593112
max       4.311649
Name: % error, dtype: float64",6
124,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.7,"ref_1        57.716326
ref_9        55.903718
no_8x8dct    14.501140
no_mbtree    11.155343
no_cabac      3.142438
ref_5         1.812607
dtype: float64","count    64.000000
mean      1.774470
std       3.265067
min       0.323358
25%       0.807418
50%       1.027825
75%       1.472704
max      18.357505
Name: % error, dtype: float64",6
125,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    64.000000
mean      1.723250
std       3.618737
min       0.288718
25%       0.811505
50%       1.040718
75%       1.394666
max      21.715258
Name: % error, dtype: float64",6
126,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    64.000000
mean      1.254421
std       1.127517
min       0.273840
25%       0.779239
50%       1.006757
75%       1.378523
max       7.203324
Name: % error, dtype: float64",6
127,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    64.000000
mean      1.231724
std       0.802209
min       0.271083
25%       0.811655
50%       1.032593
75%       1.509265
max       4.505930
Name: % error, dtype: float64",6
128,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.8,"ref_9        167.269731
ref_1        166.904453
no_mbtree     31.979789
no_8x8dct     16.936616
no_cabac      10.879926
ref_5          0.365278
dtype: float64","count    43.000000
mean      1.039395
std       0.566022
min       0.056057
25%       0.502230
50%       1.119170
75%       1.320215
max       2.247496
Name: % error, dtype: float64",6
129,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Lasso(alpha=0.01),Performance,0.8,"ref_9        167.058228
ref_1        166.528004
no_mbtree     31.917520
no_8x8dct     16.898219
no_cabac      10.856048
dtype: float64","count    43.000000
mean      1.041959
std       0.566816
min       0.047099
25%       0.502125
50%       1.114997
75%       1.329050
max       2.251934
Name: % error, dtype: float64",6
130,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.8,"ref_9        166.888751
ref_1        166.699771
no_mbtree     31.951677
no_8x8dct     16.936835
no_cabac      10.895259
ref_5          0.188980
dtype: float64","count    43.000000
mean      1.040544
std       0.566637
min       0.051317
25%       0.496708
50%       1.124350
75%       1.324890
max       2.258457
Name: % error, dtype: float64",6
131,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0)",Performance,0.8,"ref_9        167.058228
ref_1        166.528004
no_mbtree     31.917520
no_8x8dct     16.898219
no_cabac      10.856048
dtype: float64","count    43.000000
mean      1.041959
std       0.566816
min       0.047099
25%       0.502125
50%       1.114997
75%       1.329050
max       2.251934
Name: % error, dtype: float64",6
132,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.8,"no_cabac     4.205078e+13
no_8x8dct    3.041683e+13
ref_1        8.007023e+12
no_mbtree    5.546193e+12
ref_5        1.027019e+12
ref_9        8.659022e+11
dtype: float64","count    43.000000
mean      1.037042
std       0.393343
min       0.481374
25%       0.743350
50%       0.879794
75%       1.225765
max       1.933549
Name: % error, dtype: float64",6
133,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    43.000000
mean      1.044999
std       0.394641
min       0.462275
25%       0.746744
50%       0.962514
75%       1.167823
max       2.008249
Name: % error, dtype: float64",6
134,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    43.000000
mean      1.050058
std       0.398199
min       0.490903
25%       0.732893
50%       0.970511
75%       1.165038
max       2.025213
Name: % error, dtype: float64",6
135,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    43.000000
mean      1.048233
std       0.397465
min       0.491269
25%       0.730961
50%       0.971485
75%       1.157697
max       2.026197
Name: % error, dtype: float64",6
136,LinearRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.9,"ref_1        1.287933e+15
ref_5        1.287933e+15
ref_9        1.287933e+15
no_mbtree    3.200000e+01
no_8x8dct    1.695312e+01
no_cabac     1.081250e+01
dtype: float64","count    22.000000
mean      1.218224
std       0.498721
min       0.398608
25%       0.972076
50%       1.154464
75%       1.394783
max       2.306155
Name: % error, dtype: float64",6
137,Lasso,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Lasso(alpha=0.01),Performance,0.9,"ref_9        166.964839
ref_1        166.634539
no_mbtree     32.170529
no_8x8dct     17.026099
no_cabac      10.826173
dtype: float64","count    22.000000
mean      1.222532
std       0.497703
min       0.315938
25%       1.000928
50%       1.152346
75%       1.353860
max       2.236845
Name: % error, dtype: float64",6
138,Ridge,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",Ridge(alpha=0.01),Performance,0.9,"ref_9        166.910702
ref_1        166.764527
no_mbtree     32.206935
no_8x8dct     17.062803
no_cabac      10.863481
ref_5          0.146175
dtype: float64","count    22.000000
mean      1.220756
std       0.501545
min       0.306802
25%       0.984531
50%       1.166628
75%       1.358290
max       2.241779
Name: % error, dtype: float64",6
139,ElasticNet,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0)",Performance,0.9,"ref_9        166.964839
ref_1        166.634539
no_mbtree     32.170529
no_8x8dct     17.026099
no_cabac      10.826173
dtype: float64","count    22.000000
mean      1.222532
std       0.497703
min       0.315938
25%       1.000928
50%       1.152346
75%       1.353860
max       2.236845
Name: % error, dtype: float64",6
140,PolynomialRegression,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",LinearRegression(),Performance,0.9,"no_mbtree    5.369167e+14
no_cabac     1.520812e+14
ref_1        8.975877e+13
ref_5        4.419091e+13
ref_9        3.447364e+13
no_8x8dct    1.525294e+13
dtype: float64","count    22.000000
mean      1.176260
std       0.385058
min       0.648386
25%       0.909337
50%       1.001069
75%       1.503568
max       1.907790
Name: % error, dtype: float64",6
141,RandomForest,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",RandomForestRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    22.000000
mean      1.155961
std       0.387472
min       0.660149
25%       0.884639
50%       0.985196
75%       1.478469
max       1.872939
Name: % error, dtype: float64",6
142,GradientBoostingTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    22.000000
mean      1.160518
std       0.387828
min       0.651699
25%       0.874402
50%       0.996682
75%       1.488951
max       1.884309
Name: % error, dtype: float64",6
143,DecisionTree,False,DecisionTree,"Index(['ref_1', 'no_mbtree', 'ref_9', 'ref_5', 'no_8x8dct', 'no_cabac'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"ref_1       NaN
no_mbtree   NaN
ref_9       NaN
ref_5       NaN
no_8x8dct   NaN
no_cabac    NaN
Name: % error, dtype: float64","count    22.000000
mean      1.158681
std       0.387837
min       0.657050
25%       0.875670
50%       0.993931
75%       1.489302
max       1.885980
Name: % error, dtype: float64",6
