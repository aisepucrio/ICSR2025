,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            21.369986
instcombine    13.002450
ipsccp          7.436068
dtype: float64","count    158.000000
mean       2.460349
std        1.649470
min        0.015882
25%        1.376102
50%        2.164974
75%        3.123478
max        8.496769
Name: % error, dtype: float64",3
1,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.3, max_iter=10)",Performance,0.1,"gvn            20.013276
instcombine    11.760108
ipsccp          6.553471
dtype: float64","count    158.000000
mean       2.437334
std        1.758655
min        0.064977
25%        1.162686
50%        2.129664
75%        3.287362
max        8.794464
Name: % error, dtype: float64",3
2,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.3),Performance,0.1,"gvn            19.860179
instcombine    11.933463
ipsccp          7.184752
dtype: float64","count    158.000000
mean       2.467747
std        1.775566
min        0.023144
25%        1.298265
50%        2.154724
75%        3.246538
max        8.730509
Name: % error, dtype: float64",3
3,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.05, max_iter=10)",Performance,0.1,"gvn            19.190705
instcombine    11.449652
ipsccp          7.007525
dtype: float64","count    158.000000
mean       2.475311
std        1.849799
min        0.020069
25%        1.141511
50%        2.118496
75%        3.372479
max        8.845034
Name: % error, dtype: float64",3
4,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            11.164167
instcombine     6.193333
ipsccp          3.368333
dtype: float64","count    158.000000
mean       2.462397
std        1.648232
min        0.027975
25%        1.267602
50%        2.157217
75%        3.116903
max        8.208358
Name: % error, dtype: float64",3
5,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.1,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    158.000000
mean       2.403355
std        1.714790
min        0.006531
25%        1.169158
50%        2.089806
75%        3.158847
max        8.538953
Name: % error, dtype: float64",3
6,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    158.000000
mean       2.462393
std        1.648257
min        0.028106
25%        1.267623
50%        2.157212
75%        3.117061
max        8.208478
Name: % error, dtype: float64",3
7,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    158.000000
mean       2.462397
std        1.648232
min        0.027975
25%        1.267602
50%        2.157217
75%        3.116903
max        8.208358
Name: % error, dtype: float64",3
8,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.2,"gvn            23.836481
instcombine    12.860624
ipsccp          6.387815
dtype: float64","count    140.000000
mean       2.399713
std        1.451326
min        0.153986
25%        1.395066
50%        2.191774
75%        3.031439
max        8.023079
Name: % error, dtype: float64",3
9,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.05, max_iter=5)",Performance,0.2,"gvn            23.629189
instcombine    12.686363
ipsccp          6.207374
dtype: float64","count    140.000000
mean       2.393125
std        1.452781
min        0.189990
25%        1.412372
50%        2.144202
75%        3.011948
max        8.073831
Name: % error, dtype: float64",3
10,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.5),Performance,0.2,"gvn            22.531507
instcombine    12.177082
ipsccp          6.119404
dtype: float64","count    140.000000
mean       2.384499
std        1.504636
min        0.293009
25%        1.434457
50%        2.151853
75%        3.109913
max        8.267921
Name: % error, dtype: float64",3
11,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.2,"gvn            22.048600
instcombine    11.924111
ipsccp          6.017643
dtype: float64","count    140.000000
mean       2.378810
std        1.543023
min        0.176995
25%        1.410412
50%        2.118773
75%        3.044236
max        8.358874
Name: % error, dtype: float64",3
12,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.2,"gvn            14.071019
instcombine     7.973519
ipsccp          2.271815
dtype: float64","count    140.000000
mean       2.379277
std        1.523487
min        0.018752
25%        1.244416
50%        2.205221
75%        3.267457
max        6.837126
Name: % error, dtype: float64",3
13,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.2,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    140.000000
mean       2.361517
std        1.508125
min        0.007847
25%        1.286731
50%        2.216645
75%        3.293448
max        7.047705
Name: % error, dtype: float64",3
14,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    140.000000
mean       2.379256
std        1.523503
min        0.018918
25%        1.244302
50%        2.205175
75%        3.267697
max        6.837280
Name: % error, dtype: float64",3
15,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    140.000000
mean       2.379277
std        1.523487
min        0.018752
25%        1.244416
50%        2.205221
75%        3.267457
max        6.837126
Name: % error, dtype: float64",3
16,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            25.190159
instcombine    11.972962
ipsccp          6.636263
dtype: float64","count    123.000000
mean       2.528422
std        1.528704
min        0.144624
25%        1.503676
50%        2.369102
75%        3.367445
max        7.906444
Name: % error, dtype: float64",3
17,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=10)",Performance,0.3,"gvn            25.147150
instcombine    11.941646
ipsccp          6.603936
dtype: float64","count    123.000000
mean       2.526905
std        1.527553
min        0.134424
25%        1.510303
50%        2.374574
75%        3.350722
max        7.882520
Name: % error, dtype: float64",3
18,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"gvn            25.170116
instcombine    11.963428
ipsccp          6.633678
dtype: float64","count    123.000000
mean       2.528085
std        1.528426
min        0.141006
25%        1.504616
50%        2.368293
75%        3.361838
max        7.898635
Name: % error, dtype: float64",3
19,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=10)",Performance,0.3,"gvn            25.147150
instcombine    11.941646
ipsccp          6.603936
dtype: float64","count    123.000000
mean       2.526905
std        1.527553
min        0.134424
25%        1.510303
50%        2.374574
75%        3.350722
max        7.882520
Name: % error, dtype: float64",3
20,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            15.217056
instcombine     7.619370
ipsccp          2.078500
dtype: float64","count    123.000000
mean       2.573938
std        1.585405
min        0.138799
25%        1.465601
50%        2.246728
75%        3.305012
max        7.157463
Name: % error, dtype: float64",3
21,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.3,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    123.000000
mean       2.614165
std        1.617654
min        0.168027
25%        1.454451
50%        2.246696
75%        3.295754
max        7.292634
Name: % error, dtype: float64",3
22,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    123.000000
mean       2.573900
std        1.585411
min        0.138629
25%        1.465360
50%        2.246673
75%        3.304896
max        7.157208
Name: % error, dtype: float64",3
23,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    123.000000
mean       2.573938
std        1.585405
min        0.138799
25%        1.465601
50%        2.246728
75%        3.305012
max        7.157463
Name: % error, dtype: float64",3
24,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.4,"gvn            24.246818
instcombine    12.760475
ipsccp          6.198539
dtype: float64","count    105.000000
mean       2.303554
std        1.232668
min        0.017399
25%        1.420492
50%        2.140806
75%        2.985836
max        7.858983
Name: % error, dtype: float64",3
25,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.4,"gvn            24.203330
instcombine    12.725007
ipsccp          6.170983
dtype: float64","count    105.000000
mean       2.302241
std        1.232550
min        0.020523
25%        1.414959
50%        2.150228
75%        2.973290
max        7.866881
Name: % error, dtype: float64",3
26,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.1),Performance,0.4,"gvn            24.100440
instcombine    12.673145
ipsccp          6.197342
dtype: float64","count    105.000000
mean       2.301955
std        1.235105
min        0.004410
25%        1.412795
50%        2.162778
75%        2.991698
max        7.879015
Name: % error, dtype: float64",3
27,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.4,"gvn            24.203330
instcombine    12.725007
ipsccp          6.170983
dtype: float64","count    105.000000
mean       2.302241
std        1.232550
min        0.020523
25%        1.414959
50%        2.150228
75%        2.973290
max        7.866881
Name: % error, dtype: float64",3
28,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.4,"gvn            13.799452
instcombine     8.059799
ipsccp          2.677366
dtype: float64","count    105.000000
mean       2.225467
std        1.325487
min        0.032487
25%        1.254216
50%        2.235689
75%        3.176979
max        7.140907
Name: % error, dtype: float64",3
29,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.4,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    105.000000
mean       2.223652
std        1.310646
min        0.011509
25%        1.280580
50%        2.168726
75%        3.160241
max        7.326172
Name: % error, dtype: float64",3
30,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    105.000000
mean       2.225447
std        1.325504
min        0.032260
25%        1.254233
50%        2.235878
75%        3.177199
max        7.141040
Name: % error, dtype: float64",3
31,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    105.000000
mean       2.225467
std        1.325487
min        0.032487
25%        1.254216
50%        2.235689
75%        3.176979
max        7.140907
Name: % error, dtype: float64",3
32,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            24.302580
instcombine    12.873499
ipsccp          6.084132
dtype: float64","count    88.000000
mean      2.336058
std       1.243376
min       0.038359
25%       1.367475
50%       2.193176
75%       2.991531
max       7.991437
Name: % error, dtype: float64",3
33,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=10)",Performance,0.5,"gvn            24.258754
instcombine    12.840753
ipsccp          6.052226
dtype: float64","count    88.000000
mean      2.333967
std       1.243653
min       0.027999
25%       1.370252
50%       2.200146
75%       2.968335
max       7.999898
Name: % error, dtype: float64",3
34,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.01),Performance,0.5,"gvn            24.290603
instcombine    12.866245
ipsccp          6.084062
dtype: float64","count    88.000000
mean      2.335812
std       1.243656
min       0.034577
25%       1.367713
50%       2.194938
75%       2.987119
max       7.992964
Name: % error, dtype: float64",3
35,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=10)",Performance,0.5,"gvn            24.258754
instcombine    12.840753
ipsccp          6.052226
dtype: float64","count    88.000000
mean      2.333967
std       1.243653
min       0.027999
25%       1.370252
50%       2.200146
75%       2.968335
max       7.999898
Name: % error, dtype: float64",3
36,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            1.223251e+15
ipsccp         3.861396e+14
instcombine    2.108088e+14
dtype: float64","count    88.000000
mean      2.293140
std       1.348539
min       0.072562
25%       1.303500
50%       2.163630
75%       3.050456
max       7.038017
Name: % error, dtype: float64",3
37,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.5,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    88.000000
mean      2.256094
std       1.322942
min       0.029033
25%       1.329771
50%       2.113884
75%       3.034456
max       7.430550
Name: % error, dtype: float64",3
38,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    88.000000
mean      2.259878
std       1.340385
min       0.015122
25%       1.334249
50%       2.112827
75%       3.018473
max       7.322824
Name: % error, dtype: float64",3
39,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    88.000000
mean      2.259901
std       1.340375
min       0.015259
25%       1.334151
50%       2.112721
75%       3.018260
max       7.322698
Name: % error, dtype: float64",3
40,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            24.479948
instcombine    11.905529
ipsccp          6.103842
dtype: float64","count    70.000000
mean      2.366875
std       1.186077
min       0.182648
25%       1.505078
50%       2.136583
75%       3.103442
max       5.294412
Name: % error, dtype: float64",3
41,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.6,"gvn            24.431066
instcombine    11.863667
ipsccp          6.089733
dtype: float64","count    70.000000
mean      2.366726
std       1.187236
min       0.198848
25%       1.503677
50%       2.130751
75%       3.120114
max       5.311439
Name: % error, dtype: float64",3
42,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.05),Performance,0.6,"gvn            24.429621
instcombine    11.874049
ipsccp          6.108905
dtype: float64","count    70.000000
mean      2.367222
std       1.187145
min       0.200053
25%       1.500752
50%       2.130850
75%       3.121353
max       5.312705
Name: % error, dtype: float64",3
43,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.6,"gvn            24.431066
instcombine    11.863667
ipsccp          6.089733
dtype: float64","count    70.000000
mean      2.366726
std       1.187236
min       0.198848
25%       1.503677
50%       2.130751
75%       3.120114
max       5.311439
Name: % error, dtype: float64",3
44,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            13.945083
instcombine     7.782106
ipsccp          2.487078
dtype: float64","count    70.000000
mean      2.297411
std       1.276700
min       0.063997
25%       1.318148
50%       2.174136
75%       3.141646
max       5.563789
Name: % error, dtype: float64",3
45,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.6,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    70.000000
mean      2.289725
std       1.258375
min       0.040131
25%       1.366743
50%       2.192114
75%       3.088591
max       5.410804
Name: % error, dtype: float64",3
46,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    70.000000
mean      2.297406
std       1.276696
min       0.063785
25%       1.318192
50%       2.174056
75%       3.141502
max       5.563649
Name: % error, dtype: float64",3
47,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    70.000000
mean      2.297411
std       1.276700
min       0.063997
25%       1.318148
50%       2.174136
75%       3.141646
max       5.563789
Name: % error, dtype: float64",3
48,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            23.784777
instcombine    12.486602
ipsccp          5.494761
dtype: float64","count    53.000000
mean      2.262336
std       1.112952
min       0.092751
25%       1.472706
50%       2.229336
75%       2.842918
max       5.199927
Name: % error, dtype: float64",3
49,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.05, max_iter=10)",Performance,0.7,"gvn            23.552447
instcombine    12.292245
ipsccp          5.356863
dtype: float64","count    53.000000
mean      2.265349
std       1.125736
min       0.157529
25%       1.512058
50%       2.253872
75%       2.941965
max       5.268011
Name: % error, dtype: float64",3
50,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.2),Performance,0.7,"gvn            23.606134
instcombine    12.359500
ipsccp          5.517091
dtype: float64","count    53.000000
mean      2.267397
std       1.125237
min       0.156815
25%       1.490342
50%       2.225358
75%       2.908996
max       5.267261
Name: % error, dtype: float64",3
51,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=1.0, max_iter=10)",Performance,0.7,"gvn            23.552447
instcombine    12.292245
ipsccp          5.356863
dtype: float64","count    53.000000
mean      2.265349
std       1.125736
min       0.157529
25%       1.512058
50%       2.253872
75%       2.941965
max       5.268011
Name: % error, dtype: float64",3
52,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            13.369275
instcombine     7.712701
ipsccp          2.097281
dtype: float64","count    53.000000
mean      2.113373
std       1.173205
min       0.063997
25%       1.108835
50%       1.875055
75%       2.928755
max       4.621760
Name: % error, dtype: float64",3
53,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.7,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    53.000000
mean      2.117906
std       1.158036
min       0.089486
25%       1.160165
50%       1.924060
75%       2.935733
max       4.567456
Name: % error, dtype: float64",3
54,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    53.000000
mean      2.113384
std       1.173243
min       0.063780
25%       1.108958
50%       1.874998
75%       2.928956
max       4.621629
Name: % error, dtype: float64",3
55,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    53.000000
mean      2.113373
std       1.173205
min       0.063997
25%       1.108835
50%       1.875055
75%       2.928755
max       4.621760
Name: % error, dtype: float64",3
56,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            23.765611
instcombine    12.641483
ipsccp          5.651909
dtype: float64","count    35.000000
mean      2.330990
std       1.176533
min       0.030966
25%       1.539548
50%       2.314893
75%       3.013640
max       5.037786
Name: % error, dtype: float64",3
57,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.05, max_iter=10)",Performance,0.8,"gvn            23.551635
instcombine    12.472620
ipsccp          5.501324
dtype: float64","count    35.000000
mean      2.325825
std       1.192709
min       0.004714
25%       1.610779
50%       2.325331
75%       3.019463
max       5.097490
Name: % error, dtype: float64",3
58,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.3),Performance,0.8,"gvn            23.548542
instcombine    12.498495
ipsccp          5.669030
dtype: float64","count    35.000000
mean      2.335787
std       1.196418
min       0.014932
25%       1.589948
50%       2.295980
75%       3.038019
max       5.118138
Name: % error, dtype: float64",3
59,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=1.0, max_iter=10)",Performance,0.8,"gvn            23.551635
instcombine    12.472620
ipsccp          5.501324
dtype: float64","count    35.000000
mean      2.325825
std       1.192709
min       0.004714
25%       1.610779
50%       2.325331
75%       3.019463
max       5.097490
Name: % error, dtype: float64",3
60,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            4.674122e+13
ipsccp         4.199973e+12
instcombine    1.440623e+12
dtype: float64","count    35.000000
mean      2.201396
std       1.218084
min       0.140520
25%       1.162373
50%       1.956094
75%       3.060926
max       4.539213
Name: % error, dtype: float64",3
61,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.8,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    35.000000
mean      2.202855
std       1.234750
min       0.048934
25%       1.115831
50%       1.995837
75%       3.125099
max       4.454537
Name: % error, dtype: float64",3
62,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    35.000000
mean      2.201426
std       1.214596
min       0.150956
25%       1.171872
50%       1.945935
75%       3.051739
max       4.541664
Name: % error, dtype: float64",3
63,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    35.000000
mean      2.201431
std       1.214547
min       0.151173
25%       1.172005
50%       1.945729
75%       3.051613
max       4.541791
Name: % error, dtype: float64",3
64,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.9,"gvn            23.738455
instcombine    12.969780
ipsccp          5.103524
dtype: float64","count    18.000000
mean      2.680988
std       1.116969
min       0.838227
25%       2.070269
50%       2.504265
75%       3.179895
max       4.903461
Name: % error, dtype: float64",3
65,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=10)",Performance,0.9,"gvn            23.697551
instcombine    12.939481
ipsccp          5.069639
dtype: float64","count    18.000000
mean      2.680874
std       1.120215
min       0.818106
25%       2.060651
50%       2.499250
75%       3.172021
max       4.911262
Name: % error, dtype: float64",3
66,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.02),Performance,0.9,"gvn            23.725958
instcombine    12.961911
ipsccp          5.104343
dtype: float64","count    18.000000
mean      2.681525
std       1.118154
min       0.833692
25%       2.066366
50%       2.504179
75%       3.179240
max       4.904799
Name: % error, dtype: float64",3
67,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=10)",Performance,0.9,"gvn            23.697551
instcombine    12.939481
ipsccp          5.069639
dtype: float64","count    18.000000
mean      2.680874
std       1.120215
min       0.818106
25%       2.060651
50%       2.499250
75%       3.172021
max       4.911262
Name: % error, dtype: float64",3
68,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.9,"instcombine    1.571314e+15
ipsccp         5.175927e+14
gvn            1.015710e+13
dtype: float64","count    18.000000
mean      2.676442
std       1.350140
min       0.087982
25%       1.736675
50%       2.560494
75%       3.687492
max       4.893278
Name: % error, dtype: float64",3
69,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.9,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    18.000000
mean      2.620036
std       1.237795
min       0.142286
25%       1.783404
50%       2.924512
75%       3.663225
max       4.471267
Name: % error, dtype: float64",3
70,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    18.000000
mean      2.630397
std       1.232830
min       0.126514
25%       1.783918
50%       2.908202
75%       3.674178
max       4.441574
Name: % error, dtype: float64",3
71,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    18.000000
mean      2.630376
std       1.232803
min       0.126731
25%       1.784031
50%       2.908199
75%       3.674196
max       4.441698
Name: % error, dtype: float64",3
