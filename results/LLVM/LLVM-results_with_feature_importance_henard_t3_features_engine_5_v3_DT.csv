,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            22.959441
instcombine    14.068733
inline         10.599028
dtype: float64","count    158.000000
mean       1.491311
std        1.547824
min        0.000614
25%        0.505129
50%        1.010855
75%        1.799436
max        7.473794
Name: % error, dtype: float64",3
1,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","Lasso(alpha=0.1, max_iter=1)",Performance,0.1,"gvn            19.471944
instcombine    15.181472
inline          9.397950
dtype: float64","count    158.000000
mean       1.743528
std        1.547606
min        0.017131
25%        0.743715
50%        1.495972
75%        2.255491
max        8.562522
Name: % error, dtype: float64",3
2,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",Ridge(alpha=0.2),Performance,0.1,"gvn            21.764391
instcombine    13.300386
inline         10.027138
dtype: float64","count    158.000000
mean       1.599588
std        1.524839
min        0.033413
25%        0.606351
50%        1.291869
75%        2.074470
max        7.748723
Name: % error, dtype: float64",3
3,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0, max_iter=1)",Performance,0.1,"gvn            19.106423
instcombine    14.908494
inline          9.397829
dtype: float64","count    158.000000
mean       1.798105
std        1.545709
min        0.026506
25%        0.768417
50%        1.563205
75%        2.345333
max        8.606423
Name: % error, dtype: float64",3
4,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            10.518997
instcombine     7.475565
inline          5.495282
dtype: float64","count    158.000000
mean       1.489406
std        1.538640
min        0.006343
25%        0.458271
50%        0.992003
75%        1.986789
max        7.124752
Name: % error, dtype: float64",3
5,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",RandomForestRegressor(),Performance,0.1,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    158.000000
mean       1.870473
std        1.547074
min        0.052488
25%        0.846553
50%        1.578048
75%        2.482595
max        7.748209
Name: % error, dtype: float64",3
6,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    158.000000
mean       1.487390
std        1.547347
min        0.004713
25%        0.467665
50%        0.932651
75%        1.942396
max        7.229366
Name: % error, dtype: float64",3
7,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    158.000000
mean       1.487365
std        1.547358
min        0.004612
25%        0.467645
50%        0.932395
75%        1.942314
max        7.229219
Name: % error, dtype: float64",3
8,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.2,"gvn            23.673933
instcombine    13.245017
inline         10.179339
dtype: float64","count    140.000000
mean       1.510193
std        1.516852
min        0.050991
25%        0.473714
50%        1.078064
75%        1.828138
max        7.220446
Name: % error, dtype: float64",3
9,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.2,"gvn            23.633809
instcombine    13.205085
inline         10.143112
dtype: float64","count    140.000000
mean       1.514430
std        1.514779
min        0.024839
25%        0.479022
50%        1.093334
75%        1.835691
max        7.230906
Name: % error, dtype: float64",3
10,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",Ridge(alpha=0.02),Performance,0.2,"gvn            23.619481
instcombine    13.214865
inline         10.158622
dtype: float64","count    140.000000
mean       1.514465
std        1.515078
min        0.027065
25%        0.482233
50%        1.094468
75%        1.835919
max        7.232525
Name: % error, dtype: float64",3
11,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.2,"gvn            23.633809
instcombine    13.205085
inline         10.143112
dtype: float64","count    140.000000
mean       1.514430
std        1.514779
min        0.024839
25%        0.479022
50%        1.093334
75%        1.835691
max        7.230906
Name: % error, dtype: float64",3
12,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.2,"gvn            11.399125
instcombine     8.219610
inline          5.420065
dtype: float64","count    140.000000
mean       1.372088
std        1.379704
min        0.012387
25%        0.456322
50%        0.953797
75%        1.704854
max        6.731546
Name: % error, dtype: float64",3
13,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",RandomForestRegressor(),Performance,0.2,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    140.000000
mean       1.477733
std        1.405381
min        0.014793
25%        0.529164
50%        1.115644
75%        1.814562
max        6.652349
Name: % error, dtype: float64",3
14,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    140.000000
mean       1.416371
std        1.394265
min        0.001149
25%        0.529779
50%        1.020037
75%        1.817872
max        6.546201
Name: % error, dtype: float64",3
15,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    140.000000
mean       1.416345
std        1.394263
min        0.001363
25%        0.529790
50%        1.020184
75%        1.817688
max        6.546038
Name: % error, dtype: float64",3
16,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            24.403044
instcombine    14.635232
inline          9.873415
dtype: float64","count    123.000000
mean       1.348455
std        1.484154
min        0.008327
25%        0.441431
50%        0.883079
75%        1.466046
max        7.008295
Name: % error, dtype: float64",3
17,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.3,"gvn            24.363311
instcombine    14.590898
inline          9.834867
dtype: float64","count    123.000000
mean       1.351038
std        1.481399
min        0.018969
25%        0.435349
50%        0.877813
75%        1.493743
max        7.016943
Name: % error, dtype: float64",3
18,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"gvn            24.384011
instcombine    14.622489
inline          9.866776
dtype: float64","count    123.000000
mean       1.349332
std        1.483300
min        0.000089
25%        0.441427
50%        0.881202
75%        1.474405
max        7.011700
Name: % error, dtype: float64",3
19,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.3,"gvn            24.363311
instcombine    14.590898
inline          9.834867
dtype: float64","count    123.000000
mean       1.351038
std        1.481399
min        0.018969
25%        0.435349
50%        0.877813
75%        1.493743
max        7.016943
Name: % error, dtype: float64",3
20,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            11.332828
instcombine     9.824556
inline          5.225539
dtype: float64","count    123.000000
mean       1.363493
std        1.220015
min        0.008597
25%        0.581134
50%        1.048342
75%        1.664733
max        5.995246
Name: % error, dtype: float64",3
21,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",RandomForestRegressor(),Performance,0.3,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    123.000000
mean       1.412385
std        1.201706
min        0.006831
25%        0.561416
50%        1.124150
75%        1.791982
max        5.597507
Name: % error, dtype: float64",3
22,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    123.000000
mean       1.380819
std        1.214012
min        0.000984
25%        0.565287
50%        1.027269
75%        1.737217
max        5.900032
Name: % error, dtype: float64",3
23,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    123.000000
mean       1.380812
std        1.214029
min        0.000980
25%        0.565044
50%        1.027466
75%        1.737141
max        5.899874
Name: % error, dtype: float64",3
24,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.4,"gvn            24.793186
instcombine    14.740286
inline         10.376685
dtype: float64","count    105.000000
mean       1.272238
std        1.395373
min        0.010035
25%        0.412410
50%        0.807129
75%        1.352840
max        6.822593
Name: % error, dtype: float64",3
25,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.4,"gvn            24.748402
instcombine    14.695843
inline         10.337153
dtype: float64","count    105.000000
mean       1.272787
std        1.391527
min        0.003554
25%        0.438523
50%        0.818823
75%        1.369409
max        6.833577
Name: % error, dtype: float64",3
26,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",Ridge(alpha=0.02),Performance,0.4,"gvn            24.762686
instcombine    14.720596
inline         10.364791
dtype: float64","count    105.000000
mean       1.272562
std        1.393610
min        0.000339
25%        0.425406
50%        0.813699
75%        1.354795
max        6.828764
Name: % error, dtype: float64",3
27,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.4,"gvn            24.748402
instcombine    14.695843
inline         10.337153
dtype: float64","count    105.000000
mean       1.272787
std        1.391527
min        0.003554
25%        0.438523
50%        0.818823
75%        1.369409
max        6.833577
Name: % error, dtype: float64",3
28,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.4,"gvn            12.011035
instcombine    10.461829
inline          5.276421
dtype: float64","count    105.000000
mean       1.394530
std        1.102063
min        0.002088
25%        0.581354
50%        1.323496
75%        1.879326
max        5.539075
Name: % error, dtype: float64",3
29,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",RandomForestRegressor(),Performance,0.4,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    105.000000
mean       1.410091
std        1.110990
min        0.007132
25%        0.609579
50%        1.322041
75%        1.868157
max        5.612126
Name: % error, dtype: float64",3
30,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    105.000000
mean       1.397610
std        1.103260
min        0.004034
25%        0.601443
50%        1.313893
75%        1.866657
max        5.517825
Name: % error, dtype: float64",3
31,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    105.000000
mean       1.397610
std        1.103309
min        0.003887
25%        0.601463
50%        1.314087
75%        1.866638
max        5.518027
Name: % error, dtype: float64",3
32,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            24.080779
instcombine    14.996995
inline          9.490615
dtype: float64","count    88.000000
mean      1.209445
std       1.297111
min       0.000883
25%       0.476323
50%       0.814528
75%       1.327317
max       7.273885
Name: % error, dtype: float64",3
33,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.5,"gvn            23.089993
instcombine    15.235140
inline          9.477409
dtype: float64","count    88.000000
mean      1.236331
std       1.295072
min       0.036639
25%       0.442520
50%       0.868356
75%       1.475657
max       7.529260
Name: % error, dtype: float64",3
34,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",Ridge(alpha=0.1),Performance,0.5,"gvn            23.963124
instcombine    14.915878
inline          9.454371
dtype: float64","count    88.000000
mean      1.216556
std       1.291353
min       0.021095
25%       0.511424
50%       0.796221
75%       1.316344
max       7.294264
Name: % error, dtype: float64",3
35,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.5,"gvn            23.089993
instcombine    15.235140
inline          9.477409
dtype: float64","count    88.000000
mean      1.236331
std       1.295072
min       0.036639
25%       0.442520
50%       0.868356
75%       1.475657
max       7.529260
Name: % error, dtype: float64",3
36,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            5.429857e+14
instcombine    2.950398e+14
inline         2.511729e+13
dtype: float64","count    88.000000
mean      1.298689
std       1.009735
min       0.020635
25%       0.575452
50%       1.135134
75%       1.737769
max       5.824487
Name: % error, dtype: float64",3
37,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",RandomForestRegressor(),Performance,0.5,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    88.000000
mean      1.329168
std       1.016773
min       0.009442
25%       0.637210
50%       1.180520
75%       1.849831
max       5.942543
Name: % error, dtype: float64",3
38,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    88.000000
mean      1.305805
std       1.025943
min       0.002421
25%       0.604186
50%       1.164440
75%       1.742164
max       5.965798
Name: % error, dtype: float64",3
39,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    88.000000
mean      1.305808
std       1.025947
min       0.002273
25%       0.604078
50%       1.164303
75%       1.742087
max       5.965636
Name: % error, dtype: float64",3
40,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            25.110488
instcombine    14.852449
inline          9.543319
dtype: float64","count    70.000000
mean      1.187087
std       1.211806
min       0.005046
25%       0.439919
50%       0.850844
75%       1.421122
max       5.829282
Name: % error, dtype: float64",3
41,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.6,"gvn            23.676480
instcombine    14.288563
inline          9.500974
dtype: float64","count    70.000000
mean      1.190168
std       1.137616
min       0.098096
25%       0.468706
50%       0.888412
75%       1.281523
max       5.682541
Name: % error, dtype: float64",3
42,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",Ridge(alpha=0.2),Performance,0.6,"gvn            24.906174
instcombine    14.708763
inline          9.468391
dtype: float64","count    70.000000
mean      1.184504
std       1.197009
min       0.013917
25%       0.485901
50%       0.867584
75%       1.388929
max       5.809715
Name: % error, dtype: float64",3
43,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.6,"gvn            23.676480
instcombine    14.288563
inline          9.500974
dtype: float64","count    70.000000
mean      1.190168
std       1.137616
min       0.098096
25%       0.468706
50%       0.888412
75%       1.281523
max       5.682541
Name: % error, dtype: float64",3
44,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            12.418471
instcombine    10.442158
inline          5.043830
dtype: float64","count    70.000000
mean      1.203171
std       0.945886
min       0.036179
25%       0.425424
50%       0.921865
75%       1.736868
max       3.843691
Name: % error, dtype: float64",3
45,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",RandomForestRegressor(),Performance,0.6,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    70.000000
mean      1.203166
std       0.941646
min       0.016651
25%       0.427076
50%       0.960820
75%       1.756174
max       3.812776
Name: % error, dtype: float64",3
46,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    70.000000
mean      1.203744
std       0.946020
min       0.038994
25%       0.428249
50%       0.922654
75%       1.739146
max       3.848772
Name: % error, dtype: float64",3
47,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    70.000000
mean      1.203762
std       0.946062
min       0.039007
25%       0.428125
50%       0.922721
75%       1.739163
max       3.849033
Name: % error, dtype: float64",3
48,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            24.572506
instcombine    15.446308
inline          9.397073
dtype: float64","count    53.000000
mean      1.117839
std       1.119874
min       0.076196
25%       0.463539
50%       0.815204
75%       1.295352
max       5.284739
Name: % error, dtype: float64",3
49,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","Lasso(alpha=0.02, max_iter=5)",Performance,0.7,"gvn            24.471892
instcombine    15.339280
inline          9.310160
dtype: float64","count    53.000000
mean      1.119369
std       1.105175
min       0.012822
25%       0.471419
50%       0.835482
75%       1.302271
max       5.216674
Name: % error, dtype: float64",3
50,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",Ridge(alpha=0.05),Performance,0.7,"gvn            24.525418
instcombine    15.410255
inline          9.379152
dtype: float64","count    53.000000
mean      1.117768
std       1.115122
min       0.054716
25%       0.462222
50%       0.827501
75%       1.296177
max       5.261162
Name: % error, dtype: float64",3
51,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=1.0, max_iter=5)",Performance,0.7,"gvn            24.471892
instcombine    15.339280
inline          9.310160
dtype: float64","count    53.000000
mean      1.119369
std       1.105175
min       0.012822
25%       0.471419
50%       0.835482
75%       1.302271
max       5.216674
Name: % error, dtype: float64",3
52,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            12.346582
instcombine    10.400463
inline          5.124389
dtype: float64","count    53.000000
mean      1.129257
std       0.898732
min       0.001587
25%       0.392986
50%       0.844835
75%       1.586557
max       3.864727
Name: % error, dtype: float64",3
53,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",RandomForestRegressor(),Performance,0.7,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    53.000000
mean      1.133426
std       0.896269
min       0.024937
25%       0.412458
50%       0.892944
75%       1.600794
max       3.826172
Name: % error, dtype: float64",3
54,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    53.000000
mean      1.128246
std       0.896705
min       0.004552
25%       0.392477
50%       0.850195
75%       1.590127
max       3.848767
Name: % error, dtype: float64",3
55,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    53.000000
mean      1.128252
std       0.896761
min       0.004534
25%       0.392663
50%       0.850365
75%       1.590424
max       3.849033
Name: % error, dtype: float64",3
56,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            24.024685
instcombine    15.044594
inline          9.151795
dtype: float64","count    35.000000
mean      0.958538
std       0.959049
min       0.011184
25%       0.398176
50%       0.702302
75%       1.013221
max       4.273127
Name: % error, dtype: float64",3
57,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.8,"gvn            23.980398
instcombine    14.997960
inline          9.112457
dtype: float64","count    35.000000
mean      0.961936
std       0.956965
min       0.002407
25%       0.406589
50%       0.703271
75%       1.015057
max       4.243299
Name: % error, dtype: float64",3
58,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",Ridge(alpha=0.1),Performance,0.8,"gvn            23.951099
instcombine    14.991848
inline          9.126781
dtype: float64","count    35.000000
mean      0.962345
std       0.958190
min       0.013080
25%       0.405246
50%       0.692522
75%       1.019900
max       4.238460
Name: % error, dtype: float64",3
59,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.8,"gvn            23.980398
instcombine    14.997960
inline          9.112457
dtype: float64","count    35.000000
mean      0.961936
std       0.956965
min       0.002407
25%       0.406589
50%       0.703271
75%       1.015057
max       4.243299
Name: % error, dtype: float64",3
60,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            9.635978e+14
instcombine    3.081655e+14
inline         1.622049e+13
dtype: float64","count    35.000000
mean      1.078307
std       0.765532
min       0.083950
25%       0.471413
50%       0.948834
75%       1.366330
max       2.798530
Name: % error, dtype: float64",3
61,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",RandomForestRegressor(),Performance,0.8,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    35.000000
mean      1.064427
std       0.750490
min       0.000533
25%       0.440254
50%       0.963514
75%       1.559529
max       2.863065
Name: % error, dtype: float64",3
62,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    35.000000
mean      1.052766
std       0.751480
min       0.011252
25%       0.452160
50%       0.941416
75%       1.552591
max       2.886017
Name: % error, dtype: float64",3
63,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    35.000000
mean      1.052756
std       0.751484
min       0.011237
25%       0.452172
50%       0.941171
75%       1.552755
max       2.886272
Name: % error, dtype: float64",3
64,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.9,"gvn            24.008823
instcombine    15.081268
inline          8.871521
dtype: float64","count    18.000000
mean      1.020508
std       0.886396
min       0.053610
25%       0.545109
50%       0.723998
75%       1.238306
max       3.885064
Name: % error, dtype: float64",3
65,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.9,"gvn            23.214005
instcombine    14.968523
inline          8.823930
dtype: float64","count    18.000000
mean      1.033045
std       0.964628
min       0.104877
25%       0.485061
50%       0.757361
75%       1.137936
max       4.046844
Name: % error, dtype: float64",3
66,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",Ridge(alpha=0.1),Performance,0.9,"gvn            23.945464
instcombine    15.037888
inline          8.848211
dtype: float64","count    18.000000
mean      1.021375
std       0.892955
min       0.041515
25%       0.531189
50%       0.719932
75%       1.222392
max       3.896683
Name: % error, dtype: float64",3
67,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.9,"gvn            23.214005
instcombine    14.968523
inline          8.823930
dtype: float64","count    18.000000
mean      1.033045
std       0.964628
min       0.104877
25%       0.485061
50%       0.757361
75%       1.137936
max       4.046844
Name: % error, dtype: float64",3
68,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",LinearRegression(),Performance,0.9,"instcombine    9.242575e+14
inline         7.326080e+13
gvn            1.364711e+13
dtype: float64","count    18.000000
mean      1.080424
std       0.670227
min       0.187435
25%       0.547563
50%       1.018026
75%       1.439633
max       2.819458
Name: % error, dtype: float64",3
69,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",RandomForestRegressor(),Performance,0.9,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    18.000000
mean      1.163870
std       0.650325
min       0.107243
25%       0.801712
50%       1.081884
75%       1.642025
max       2.467454
Name: % error, dtype: float64",3
70,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    18.000000
mean      1.160747
std       0.646677
min       0.080754
25%       0.822796
50%       1.085815
75%       1.650692
max       2.441590
Name: % error, dtype: float64",3
71,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"gvn           NaN
instcombine   NaN
inline        NaN
Name: % error, dtype: float64","count    18.000000
mean      1.160741
std       0.646644
min       0.080589
25%       0.822846
50%       1.085867
75%       1.650855
max       2.441429
Name: % error, dtype: float64",3
72,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            23.835784
instcombine    14.859580
inline         11.047886
#yes            1.346576
dtype: float64","count    158.000000
mean       1.528505
std        1.615911
min        0.013203
25%        0.482126
50%        1.085262
75%        1.881017
max        8.550580
Name: % error, dtype: float64",4
73,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.1,"gvn            19.833194
instcombine    15.651097
inline          9.752678
#yes            0.417608
dtype: float64","count    158.000000
mean       1.741936
std        1.567280
min        0.005157
25%        0.720816
50%        1.457187
75%        2.189304
max        8.859460
Name: % error, dtype: float64",4
74,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",Ridge(alpha=0.01),Performance,0.1,"gvn            23.743397
instcombine    14.792388
inline         11.002755
#yes            1.304892
dtype: float64","count    158.000000
mean       1.530647
std        1.611565
min        0.003482
25%        0.477141
50%        1.063681
75%        1.880024
max        8.532177
Name: % error, dtype: float64",4
75,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.1,"gvn            19.833194
instcombine    15.651097
inline          9.752678
#yes            0.417608
dtype: float64","count    158.000000
mean       1.741936
std        1.567280
min        0.005157
25%        0.720816
50%        1.457187
75%        2.189304
max        8.859460
Name: % error, dtype: float64",4
76,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            11.874480
#yes           10.643838
instcombine     2.208713
inline          1.703392
dtype: float64","count    158.000000
mean       1.871745
std        1.808617
min        0.004598
25%        0.606647
50%        1.258893
75%        2.550842
max       11.055892
Name: % error, dtype: float64",4
77,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.1,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    158.000000
mean       1.881261
std        1.552968
min        0.008586
25%        0.775759
50%        1.543140
75%        2.527180
max        7.969994
Name: % error, dtype: float64",4
78,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    158.000000
mean       1.675787
std        1.522624
min        0.002035
25%        0.659403
50%        1.222985
75%        2.174192
max        8.240644
Name: % error, dtype: float64",4
79,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    158.000000
mean       1.692427
std        1.561476
min        0.037120
25%        0.666522
50%        1.097448
75%        2.221259
max        8.259766
Name: % error, dtype: float64",4
80,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.2,"gvn            21.768292
instcombine    13.099469
inline          9.331829
#yes            1.517094
dtype: float64","count    140.000000
mean       1.648796
std        1.578681
min        0.008820
25%        0.663491
50%        1.178177
75%        2.118173
max        8.052543
Name: % error, dtype: float64",4
81,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","Lasso(alpha=0.05, max_iter=5)",Performance,0.2,"gvn            21.558313
instcombine    12.892046
inline          9.146851
#yes            1.564072
dtype: float64","count    140.000000
mean       1.665225
std        1.575943
min        0.019630
25%        0.619623
50%        1.207815
75%        2.207189
max        8.115521
Name: % error, dtype: float64",4
82,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",Ridge(alpha=0.01),Performance,0.2,"gvn            21.723520
instcombine    13.082835
inline          9.313690
#yes            1.532838
dtype: float64","count    140.000000
mean       1.652157
std        1.579903
min        0.006816
25%        0.657672
50%        1.180842
75%        2.127472
max        8.066637
Name: % error, dtype: float64",4
83,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=1.0, max_iter=5)",Performance,0.2,"gvn            21.558313
instcombine    12.892046
inline          9.146851
#yes            1.564072
dtype: float64","count    140.000000
mean       1.665225
std        1.575943
min        0.019630
25%        0.619623
50%        1.207815
75%        2.207189
max        8.115521
Name: % error, dtype: float64",4
84,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.2,"#yes           39.701119
gvn            32.674118
inline          4.480327
instcombine     3.262736
dtype: float64","count    140.000000
mean       2.946148
std        3.406299
min        0.020299
25%        0.733296
50%        1.688716
75%        3.941730
max       20.494703
Name: % error, dtype: float64",4
85,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.2,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    140.000000
mean       1.657132
std        1.509032
min        0.017791
25%        0.688511
50%        1.226039
75%        2.195665
max        8.864330
Name: % error, dtype: float64",4
86,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    140.000000
mean       1.822709
std        1.788875
min        0.004465
25%        0.665771
50%        1.279832
75%        2.295098
max        9.165381
Name: % error, dtype: float64",4
87,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    140.000000
mean       1.712518
std        1.658356
min        0.001363
25%        0.657751
50%        1.166913
75%        2.178747
max        9.217678
Name: % error, dtype: float64",4
88,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            23.461881
instcombine    14.395644
inline          9.177599
#yes            0.839800
dtype: float64","count    123.000000
mean       1.410117
std        1.502671
min        0.018389
25%        0.490553
50%        0.911765
75%        1.696987
max        7.549577
Name: % error, dtype: float64",4
89,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","Lasso(alpha=0.1, max_iter=1)",Performance,0.3,"gvn            24.099370
instcombine    14.225295
inline          9.482444
#yes            0.575510
dtype: float64","count    123.000000
mean       1.390233
std        1.497268
min        0.008160
25%        0.431448
50%        0.861006
75%        1.582723
max        7.256341
Name: % error, dtype: float64",4
90,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",Ridge(alpha=0.02),Performance,0.3,"gvn            23.404406
instcombine    14.365312
inline          9.149918
#yes            0.858441
dtype: float64","count    123.000000
mean       1.413196
std        1.502292
min        0.026993
25%        0.498060
50%        0.914092
75%        1.720679
max        7.567975
Name: % error, dtype: float64",4
91,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.1, max_iter=1)",Performance,0.3,"gvn            22.830671
instcombine    13.553336
inline          9.275038
#yes            0.986684
dtype: float64","count    123.000000
mean       1.469607
std        1.497772
min        0.032071
25%        0.525510
50%        0.982435
75%        1.905827
max        7.595727
Name: % error, dtype: float64",4
92,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            14.662779
#yes            6.649583
inline          5.654905
instcombine     5.119428
dtype: float64","count    123.000000
mean       1.392072
std        1.437779
min        0.001986
25%        0.456532
50%        0.925411
75%        1.848707
max        7.909302
Name: % error, dtype: float64",4
93,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.3,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    123.000000
mean       1.694023
std        1.578293
min        0.037422
25%        0.587874
50%        1.195084
75%        2.428876
max        8.080463
Name: % error, dtype: float64",4
94,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    123.000000
mean       1.750499
std        1.656498
min        0.007854
25%        0.596242
50%        1.280875
75%        2.332953
max        8.007342
Name: % error, dtype: float64",4
95,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    123.000000
mean       1.855046
std        1.739523
min        0.001363
25%        0.631342
50%        1.435194
75%        2.437401
max        8.259766
Name: % error, dtype: float64",4
96,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.4,"gvn            23.827447
instcombine    14.538118
inline          9.420992
#yes            0.891234
dtype: float64","count    105.000000
mean       1.352979
std        1.423832
min        0.015736
25%        0.477901
50%        0.810824
75%        1.640359
max        7.385760
Name: % error, dtype: float64",4
97,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.4,"gvn            23.777931
instcombine    14.491911
inline          9.376226
#yes            0.903118
dtype: float64","count    105.000000
mean       1.354182
std        1.421651
min        0.044870
25%        0.466240
50%        0.815450
75%        1.646226
max        7.401164
Name: % error, dtype: float64",4
98,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",Ridge(alpha=0.01),Performance,0.4,"gvn            23.805542
instcombine    14.526896
inline          9.408439
#yes            0.897913
dtype: float64","count    105.000000
mean       1.353813
std        1.423477
min        0.024716
25%        0.473039
50%        0.812535
75%        1.651638
max        7.392852
Name: % error, dtype: float64",4
99,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.4,"gvn            23.777931
instcombine    14.491911
inline          9.376226
#yes            0.903118
dtype: float64","count    105.000000
mean       1.354182
std        1.421651
min        0.044870
25%        0.466240
50%        0.815450
75%        1.646226
max        7.401164
Name: % error, dtype: float64",4
100,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.4,"instcombine    7.110473
gvn            6.337742
inline         3.996729
#yes           3.467076
dtype: float64","count    105.000000
mean       1.429810
std        1.266790
min        0.013259
25%        0.487410
50%        1.116442
75%        1.953329
max        6.262660
Name: % error, dtype: float64",4
101,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.4,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    105.000000
mean       1.563136
std        1.508546
min        0.017251
25%        0.484144
50%        1.000241
75%        2.315948
max        7.748285
Name: % error, dtype: float64",4
102,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    105.000000
mean       1.590549
std        1.561613
min        0.012939
25%        0.510118
50%        1.127067
75%        2.081785
max        7.921084
Name: % error, dtype: float64",4
103,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    105.000000
mean       1.709472
std        1.685554
min        0.005345
25%        0.549761
50%        1.143882
75%        2.441945
max        8.259766
Name: % error, dtype: float64",4
104,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            22.667947
instcombine    14.419438
inline          8.195405
#yes            1.434853
dtype: float64","count    88.000000
mean      1.447166
std       1.479289
min       0.016032
25%       0.549023
50%       0.947612
75%       1.619124
max       8.051253
Name: % error, dtype: float64",4
105,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","Lasso(alpha=0.2, max_iter=1)",Performance,0.5,"gvn            22.317646
instcombine    14.368071
inline          8.777147
#yes            1.256148
dtype: float64","count    88.000000
mean      1.429031
std       1.457656
min       0.003358
25%       0.545512
50%       0.963160
75%       1.711728
max       7.970130
Name: % error, dtype: float64",4
106,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",Ridge(alpha=0.2),Performance,0.5,"gvn            22.364460
instcombine    14.230644
inline          8.058543
#yes            1.519477
dtype: float64","count    88.000000
mean      1.471264
std       1.483962
min       0.029481
25%       0.608386
50%       0.975987
75%       1.644362
max       8.133377
Name: % error, dtype: float64",4
107,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","ElasticNet(alpha=0.02, max_iter=1)",Performance,0.5,"gvn            22.188052
instcombine    14.543673
inline          9.168615
#yes            1.327877
dtype: float64","count    88.000000
mean      1.446986
std       1.496970
min       0.023209
25%       0.508676
50%       0.939767
75%       1.776069
max       7.965356
Name: % error, dtype: float64",4
108,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            7.744005
instcombine    6.503179
inline         4.069810
#yes           1.025818
dtype: float64","count    88.000000
mean      1.401977
std       1.310141
min       0.020004
25%       0.542085
50%       1.013604
75%       1.865579
max       6.831537
Name: % error, dtype: float64",4
109,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.5,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    88.000000
mean      1.479797
std       1.387212
min       0.021024
25%       0.560574
50%       1.090266
75%       1.806771
max       7.566438
Name: % error, dtype: float64",4
110,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    88.000000
mean      1.493694
std       1.410337
min       0.001588
25%       0.636172
50%       1.088856
75%       1.950611
max       8.271268
Name: % error, dtype: float64",4
111,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    88.000000
mean      1.541559
std       1.375821
min       0.054150
25%       0.610253
50%       1.180173
75%       1.989502
max       8.259766
Name: % error, dtype: float64",4
112,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            24.453262
instcombine    14.507936
inline          8.835834
#yes            0.749665
dtype: float64","count    70.000000
mean      1.285099
std       1.291216
min       0.007570
25%       0.529644
50%       0.984586
75%       1.505731
max       5.920055
Name: % error, dtype: float64",4
113,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.6,"gvn            23.676480
instcombine    14.288563
inline          9.500974
#yes            0.759836
dtype: float64","count    70.000000
mean      1.284687
std       1.273652
min       0.032631
25%       0.530709
50%       0.925151
75%       1.485285
max       5.868669
Name: % error, dtype: float64",4
114,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",Ridge(alpha=0.1),Performance,0.6,"gvn            24.322233
instcombine    14.421242
inline          8.767456
#yes            0.785284
dtype: float64","count    70.000000
mean      1.289448
std       1.286548
min       0.016884
25%       0.540405
50%       0.988053
75%       1.516377
max       5.905992
Name: % error, dtype: float64",4
115,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.6,"gvn            23.676480
instcombine    14.288563
inline          9.500974
#yes            0.759836
dtype: float64","count    70.000000
mean      1.284687
std       1.273652
min       0.032631
25%       0.530709
50%       0.925151
75%       1.485285
max       5.868669
Name: % error, dtype: float64",4
116,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            9.209152
instcombine    6.075847
inline         5.564791
#yes           1.353192
dtype: float64","count    70.000000
mean      1.332981
std       1.111761
min       0.071093
25%       0.476365
50%       0.913769
75%       1.986449
max       5.419001
Name: % error, dtype: float64",4
117,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.6,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    70.000000
mean      1.400317
std       1.312642
min       0.007684
25%       0.401120
50%       0.998732
75%       2.014083
max       5.054905
Name: % error, dtype: float64",4
118,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    70.000000
mean      1.310236
std       1.193870
min       0.021760
25%       0.352558
50%       1.016070
75%       1.867651
max       4.716722
Name: % error, dtype: float64",4
119,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    70.000000
mean      1.364967
std       1.224436
min       0.014610
25%       0.395651
50%       1.029979
75%       1.967944
max       5.059800
Name: % error, dtype: float64",4
120,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            24.100382
instcombine    15.125179
inline          8.780296
#yes            0.583675
dtype: float64","count    53.000000
mean      1.202085
std       1.200431
min       0.009777
25%       0.570424
50%       0.926008
75%       1.332265
max       5.811437
Name: % error, dtype: float64",4
121,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.7,"gvn            21.723232
instcombine    14.404579
inline          9.259131
#yes            0.828565
dtype: float64","count    53.000000
mean      1.258101
std       1.186781
min       0.024499
25%       0.525484
50%       0.848496
75%       1.571945
max       5.540866
Name: % error, dtype: float64",4
122,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",Ridge(alpha=0.01),Performance,0.7,"gvn            24.088529
instcombine    15.116338
inline          8.773513
#yes            0.586900
dtype: float64","count    53.000000
mean      1.202456
std       1.200000
min       0.004363
25%       0.572468
50%       0.925414
75%       1.330722
max       5.809751
Name: % error, dtype: float64",4
123,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.7,"gvn            21.723232
instcombine    14.404579
inline          9.259131
#yes            0.828565
dtype: float64","count    53.000000
mean      1.258101
std       1.186781
min       0.024499
25%       0.525484
50%       0.848496
75%       1.571945
max       5.540866
Name: % error, dtype: float64",4
124,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            10.601337
instcombine     6.607258
inline          5.270562
#yes            0.987343
dtype: float64","count    53.000000
mean      1.198441
std       1.091857
min       0.039234
25%       0.500011
50%       0.931169
75%       1.607485
max       5.791658
Name: % error, dtype: float64",4
125,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.7,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    53.000000
mean      1.176610
std       1.190867
min       0.066357
25%       0.355124
50%       0.678346
75%       1.723722
max       4.755125
Name: % error, dtype: float64",4
126,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    53.000000
mean      1.111586
std       1.090376
min       0.001805
25%       0.364070
50%       0.768128
75%       1.555640
max       4.594015
Name: % error, dtype: float64",4
127,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    53.000000
mean      1.150742
std       1.121952
min       0.029993
25%       0.384737
50%       0.717542
75%       1.692713
max       4.685438
Name: % error, dtype: float64",4
128,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            23.930014
instcombine    14.974967
inline          9.038838
#yes            0.104873
dtype: float64","count    35.000000
mean      0.970192
std       0.957869
min       0.027645
25%       0.434755
50%       0.738853
75%       1.003023
max       4.273889
Name: % error, dtype: float64",4
129,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","Lasso(alpha=0.1, max_iter=5)",Performance,0.8,"gvn            23.325437
instcombine    14.389977
inline          8.452973
#yes            0.280624
dtype: float64","count    35.000000
mean      1.031390
std       0.941929
min       0.012595
25%       0.594177
50%       0.811451
75%       1.118799
max       4.150759
Name: % error, dtype: float64",4
130,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",Ridge(alpha=0.1),Performance,0.8,"gvn            23.828880
instcombine    14.901993
inline          8.980917
#yes            0.135806
dtype: float64","count    35.000000
mean      0.978232
std       0.955831
min       0.061443
25%       0.452262
50%       0.752640
75%       1.006717
max       4.239694
Name: % error, dtype: float64",4
131,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=5)",Performance,0.8,"gvn            23.325437
instcombine    14.389977
inline          8.452973
#yes            0.280624
dtype: float64","count    35.000000
mean      1.031390
std       0.941929
min       0.012595
25%       0.594177
50%       0.811451
75%       1.118799
max       4.150759
Name: % error, dtype: float64",4
132,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            11.517132
instcombine     7.484588
inline          5.887617
#yes            0.218834
dtype: float64","count    35.000000
mean      1.078238
std       0.803185
min       0.006879
25%       0.433133
50%       0.896834
75%       1.546271
max       3.122651
Name: % error, dtype: float64",4
133,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.8,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    35.000000
mean      1.076315
std       1.054349
min       0.003417
25%       0.386120
50%       0.771357
75%       1.425372
max       4.844445
Name: % error, dtype: float64",4
134,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    35.000000
mean      1.087057
std       0.977399
min       0.005066
25%       0.381195
50%       0.776792
75%       1.408467
max       4.608269
Name: % error, dtype: float64",4
135,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    35.000000
mean      1.113809
std       1.051940
min       0.029993
25%       0.413683
50%       0.745626
75%       1.652843
max       4.869494
Name: % error, dtype: float64",4
136,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.9,"gvn            23.890037
instcombine    14.994975
inline          8.738824
#yes            0.126276
dtype: float64","count    18.000000
mean      1.041008
std       0.902110
min       0.038904
25%       0.509462
50%       0.751286
75%       1.303208
max       4.001019
Name: % error, dtype: float64",4
137,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","Lasso(alpha=0.05, max_iter=10)",Performance,0.9,"gvn            23.592827
instcombine    14.712183
inline          8.441024
#yes            0.215952
dtype: float64","count    18.000000
mean      1.069280
std       0.938263
min       0.027271
25%       0.611427
50%       0.721463
75%       1.333715
max       4.136904
Name: % error, dtype: float64",4
138,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",Ridge(alpha=0.3),Performance,0.9,"gvn            23.623584
instcombine    14.809450
inline          8.582762
#yes            0.210202
dtype: float64","count    18.000000
mean      1.057838
std       0.931755
min       0.006451
25%       0.560889
50%       0.708437
75%       1.322137
max       4.112267
Name: % error, dtype: float64",4
139,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=1.0, max_iter=10)",Performance,0.9,"gvn            23.592827
instcombine    14.712183
inline          8.441024
#yes            0.215952
dtype: float64","count    18.000000
mean      1.069280
std       0.938263
min       0.027271
25%       0.611427
50%       0.721463
75%       1.333715
max       4.136904
Name: % error, dtype: float64",4
140,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",LinearRegression(),Performance,0.9,"gvn            11.616329
instcombine     7.882223
inline          4.704476
#yes            0.926851
dtype: float64","count    18.000000
mean      1.118592
std       0.641872
min       0.030953
25%       0.612078
50%       1.159018
75%       1.473529
max       2.446827
Name: % error, dtype: float64",4
141,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.9,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    18.000000
mean      1.206674
std       0.709592
min       0.176122
25%       0.855131
50%       1.114958
75%       1.439056
max       2.492234
Name: % error, dtype: float64",4
142,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    18.000000
mean      1.163534
std       0.709823
min       0.036222
25%       0.956872
50%       1.074210
75%       1.341290
max       2.584517
Name: % error, dtype: float64",4
143,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
Name: % error, dtype: float64","count    18.000000
mean      1.205835
std       0.735409
min       0.156202
25%       0.867576
50%       1.100593
75%       1.566319
max       2.693753
Name: % error, dtype: float64",4
144,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            23.216112
instcombine    13.327938
inline          9.512348
ipsccp          3.429629
#yes            0.598293
dtype: float64","count    158.000000
mean       1.385826
std        1.498974
min        0.007427
25%        0.411383
50%        0.887248
75%        1.743466
max        7.493377
Name: % error, dtype: float64",5
145,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.1,"gvn            19.833194
instcombine    15.651097
inline          9.752678
ipsccp          2.371840
#yes            0.417608
dtype: float64","count    158.000000
mean       1.670269
std        1.532703
min        0.014885
25%        0.626361
50%        1.295481
75%        2.186027
max        8.426924
Name: % error, dtype: float64",5
146,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",Ridge(alpha=0.01),Performance,0.1,"gvn            23.121522
instcombine    13.249499
inline          9.454499
ipsccp          3.468573
#yes            0.551807
dtype: float64","count    158.000000
mean       1.388344
std        1.494697
min        0.004576
25%        0.416340
50%        0.904623
75%        1.748724
max        7.465162
Name: % error, dtype: float64",5
147,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.1,"gvn            19.833194
instcombine    15.651097
inline          9.752678
ipsccp          2.371840
#yes            0.417608
dtype: float64","count    158.000000
mean       1.670269
std        1.532703
min        0.014885
25%        0.626361
50%        1.295481
75%        2.186027
max        8.426924
Name: % error, dtype: float64",5
148,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            8.440304
inline         7.488045
#yes           3.162695
ipsccp         2.015443
instcombine    0.514799
dtype: float64","count    158.000000
mean       1.760917
std        1.509225
min        0.053137
25%        0.658095
50%        1.334367
75%        2.324895
max        8.302583
Name: % error, dtype: float64",5
149,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",RandomForestRegressor(),Performance,0.1,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    158.000000
mean       1.951553
std        1.456408
min        0.045468
25%        0.811459
50%        1.767211
75%        2.667054
max        7.906147
Name: % error, dtype: float64",5
150,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    158.000000
mean       1.638312
std        1.331416
min        0.051845
25%        0.670807
50%        1.354119
75%        2.222701
max        8.071253
Name: % error, dtype: float64",5
151,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    158.000000
mean       1.516671
std        1.386990
min        0.050421
25%        0.570467
50%        1.057415
75%        1.930844
max        6.007880
Name: % error, dtype: float64",5
152,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.2,"gvn            21.598022
instcombine    11.913779
inline          8.193754
ipsccp          4.604903
#yes            1.853950
dtype: float64","count    140.000000
mean       1.452079
std        1.513693
min        0.002546
25%        0.477124
50%        1.080066
75%        1.786252
max        7.546991
Name: % error, dtype: float64",5
153,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.2,"gvn            21.678882
instcombine    11.887216
inline          8.226768
ipsccp          4.561644
#yes            1.816568
dtype: float64","count    140.000000
mean       1.445992
std        1.511000
min        0.016531
25%        0.460517
50%        1.079034
75%        1.799154
max        7.519134
Name: % error, dtype: float64",5
154,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",Ridge(alpha=0.01),Performance,0.2,"gvn            21.554157
instcombine    11.898200
inline          8.176719
ipsccp          4.606508
#yes            1.869177
dtype: float64","count    140.000000
mean       1.455629
std        1.514426
min        0.002068
25%        0.474417
50%        1.085033
75%        1.783250
max        7.560488
Name: % error, dtype: float64",5
155,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=0.1, max_iter=1)",Performance,0.2,"gvn            20.211498
instcombine    12.194720
inline          8.656854
ipsccp          3.634856
#yes            2.008651
dtype: float64","count    140.000000
mean       1.577038
std        1.541169
min        0.015993
25%        0.664826
50%        1.204279
75%        1.862855
max        7.975837
Name: % error, dtype: float64",5
156,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.2,"gvn            28.276272
#yes           27.291196
instcombine     4.622128
inline          4.579830
ipsccp          1.225137
dtype: float64","count    140.000000
mean       2.380685
std        2.577360
min        0.024356
25%        0.749126
50%        1.474322
75%        3.329760
max       16.419359
Name: % error, dtype: float64",5
157,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",RandomForestRegressor(),Performance,0.2,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    140.000000
mean       1.445455
std        1.319304
min        0.040183
25%        0.521512
50%        1.107468
75%        1.838011
max        6.909663
Name: % error, dtype: float64",5
158,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    140.000000
mean       1.431181
std        1.304426
min        0.005857
25%        0.553779
50%        1.074087
75%        1.839737
max        7.149478
Name: % error, dtype: float64",5
159,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    140.000000
mean       1.498937
std        1.436845
min        0.001363
25%        0.540121
50%        1.025550
75%        1.911522
max        7.003520
Name: % error, dtype: float64",5
160,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            23.334935
instcombine    12.217224
inline          8.124523
ipsccp          5.124555
#yes            1.147438
dtype: float64","count    123.000000
mean       1.320811
std        1.441502
min        0.002086
25%        0.374221
50%        0.832572
75%        1.523024
max        6.808060
Name: % error, dtype: float64",5
161,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","Lasso(alpha=0.02, max_iter=5)",Performance,0.3,"gvn            23.282321
instcombine    12.176692
inline          8.087791
ipsccp          5.058297
#yes            1.151628
dtype: float64","count    123.000000
mean       1.320712
std        1.440062
min        0.010074
25%        0.380946
50%        0.832193
75%        1.539687
max        6.830422
Name: % error, dtype: float64",5
162,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"gvn            23.306758
instcombine    12.202994
inline          8.111403
ipsccp          5.126891
#yes            1.156425
dtype: float64","count    123.000000
mean       1.321888
std        1.441239
min        0.007206
25%        0.375475
50%        0.843352
75%        1.522811
max        6.816718
Name: % error, dtype: float64",5
163,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=1.0, max_iter=5)",Performance,0.3,"gvn            23.282321
instcombine    12.176692
inline          8.087791
ipsccp          5.058297
#yes            1.151628
dtype: float64","count    123.000000
mean       1.320712
std        1.440062
min        0.010074
25%        0.380946
50%        0.832193
75%        1.539687
max        6.830422
Name: % error, dtype: float64",5
164,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            14.289006
instcombine     7.494026
inline          5.251030
#yes            5.190856
ipsccp          2.946740
dtype: float64","count    123.000000
mean       1.490706
std        1.256930
min        0.024220
25%        0.543741
50%        1.137932
75%        2.075122
max        7.227793
Name: % error, dtype: float64",5
165,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",RandomForestRegressor(),Performance,0.3,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    123.000000
mean       1.402412
std        1.246611
min        0.023910
25%        0.498970
50%        0.979279
75%        1.938749
max        5.272263
Name: % error, dtype: float64",5
166,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    123.000000
mean       1.401652
std        1.256871
min        0.038147
25%        0.478719
50%        0.896068
75%        1.909427
max        6.302586
Name: % error, dtype: float64",5
167,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    123.000000
mean       1.548008
std        1.403630
min        0.001363
25%        0.577945
50%        1.043892
75%        2.066173
max        7.502821
Name: % error, dtype: float64",5
168,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.4,"gvn            23.211711
instcombine    12.600730
inline          8.477524
ipsccp          4.946668
#yes            1.216985
dtype: float64","count    105.000000
mean       1.225326
std        1.356799
min        0.018222
25%        0.397467
50%        0.760869
75%        1.333786
max        6.889467
Name: % error, dtype: float64",5
169,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","Lasso(alpha=0.01, max_iter=100)",Performance,0.4,"gvn            23.152647
instcombine    12.561139
inline          8.425240
ipsccp          4.925594
#yes            1.231963
dtype: float64","count    105.000000
mean       1.226996
std        1.354834
min        0.021394
25%        0.390020
50%        0.792571
75%        1.335065
max        6.912620
Name: % error, dtype: float64",5
170,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",Ridge(alpha=0.1),Performance,0.4,"gvn            22.999362
instcombine    12.488552
inline          8.356334
ipsccp          4.981731
#yes            1.281114
dtype: float64","count    105.000000
mean       1.236203
std        1.353012
min        0.025877
25%        0.394032
50%        0.808959
75%        1.336904
max        6.953217
Name: % error, dtype: float64",5
171,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=100)",Performance,0.4,"gvn            23.152647
instcombine    12.561139
inline          8.425240
ipsccp          4.925594
#yes            1.231963
dtype: float64","count    105.000000
mean       1.226996
std        1.354834
min        0.021394
25%        0.390020
50%        0.792571
75%        1.335065
max        6.912620
Name: % error, dtype: float64",5
172,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.4,"instcombine    9.142982
inline         5.373336
gvn            5.053718
#yes           3.112039
ipsccp         2.739775
dtype: float64","count    105.000000
mean       1.640009
std        1.250975
min        0.003570
25%        0.614277
50%        1.430058
75%        2.297943
max        5.965059
Name: % error, dtype: float64",5
173,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",RandomForestRegressor(),Performance,0.4,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    105.000000
mean       1.390019
std        1.187421
min        0.015421
25%        0.579248
50%        1.042155
75%        1.867025
max        5.440280
Name: % error, dtype: float64",5
174,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    105.000000
mean       1.481172
std        1.234160
min        0.008589
25%        0.607049
50%        1.067222
75%        2.032978
max        6.292971
Name: % error, dtype: float64",5
175,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    105.000000
mean       1.566908
std        1.380404
min        0.005345
25%        0.632950
50%        1.172921
75%        1.988381
max        8.259766
Name: % error, dtype: float64",5
176,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            22.316397
instcombine    12.212849
inline          7.431693
ipsccp          5.134932
#yes            1.677304
dtype: float64","count    88.000000
mean      1.324602
std       1.423807
min       0.006227
25%       0.483680
50%       0.920040
75%       1.409845
max       7.372953
Name: % error, dtype: float64",5
177,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","Lasso(alpha=0.02, max_iter=10)",Performance,0.5,"gvn            22.206647
instcombine    12.133974
inline          7.340722
ipsccp          5.086850
#yes            1.702962
dtype: float64","count    88.000000
mean      1.331793
std       1.423661
min       0.028432
25%       0.493853
50%       0.950190
75%       1.445853
max       7.413739
Name: % error, dtype: float64",5
178,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",Ridge(alpha=0.2),Performance,0.5,"gvn            22.020745
instcombine    12.032925
inline          7.300628
ipsccp          5.169214
#yes            1.758127
dtype: float64","count    88.000000
mean      1.347826
std       1.427798
min       0.019988
25%       0.531580
50%       0.952446
75%       1.498394
max       7.448652
Name: % error, dtype: float64",5
179,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","ElasticNet(alpha=0.01, max_iter=5)",Performance,0.5,"gvn            21.704812
instcombine    11.848384
inline          7.176674
ipsccp          5.171327
#yes            1.838200
dtype: float64","count    88.000000
mean      1.374341
std       1.430781
min       0.006171
25%       0.528499
50%       0.990730
75%       1.607627
max       7.530436
Name: % error, dtype: float64",5
180,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            8.494683
instcombine    8.269258
inline         4.860852
ipsccp         1.137989
#yes           0.396844
dtype: float64","count    88.000000
mean      1.541950
std       1.193707
min       0.022253
25%       0.722477
50%       1.301901
75%       2.107845
max       6.527675
Name: % error, dtype: float64",5
181,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",RandomForestRegressor(),Performance,0.5,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    88.000000
mean      1.550545
std       1.253550
min       0.001552
25%       0.633041
50%       1.159047
75%       2.056079
max       5.574027
Name: % error, dtype: float64",5
182,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    88.000000
mean      1.448438
std       1.202214
min       0.035005
25%       0.586558
50%       1.135092
75%       1.905832
max       6.672130
Name: % error, dtype: float64",5
183,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    88.000000
mean      1.575673
std       1.127393
min       0.105731
25%       0.744747
50%       1.247136
75%       2.168977
max       5.015980
Name: % error, dtype: float64",5
184,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            23.496003
instcombine    12.015429
inline          8.045276
ipsccp          5.437203
#yes            1.118814
dtype: float64","count    70.000000
mean      1.263871
std       1.266161
min       0.043194
25%       0.427013
50%       0.876800
75%       1.613802
max       6.123921
Name: % error, dtype: float64",5
185,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","Lasso(alpha=0.01, max_iter=100)",Performance,0.6,"gvn            23.444290
instcombine    11.970244
inline          7.995238
ipsccp          5.418482
#yes            1.130556
dtype: float64","count    70.000000
mean      1.265949
std       1.264318
min       0.039591
25%       0.409060
50%       0.890820
75%       1.608588
max       6.105374
Name: % error, dtype: float64",5
186,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",Ridge(alpha=0.01),Performance,0.6,"gvn            23.483030
instcombine    12.006504
inline          8.038571
ipsccp          5.440303
#yes            1.122298
dtype: float64","count    70.000000
mean      1.264793
std       1.265790
min       0.041228
25%       0.425347
50%       0.875964
75%       1.612490
max       6.122784
Name: % error, dtype: float64",5
187,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=100)",Performance,0.6,"gvn            23.444290
instcombine    11.970244
inline          7.995238
ipsccp          5.418482
#yes            1.130556
dtype: float64","count    70.000000
mean      1.265949
std       1.264318
min       0.039591
25%       0.409060
50%       0.890820
75%       1.608588
max       6.105374
Name: % error, dtype: float64",5
188,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            7.904442
instcombine    7.148455
inline         4.542625
ipsccp         2.486729
#yes           2.251066
dtype: float64","count    70.000000
mean      1.435728
std       1.073777
min       0.076636
25%       0.714298
50%       1.212866
75%       1.957999
max       5.687203
Name: % error, dtype: float64",5
189,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",RandomForestRegressor(),Performance,0.6,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    70.000000
mean      1.417039
std       1.088510
min       0.006126
25%       0.706533
50%       1.103317
75%       1.769375
max       4.961307
Name: % error, dtype: float64",5
190,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    70.000000
mean      1.361305
std       0.992876
min       0.042068
25%       0.655871
50%       1.078257
75%       1.888284
max       4.418277
Name: % error, dtype: float64",5
191,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    70.000000
mean      1.422331
std       1.055647
min       0.029993
25%       0.713823
50%       1.167784
75%       1.884850
max       5.015980
Name: % error, dtype: float64",5
192,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            23.265380
instcombine    12.552561
inline          8.169181
ipsccp          5.326000
#yes            0.961081
dtype: float64","count    53.000000
mean      1.195277
std       1.273637
min       0.025778
25%       0.374114
50%       0.794584
75%       1.477644
max       6.054488
Name: % error, dtype: float64",5
193,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.7,"gvn            21.723232
instcombine    14.404579
inline          9.259131
ipsccp          4.416850
#yes            0.828565
dtype: float64","count    53.000000
mean      1.184473
std       1.287192
min       0.009550
25%       0.311988
50%       0.822751
75%       1.245161
max       6.095096
Name: % error, dtype: float64",5
194,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",Ridge(alpha=0.01),Performance,0.7,"gvn            23.253782
instcombine    12.543569
inline          8.162639
ipsccp          5.328665
#yes            0.964220
dtype: float64","count    53.000000
mean      1.196137
std       1.273445
min       0.024235
25%       0.370533
50%       0.795880
75%       1.479040
max       6.053080
Name: % error, dtype: float64",5
195,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=1)",Performance,0.7,"gvn            21.723232
instcombine    14.404579
inline          9.259131
ipsccp          4.416850
#yes            0.828565
dtype: float64","count    53.000000
mean      1.184473
std       1.287192
min       0.009550
25%       0.311988
50%       0.822751
75%       1.245161
max       6.095096
Name: % error, dtype: float64",5
196,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            9.361834
instcombine    6.904241
inline         4.208566
ipsccp         2.964906
#yes           0.646007
dtype: float64","count    53.000000
mean      1.354140
std       1.081623
min       0.109833
25%       0.597162
50%       1.211811
75%       1.717313
max       5.859857
Name: % error, dtype: float64",5
197,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",RandomForestRegressor(),Performance,0.7,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    53.000000
mean      1.308104
std       1.037994
min       0.129421
25%       0.615228
50%       1.056804
75%       1.596057
max       4.811267
Name: % error, dtype: float64",5
198,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    53.000000
mean      1.247002
std       0.961060
min       0.083430
25%       0.582359
50%       0.981569
75%       1.451937
max       4.495239
Name: % error, dtype: float64",5
199,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    53.000000
mean      1.289542
std       1.013517
min       0.029993
25%       0.657278
50%       1.067133
75%       1.695133
max       4.685438
Name: % error, dtype: float64",5
200,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            23.252967
instcombine    12.507977
inline          8.335720
ipsccp          5.093579
#yes            0.486313
dtype: float64","count    35.000000
mean      1.155836
std       1.015462
min       0.114794
25%       0.439492
50%       0.833383
75%       1.666284
max       4.210868
Name: % error, dtype: float64",5
201,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","Lasso(alpha=0.05, max_iter=5)",Performance,0.8,"gvn            23.015279
instcombine    12.323385
inline          8.108950
ipsccp          4.962261
#yes            0.545637
dtype: float64","count    35.000000
mean      1.174544
std       1.016285
min       0.048086
25%       0.434014
50%       0.817222
75%       1.704408
max       4.083527
Name: % error, dtype: float64",5
202,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",Ridge(alpha=0.1),Performance,0.8,"gvn            23.153787
instcombine    12.433370
inline          8.279348
ipsccp          5.116378
#yes            0.516396
dtype: float64","count    35.000000
mean      1.165952
std       1.017285
min       0.111482
25%       0.427573
50%       0.825024
75%       1.686907
max       4.179317
Name: % error, dtype: float64",5
203,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=1.0, max_iter=5)",Performance,0.8,"gvn            23.015279
instcombine    12.323385
inline          8.108950
ipsccp          4.962261
#yes            0.545637
dtype: float64","count    35.000000
mean      1.174544
std       1.016285
min       0.048086
25%       0.434014
50%       0.817222
75%       1.704408
max       4.083527
Name: % error, dtype: float64",5
204,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            10.211135
instcombine     7.071831
inline          4.490011
ipsccp          4.175601
#yes            2.327878
dtype: float64","count    35.000000
mean      1.164169
std       0.813961
min       0.041520
25%       0.554282
50%       1.023215
75%       1.588749
max       3.308730
Name: % error, dtype: float64",5
205,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",RandomForestRegressor(),Performance,0.8,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    35.000000
mean      1.239752
std       0.919040
min       0.014565
25%       0.725261
50%       1.012435
75%       1.516260
max       4.840917
Name: % error, dtype: float64",5
206,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    35.000000
mean      1.211352
std       0.843119
min       0.153153
25%       0.675697
50%       0.942917
75%       1.600846
max       4.414028
Name: % error, dtype: float64",5
207,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    35.000000
mean      1.260867
std       0.951764
min       0.029993
25%       0.699973
50%       1.016187
75%       1.626133
max       4.869494
Name: % error, dtype: float64",5
208,LinearRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.9,"gvn            23.316606
instcombine    12.801770
inline          8.045025
ipsccp          4.682952
#yes            0.548817
dtype: float64","count    18.000000
mean      1.101316
std       0.936693
min       0.072303
25%       0.527940
50%       0.796486
75%       1.598467
max       3.651618
Name: % error, dtype: float64",5
209,Lasso,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","Lasso(alpha=0.02, max_iter=100)",Performance,0.9,"gvn            23.205004
instcombine    12.711911
inline          7.934452
ipsccp          4.636425
#yes            0.579829
dtype: float64","count    18.000000
mean      1.119660
std       0.948727
min       0.083079
25%       0.498155
50%       0.803005
75%       1.602444
max       3.708589
Name: % error, dtype: float64",5
210,Ridge,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",Ridge(alpha=0.3),Performance,0.9,"gvn            23.053757
instcombine    12.609069
inline          7.891840
ipsccp          4.746114
#yes            0.631942
dtype: float64","count    18.000000
mean      1.134470
std       0.965625
min       0.039709
25%       0.488893
50%       0.822531
75%       1.634150
max       3.752747
Name: % error, dtype: float64",5
211,ElasticNet,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=1.0, max_iter=100)",Performance,0.9,"gvn            23.205004
instcombine    12.711911
inline          7.934452
ipsccp          4.636425
#yes            0.579829
dtype: float64","count    18.000000
mean      1.119660
std       0.948727
min       0.083079
25%       0.498155
50%       0.803005
75%       1.602444
max       3.708589
Name: % error, dtype: float64",5
212,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",LinearRegression(),Performance,0.9,"gvn            10.415061
instcombine     7.902471
ipsccp          3.873453
inline          3.602695
#yes            2.790498
dtype: float64","count    18.000000
mean      1.071904
std       0.604892
min       0.107629
25%       0.617205
50%       0.899441
75%       1.527150
max       2.254468
Name: % error, dtype: float64",5
213,RandomForest,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",RandomForestRegressor(),Performance,0.9,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    18.000000
mean      1.180274
std       0.519402
min       0.537340
25%       0.780354
50%       1.068386
75%       1.432348
max       2.282830
Name: % error, dtype: float64",5
214,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    18.000000
mean      1.209245
std       0.619971
min       0.258431
25%       0.773795
50%       1.034810
75%       1.652947
max       2.666716
Name: % error, dtype: float64",5
215,DecisionTree,False,DecisionTree,"Index(['gvn', 'instcombine', 'inline', '#yes', 'ipsccp'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"gvn           NaN
instcombine   NaN
inline        NaN
#yes          NaN
ipsccp        NaN
Name: % error, dtype: float64","count    18.000000
mean      1.192069
std       0.542910
min       0.558911
25%       0.888378
50%       1.091669
75%       1.416306
max       2.641662
Name: % error, dtype: float64",5
