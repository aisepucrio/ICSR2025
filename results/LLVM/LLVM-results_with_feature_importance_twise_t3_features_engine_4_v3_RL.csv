,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.1,"iv_users            26.718947
print_used_types    16.874719
ipsccp              15.303193
#yes                10.771772
dtype: float64","count    149.000000
mean       5.043329
std        3.537721
min        0.001163
25%        1.965403
50%        4.465788
75%        7.051804
max       16.890113
Name: % error, dtype: float64",4
1,Lasso,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","Lasso(alpha=25, max_iter=1)",Performance,0.1,"Series([], dtype: float64)","count    149.000000
mean       5.499449
std        3.823430
min        0.181898
25%        2.563104
50%        4.615320
75%        8.680385
max       16.509277
Name: % error, dtype: float64",4
2,Ridge,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",Ridge(alpha=2),Performance,0.1,"iv_users            11.191221
ipsccp               9.145703
print_used_types     7.569041
#yes                 2.252554
dtype: float64","count    149.000000
mean       4.634510
std        3.257719
min        0.010548
25%        2.109649
50%        4.042210
75%        6.300555
max       14.315765
Name: % error, dtype: float64",4
3,ElasticNet,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=0.0, max_iter=5)",Performance,0.1,"iv_users            8.361991
ipsccp              7.429733
print_used_types    5.788660
#yes                1.163799
dtype: float64","count    149.000000
mean       4.788246
std        3.311820
min        0.072079
25%        2.303174
50%        4.196738
75%        6.865471
max       14.635021
Name: % error, dtype: float64",4
4,PolynomialRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.1,"print_used_types    68.276111
iv_users             0.946214
ipsccp               0.400905
#yes                 0.012696
dtype: float64","count    149.000000
mean       5.511800
std        3.799393
min        0.045864
25%        2.489093
50%        5.093289
75%        8.004320
max       15.241545
Name: % error, dtype: float64",4
5,RandomForest,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.1,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    149.000000
mean       4.852092
std        3.442325
min        0.043696
25%        2.027736
50%        4.159325
75%        6.949564
max       14.992080
Name: % error, dtype: float64",4
6,GradientBoostingTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    149.000000
mean       5.357091
std        3.765060
min        0.044991
25%        2.355757
50%        4.893267
75%        7.774921
max       15.238052
Name: % error, dtype: float64",4
7,DecisionTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    149.000000
mean       5.290096
std        3.702667
min        0.045864
25%        2.358740
50%        4.859157
75%        7.453350
max       15.241545
Name: % error, dtype: float64",4
8,LinearRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.2,"iv_users            18.469316
ipsccp              15.196295
print_used_types    11.581399
#yes                 8.503207
dtype: float64","count    132.000000
mean       4.630214
std        3.266738
min        0.059457
25%        2.092415
50%        3.772270
75%        7.039079
max       15.363900
Name: % error, dtype: float64",4
9,Lasso,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","Lasso(alpha=0.01, max_iter=1)",Performance,0.2,"iv_users            14.596435
ipsccp              14.040476
print_used_types     9.811536
#yes                 7.597497
dtype: float64","count    132.000000
mean       4.512170
std        3.214461
min        0.076023
25%        2.113952
50%        3.784317
75%        6.266291
max       15.767036
Name: % error, dtype: float64",4
10,Ridge,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",Ridge(alpha=0.5),Performance,0.2,"iv_users            16.736577
ipsccp              13.866189
print_used_types    10.253832
#yes                 7.245386
dtype: float64","count    132.000000
mean       4.567164
std        3.232759
min        0.039010
25%        2.036360
50%        3.903476
75%        6.451993
max       15.411746
Name: % error, dtype: float64",4
11,ElasticNet,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.2,"iv_users            16.251906
ipsccp              13.490316
print_used_types     9.889111
#yes                 6.909490
dtype: float64","count    132.000000
mean       4.554099
std        3.229867
min        0.084827
25%        2.123939
50%        3.880109
75%        6.322731
max       15.429676
Name: % error, dtype: float64",4
12,PolynomialRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.2,"print_used_types    53.186333
ipsccp              34.102222
iv_users            11.092667
#yes                 0.055542
dtype: float64","count    132.000000
mean       5.149828
std        3.503484
min        0.008901
25%        2.270551
50%        4.613806
75%        7.497798
max       14.165305
Name: % error, dtype: float64",4
13,RandomForest,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.2,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    132.000000
mean       4.874384
std        3.267617
min        0.142047
25%        2.384192
50%        4.218351
75%        6.993152
max       14.428451
Name: % error, dtype: float64",4
14,GradientBoostingTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    132.000000
mean       5.069375
std        3.420159
min        0.323026
25%        2.179174
50%        4.592538
75%        7.526202
max       14.029915
Name: % error, dtype: float64",4
15,DecisionTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    132.000000
mean       5.027606
std        3.422818
min        0.268219
25%        2.212729
50%        4.570674
75%        7.427536
max       13.949826
Name: % error, dtype: float64",4
16,LinearRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.3,"iv_users            19.128056
ipsccp              16.944851
print_used_types    12.529568
#yes                 7.493755
dtype: float64","count    116.000000
mean       4.715575
std        3.375243
min        0.312150
25%        1.982408
50%        3.898496
75%        7.127263
max       14.898618
Name: % error, dtype: float64",4
17,Lasso,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","Lasso(alpha=0.3, max_iter=5)",Performance,0.3,"iv_users            16.555217
ipsccp              14.639327
print_used_types    10.285876
#yes                 5.670195
dtype: float64","count    116.000000
mean       4.597298
std        3.276981
min        0.051185
25%        2.042536
50%        3.922882
75%        6.552559
max       15.104417
Name: % error, dtype: float64",4
18,Ridge,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",Ridge(alpha=0.8),Performance,0.3,"iv_users            16.950363
ipsccp              15.146645
print_used_types    10.977245
#yes                 6.741002
dtype: float64","count    116.000000
mean       4.586622
std        3.280933
min        0.058283
25%        1.971001
50%        3.878980
75%        6.662678
max       15.239708
Name: % error, dtype: float64",4
19,ElasticNet,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.3,"iv_users            16.526676
ipsccp              14.794027
print_used_types    10.677466
#yes                 6.592216
dtype: float64","count    116.000000
mean       4.562891
std        3.272567
min        0.080797
25%        1.965922
50%        3.849621
75%        6.460231
max       15.305391
Name: % error, dtype: float64",4
20,PolynomialRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.3,"print_used_types    15.558942
ipsccp              14.241882
iv_users             2.493950
#yes                 0.079743
dtype: float64","count    116.000000
mean       4.746547
std        3.419848
min        0.179730
25%        2.213936
50%        4.124734
75%        7.017236
max       14.371829
Name: % error, dtype: float64",4
21,RandomForest,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.3,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    116.000000
mean       4.747389
std        3.336194
min        0.094903
25%        2.186427
50%        4.215991
75%        6.727626
max       13.950835
Name: % error, dtype: float64",4
22,GradientBoostingTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    116.000000
mean       4.779269
std        3.465187
min        0.051821
25%        1.927846
50%        4.388814
75%        7.037111
max       14.216277
Name: % error, dtype: float64",4
23,DecisionTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    116.000000
mean       4.796570
std        3.453320
min        0.042978
25%        2.045683
50%        4.398496
75%        7.033167
max       14.218983
Name: % error, dtype: float64",4
24,LinearRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.4,"iv_users            18.095786
ipsccp              15.608786
print_used_types    11.821806
#yes                10.926703
dtype: float64","count    99.000000
mean      4.627339
std       3.408260
min       0.067830
25%       2.078685
50%       3.828781
75%       6.903774
max      15.801263
Name: % error, dtype: float64",4
25,Lasso,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","Lasso(alpha=0.2, max_iter=10)",Performance,0.4,"iv_users            16.516665
ipsccp              14.070782
print_used_types    10.314571
#yes                 9.664470
dtype: float64","count    99.000000
mean      4.537145
std       3.343124
min       0.119758
25%       2.047748
50%       3.915895
75%       6.506622
max      15.935993
Name: % error, dtype: float64",4
26,Ridge,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",Ridge(),Performance,0.4,"iv_users            16.307042
ipsccp              14.030308
print_used_types    10.470579
#yes                 9.916072
dtype: float64","count    99.000000
mean      4.533544
std       3.333435
min       0.242287
25%       2.047664
50%       3.868412
75%       6.524658
max      16.008289
Name: % error, dtype: float64",4
27,ElasticNet,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","ElasticNet(alpha=0.05, max_iter=10)",Performance,0.4,"iv_users            15.160545
ipsccp              13.003326
print_used_types     9.580586
#yes                 9.220849
dtype: float64","count    99.000000
mean      4.488980
std       3.303811
min       0.093955
25%       1.946825
50%       3.624707
75%       6.258451
max      16.132574
Name: % error, dtype: float64",4
28,PolynomialRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.4,"ipsccp              4.887186
iv_users            3.850372
print_used_types    2.251627
#yes                0.164984
dtype: float64","count    99.000000
mean      4.601078
std       3.490002
min       0.061892
25%       2.122728
50%       3.586123
75%       6.935720
max      16.105938
Name: % error, dtype: float64",4
29,RandomForest,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.4,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    99.000000
mean      4.659160
std       3.453019
min       0.044731
25%       2.286415
50%       3.805083
75%       6.777647
max      15.823340
Name: % error, dtype: float64",4
30,GradientBoostingTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    99.000000
mean      4.655496
std       3.506153
min       0.053292
25%       2.178578
50%       3.723207
75%       6.848489
max      15.931768
Name: % error, dtype: float64",4
31,DecisionTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    99.000000
mean      4.712675
std       3.466586
min       0.045738
25%       2.263934
50%       3.736764
75%       6.916239
max      15.926173
Name: % error, dtype: float64",4
32,LinearRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.5,"iv_users            17.995684
ipsccp              14.423216
print_used_types    10.431919
#yes                 9.450133
dtype: float64","count    83.000000
mean      4.757907
std       3.331882
min       0.002896
25%       2.294535
50%       3.679351
75%       7.496922
max      15.584945
Name: % error, dtype: float64",4
33,Lasso,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","Lasso(alpha=0.05, max_iter=5)",Performance,0.5,"iv_users            17.592177
ipsccp              14.118207
print_used_types    10.078467
#yes                 9.134962
dtype: float64","count    83.000000
mean      4.738222
std       3.323874
min       0.065791
25%       2.273035
50%       3.853278
75%       7.425264
max      15.605509
Name: % error, dtype: float64",4
34,Ridge,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",Ridge(alpha=0.3),Performance,0.5,"iv_users            17.522380
ipsccp              14.113699
print_used_types    10.134115
#yes                 9.223997
dtype: float64","count    83.000000
mean      4.732822
std       3.321778
min       0.109094
25%       2.250577
50%       3.855761
75%       7.397438
max      15.629748
Name: % error, dtype: float64",4
35,ElasticNet,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.1, max_iter=5)",Performance,0.5,"iv_users            16.866639
ipsccp              13.679955
print_used_types     9.720835
#yes                 8.906816
dtype: float64","count    83.000000
mean      4.701570
std       3.309565
min       0.088539
25%       2.219776
50%       3.958300
75%       7.221931
max      15.691375
Name: % error, dtype: float64",4
36,PolynomialRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.5,"print_used_types    14.907342
iv_users             4.233814
ipsccp               3.291011
#yes                 0.123701
dtype: float64","count    83.000000
mean      4.816223
std       3.343868
min       0.149588
25%       2.225597
50%       3.736764
75%       6.819395
max      15.578458
Name: % error, dtype: float64",4
37,RandomForest,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.5,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    83.000000
mean      4.827397
std       3.351999
min       0.031186
25%       2.213222
50%       3.752170
75%       6.850926
max      15.622485
Name: % error, dtype: float64",4
38,GradientBoostingTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    83.000000
mean      4.780365
std       3.382008
min       0.178080
25%       2.186014
50%       3.725011
75%       6.810573
max      15.614582
Name: % error, dtype: float64",4
39,DecisionTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    83.000000
mean      4.822103
std       3.338675
min       0.172595
25%       2.201122
50%       3.736764
75%       6.805108
max      15.599431
Name: % error, dtype: float64",4
40,LinearRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.6,"iv_users            17.081364
ipsccp              13.580553
print_used_types    11.252985
#yes                10.721000
dtype: float64","count    66.000000
mean      4.710495
std       3.221897
min       0.028755
25%       2.467709
50%       3.851487
75%       6.853079
max      15.906752
Name: % error, dtype: float64",4
41,Lasso,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","Lasso(alpha=0.02, max_iter=10)",Performance,0.6,"iv_users            16.919803
ipsccp              13.452419
print_used_types    11.100887
#yes                10.580355
dtype: float64","count    66.000000
mean      4.701777
std       3.216215
min       0.097277
25%       2.436538
50%       3.790896
75%       6.837731
max      15.913936
Name: % error, dtype: float64",4
42,Ridge,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",Ridge(alpha=0.2),Performance,0.6,"iv_users            16.830880
ipsccp              13.407289
print_used_types    11.067721
#yes                10.562008
dtype: float64","count    66.000000
mean      4.697132
std       3.214462
min       0.125145
25%       2.416894
50%       3.804350
75%       6.815448
max      15.925538
Name: % error, dtype: float64",4
43,ElasticNet,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","ElasticNet(alpha=0.01, max_iter=10)",Performance,0.6,"iv_users            16.435693
ipsccp              13.128920
print_used_types    10.768195
#yes                10.301971
dtype: float64","count    66.000000
mean      4.676021
std       3.205519
min       0.278700
25%       2.298512
50%       3.870425
75%       6.758159
max      15.954025
Name: % error, dtype: float64",4
44,PolynomialRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.6,"print_used_types    7.237760
iv_users            3.965575
ipsccp              3.083865
#yes                0.157097
dtype: float64","count    66.000000
mean      4.727960
std       3.343359
min       0.043117
25%       2.261261
50%       4.350531
75%       7.025170
max      16.389317
Name: % error, dtype: float64",4
45,RandomForest,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.6,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    66.000000
mean      4.659045
std       3.333011
min       0.051826
25%       2.137242
50%       4.078792
75%       6.919037
max      16.429660
Name: % error, dtype: float64",4
46,GradientBoostingTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    66.000000
mean      4.657785
std       3.408256
min       0.059257
25%       2.114017
50%       4.273527
75%       7.039322
max      16.428239
Name: % error, dtype: float64",4
47,DecisionTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    66.000000
mean      4.690059
std       3.375717
min       0.057649
25%       2.112742
50%       4.283323
75%       7.040954
max      16.424025
Name: % error, dtype: float64",4
48,LinearRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.7,"iv_users            15.908168
ipsccp              13.171371
#yes                11.370095
print_used_types    11.332387
dtype: float64","count    50.000000
mean      5.016510
std       3.362709
min       0.130094
25%       2.700747
50%       4.110054
75%       7.422270
max      16.102294
Name: % error, dtype: float64",4
49,Lasso,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","Lasso(alpha=0.05, max_iter=10)",Performance,0.7,"iv_users            15.526308
ipsccp              12.828498
#yes                11.056736
print_used_types    10.972554
dtype: float64","count    50.000000
mean      4.994748
std       3.351037
min       0.095383
25%       2.751185
50%       4.067018
75%       7.249514
max      16.131378
Name: % error, dtype: float64",4
50,Ridge,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",Ridge(alpha=0.8),Performance,0.7,"iv_users            15.154948
ipsccp              12.567751
#yes                10.884943
print_used_types    10.756826
dtype: float64","count    50.000000
mean      4.973527
std       3.351205
min       0.046576
25%       2.527750
50%       4.066644
75%       7.119332
max      16.172273
Name: % error, dtype: float64",4
51,ElasticNet,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0, max_iter=100)",Performance,0.7,"iv_users            14.847422
ipsccp              12.320869
#yes                10.685836
print_used_types    10.522420
dtype: float64","count    50.000000
mean      4.956004
std       3.350030
min       0.012829
25%       2.431086
50%       4.066136
75%       6.995658
max      16.200548
Name: % error, dtype: float64",4
52,PolynomialRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.7,"ipsccp              0.995301
print_used_types    0.779282
iv_users            0.301623
#yes                0.166473
dtype: float64","count    50.000000
mean      4.996485
std       3.441450
min       0.455363
25%       2.331217
50%       4.165073
75%       7.478948
max      16.592841
Name: % error, dtype: float64",4
53,RandomForest,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.7,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    50.000000
mean      4.997040
std       3.461379
min       0.216928
25%       2.400664
50%       4.117534
75%       7.372800
max      16.644173
Name: % error, dtype: float64",4
54,GradientBoostingTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    50.000000
mean      4.975623
std       3.488606
min       0.204645
25%       2.310128
50%       4.100526
75%       7.465472
max      16.550981
Name: % error, dtype: float64",4
55,DecisionTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    50.000000
mean      5.011525
std       3.449360
min       0.180241
25%       2.321551
50%       4.100324
75%       7.462464
max      16.539305
Name: % error, dtype: float64",4
56,LinearRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.8,"iv_users            14.600504
ipsccp              12.596779
print_used_types    11.796087
#yes                10.667755
dtype: float64","count    33.000000
mean      4.491338
std       3.371322
min       0.022571
25%       2.167097
50%       3.763073
75%       5.441714
max      16.230209
Name: % error, dtype: float64",4
57,Lasso,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","Lasso(alpha=0.05, max_iter=10)",Performance,0.8,"iv_users            14.214598
ipsccp              12.234200
print_used_types    11.409361
#yes                10.330090
dtype: float64","count    33.000000
mean      4.464003
std       3.371383
min       0.055965
25%       2.189084
50%       3.621601
75%       5.607910
max      16.258190
Name: % error, dtype: float64",4
58,Ridge,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",Ridge(),Performance,0.8,"iv_users            13.836248
ipsccp              11.938762
print_used_types    11.126403
#yes                10.125544
dtype: float64","count    33.000000
mean      4.439578
std       3.381761
min       0.109040
25%       2.201434
50%       3.583750
75%       5.738240
max      16.302661
Name: % error, dtype: float64",4
59,ElasticNet,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.1, max_iter=10)",Performance,0.8,"iv_users            12.893798
ipsccp              11.125938
print_used_types    10.303632
#yes                 9.453109
dtype: float64","count    33.000000
mean      4.375833
std       3.417141
min       0.214243
25%       2.243433
50%       3.568733
75%       6.104146
max      16.390810
Name: % error, dtype: float64",4
60,PolynomialRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.8,"ipsccp              5.483644
iv_users            5.187897
print_used_types    0.632082
#yes                0.141371
dtype: float64","count    33.000000
mean      4.316595
std       3.427290
min       0.084996
25%       2.375909
50%       3.505602
75%       5.125527
max      16.282515
Name: % error, dtype: float64",4
61,RandomForest,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.8,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    33.000000
mean      4.425793
std       3.320733
min       0.384498
25%       2.295914
50%       3.607490
75%       5.263039
max      15.889132
Name: % error, dtype: float64",4
62,GradientBoostingTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    33.000000
mean      4.339272
std       3.435510
min       0.000906
25%       2.351216
50%       3.566265
75%       5.185171
max      16.210538
Name: % error, dtype: float64",4
63,DecisionTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    33.000000
mean      4.434507
std       3.359387
min       0.014597
25%       2.384652
50%       3.561878
75%       5.180858
max      16.199067
Name: % error, dtype: float64",4
64,LinearRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.9,"iv_users            15.341806
ipsccp              12.322361
print_used_types    11.755117
#yes                 9.091602
dtype: float64","count    17.000000
mean      3.761585
std       2.625088
min       0.621520
25%       1.757352
50%       3.166776
75%       5.495267
max       8.974454
Name: % error, dtype: float64",4
65,Lasso,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","Lasso(alpha=0.05, max_iter=10)",Performance,0.9,"iv_users            14.940824
ipsccp              11.944324
print_used_types    11.354836
#yes                 8.736545
dtype: float64","count    17.000000
mean      3.733524
std       2.624476
min       0.591626
25%       1.861546
50%       3.312365
75%       5.487388
max       8.952875
Name: % error, dtype: float64",4
66,Ridge,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",Ridge(),Performance,0.9,"iv_users            14.617789
ipsccp              11.721712
print_used_types    11.137458
#yes                 8.626792
dtype: float64","count    17.000000
mean      3.697874
std       2.632749
min       0.534001
25%       1.757623
50%       3.385685
75%       5.347490
max       8.944901
Name: % error, dtype: float64",4
67,ElasticNet,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=0.0, max_iter=100)",Performance,0.9,"iv_users            14.294441
ipsccp              11.453833
print_used_types    10.862915
#yes                 8.419982
dtype: float64","count    17.000000
mean      3.669413
std       2.644886
min       0.494871
25%       1.629504
50%       3.475904
75%       5.212169
max       8.931851
Name: % error, dtype: float64",4
68,PolynomialRegression,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",LinearRegression(),Performance,0.9,"ipsccp              12.566329
iv_users             9.632616
print_used_types     3.487493
#yes                 0.105983
dtype: float64","count    17.000000
mean      3.513221
std       2.579051
min       0.403032
25%       1.568263
50%       2.951649
75%       3.838447
max       8.844164
Name: % error, dtype: float64",4
69,RandomForest,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",RandomForestRegressor(),Performance,0.9,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    17.000000
mean      3.703793
std       2.510712
min       0.952166
25%       1.771283
50%       3.151815
75%       4.229980
max       8.889072
Name: % error, dtype: float64",4
70,GradientBoostingTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    17.000000
mean      3.578251
std       2.583529
min       0.681006
25%       1.566815
50%       3.032891
75%       4.050885
max       8.913230
Name: % error, dtype: float64",4
71,DecisionTree,False,DecisionTree,"Index(['iv_users', 'ipsccp', 'print_used_types', '#yes'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"iv_users           NaN
ipsccp             NaN
print_used_types   NaN
#yes               NaN
Name: % error, dtype: float64","count    17.000000
mean      3.732889
std       2.475967
min       0.977261
25%       1.644895
50%       3.289996
75%       4.060703
max       8.916140
Name: % error, dtype: float64",4
