,algorithm_name,ft_dummyfication,origin_ft_selection,ft_selection,hyperparameters,size_target,test_size,coef_order,accuracy,num_features
0,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            21.369986
instcombine    13.002450
ipsccp          7.436068
dtype: float64","count    158.000000
mean       2.460349
std        1.649470
min        0.015882
25%        1.376102
50%        2.164974
75%        3.123478
max        8.496769
Name: % error, dtype: float64",3
1,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.3, max_iter=10)",Performance,0.1,"gvn            20.013276
instcombine    11.760108
ipsccp          6.553471
dtype: float64","count    158.000000
mean       2.437334
std        1.758655
min        0.064977
25%        1.162686
50%        2.129664
75%        3.287362
max        8.794464
Name: % error, dtype: float64",3
2,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.3),Performance,0.1,"gvn            19.860179
instcombine    11.933463
ipsccp          7.184752
dtype: float64","count    158.000000
mean       2.467747
std        1.775566
min        0.023144
25%        1.298265
50%        2.154724
75%        3.246538
max        8.730509
Name: % error, dtype: float64",3
3,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.05, max_iter=10)",Performance,0.1,"gvn            19.190705
instcombine    11.449652
ipsccp          7.007525
dtype: float64","count    158.000000
mean       2.475311
std        1.849799
min        0.020069
25%        1.141511
50%        2.118496
75%        3.372479
max        8.845034
Name: % error, dtype: float64",3
4,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.1,"gvn            11.164167
instcombine     6.193333
ipsccp          3.368333
dtype: float64","count    158.000000
mean       2.462397
std        1.648232
min        0.027975
25%        1.267602
50%        2.157217
75%        3.116903
max        8.208358
Name: % error, dtype: float64",3
5,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.1,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    158.000000
mean       2.403355
std        1.714790
min        0.006531
25%        1.169158
50%        2.089806
75%        3.158847
max        8.538953
Name: % error, dtype: float64",3
6,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    158.000000
mean       2.462393
std        1.648257
min        0.028106
25%        1.267623
50%        2.157212
75%        3.117061
max        8.208478
Name: % error, dtype: float64",3
7,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    158.000000
mean       2.462397
std        1.648232
min        0.027975
25%        1.267602
50%        2.157217
75%        3.116903
max        8.208358
Name: % error, dtype: float64",3
8,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.2,"gvn            23.836481
instcombine    12.860624
ipsccp          6.387815
dtype: float64","count    140.000000
mean       2.399713
std        1.451326
min        0.153986
25%        1.395066
50%        2.191774
75%        3.031439
max        8.023079
Name: % error, dtype: float64",3
9,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.05, max_iter=5)",Performance,0.2,"gvn            23.629189
instcombine    12.686363
ipsccp          6.207374
dtype: float64","count    140.000000
mean       2.393125
std        1.452781
min        0.189990
25%        1.412372
50%        2.144202
75%        3.011948
max        8.073831
Name: % error, dtype: float64",3
10,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.5),Performance,0.2,"gvn            22.531507
instcombine    12.177082
ipsccp          6.119404
dtype: float64","count    140.000000
mean       2.384499
std        1.504636
min        0.293009
25%        1.434457
50%        2.151853
75%        3.109913
max        8.267921
Name: % error, dtype: float64",3
11,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=5)",Performance,0.2,"gvn            22.048600
instcombine    11.924111
ipsccp          6.017643
dtype: float64","count    140.000000
mean       2.378810
std        1.543023
min        0.176995
25%        1.410412
50%        2.118773
75%        3.044236
max        8.358874
Name: % error, dtype: float64",3
12,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.2,"gvn            14.071019
instcombine     7.973519
ipsccp          2.271815
dtype: float64","count    140.000000
mean       2.379277
std        1.523487
min        0.018752
25%        1.244416
50%        2.205221
75%        3.267457
max        6.837126
Name: % error, dtype: float64",3
13,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.2,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    140.000000
mean       2.361517
std        1.508125
min        0.007847
25%        1.286731
50%        2.216645
75%        3.293448
max        7.047705
Name: % error, dtype: float64",3
14,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    140.000000
mean       2.379256
std        1.523503
min        0.018918
25%        1.244302
50%        2.205175
75%        3.267697
max        6.837280
Name: % error, dtype: float64",3
15,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    140.000000
mean       2.379277
std        1.523487
min        0.018752
25%        1.244416
50%        2.205221
75%        3.267457
max        6.837126
Name: % error, dtype: float64",3
16,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            25.190159
instcombine    11.972962
ipsccp          6.636263
dtype: float64","count    123.000000
mean       2.528422
std        1.528704
min        0.144624
25%        1.503676
50%        2.369102
75%        3.367445
max        7.906444
Name: % error, dtype: float64",3
17,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=10)",Performance,0.3,"gvn            25.147150
instcombine    11.941646
ipsccp          6.603936
dtype: float64","count    123.000000
mean       2.526905
std        1.527553
min        0.134424
25%        1.510303
50%        2.374574
75%        3.350722
max        7.882520
Name: % error, dtype: float64",3
18,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.01),Performance,0.3,"gvn            25.170116
instcombine    11.963428
ipsccp          6.633678
dtype: float64","count    123.000000
mean       2.528085
std        1.528426
min        0.141006
25%        1.504616
50%        2.368293
75%        3.361838
max        7.898635
Name: % error, dtype: float64",3
19,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=10)",Performance,0.3,"gvn            25.147150
instcombine    11.941646
ipsccp          6.603936
dtype: float64","count    123.000000
mean       2.526905
std        1.527553
min        0.134424
25%        1.510303
50%        2.374574
75%        3.350722
max        7.882520
Name: % error, dtype: float64",3
20,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.3,"gvn            15.217056
instcombine     7.619370
ipsccp          2.078500
dtype: float64","count    123.000000
mean       2.573938
std        1.585405
min        0.138799
25%        1.465601
50%        2.246728
75%        3.305012
max        7.157463
Name: % error, dtype: float64",3
21,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.3,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    123.000000
mean       2.614165
std        1.617654
min        0.168027
25%        1.454451
50%        2.246696
75%        3.295754
max        7.292634
Name: % error, dtype: float64",3
22,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    123.000000
mean       2.573900
std        1.585411
min        0.138629
25%        1.465360
50%        2.246673
75%        3.304896
max        7.157208
Name: % error, dtype: float64",3
23,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    123.000000
mean       2.573938
std        1.585405
min        0.138799
25%        1.465601
50%        2.246728
75%        3.305012
max        7.157463
Name: % error, dtype: float64",3
24,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.4,"gvn            24.246818
instcombine    12.760475
ipsccp          6.198539
dtype: float64","count    105.000000
mean       2.303554
std        1.232668
min        0.017399
25%        1.420492
50%        2.140806
75%        2.985836
max        7.858983
Name: % error, dtype: float64",3
25,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.4,"gvn            24.203330
instcombine    12.725007
ipsccp          6.170983
dtype: float64","count    105.000000
mean       2.302241
std        1.232550
min        0.020523
25%        1.414959
50%        2.150228
75%        2.973290
max        7.866881
Name: % error, dtype: float64",3
26,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.1),Performance,0.4,"gvn            24.100440
instcombine    12.673145
ipsccp          6.197342
dtype: float64","count    105.000000
mean       2.301955
std        1.235105
min        0.004410
25%        1.412795
50%        2.162778
75%        2.991698
max        7.879015
Name: % error, dtype: float64",3
27,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.4,"gvn            24.203330
instcombine    12.725007
ipsccp          6.170983
dtype: float64","count    105.000000
mean       2.302241
std        1.232550
min        0.020523
25%        1.414959
50%        2.150228
75%        2.973290
max        7.866881
Name: % error, dtype: float64",3
28,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.4,"gvn            13.799452
instcombine     8.059799
ipsccp          2.677366
dtype: float64","count    105.000000
mean       2.225467
std        1.325487
min        0.032487
25%        1.254216
50%        2.235689
75%        3.176979
max        7.140907
Name: % error, dtype: float64",3
29,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.4,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    105.000000
mean       2.223652
std        1.310646
min        0.011509
25%        1.280580
50%        2.168726
75%        3.160241
max        7.326172
Name: % error, dtype: float64",3
30,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    105.000000
mean       2.225447
std        1.325504
min        0.032260
25%        1.254233
50%        2.235878
75%        3.177199
max        7.141040
Name: % error, dtype: float64",3
31,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    105.000000
mean       2.225467
std        1.325487
min        0.032487
25%        1.254216
50%        2.235689
75%        3.176979
max        7.140907
Name: % error, dtype: float64",3
32,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            24.302580
instcombine    12.873499
ipsccp          6.084132
dtype: float64","count    88.000000
mean      2.336058
std       1.243376
min       0.038359
25%       1.367475
50%       2.193176
75%       2.991531
max       7.991437
Name: % error, dtype: float64",3
33,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=10)",Performance,0.5,"gvn            24.258754
instcombine    12.840753
ipsccp          6.052226
dtype: float64","count    88.000000
mean      2.333967
std       1.243653
min       0.027999
25%       1.370252
50%       2.200146
75%       2.968335
max       7.999898
Name: % error, dtype: float64",3
34,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.01),Performance,0.5,"gvn            24.290603
instcombine    12.866245
ipsccp          6.084062
dtype: float64","count    88.000000
mean      2.335812
std       1.243656
min       0.034577
25%       1.367713
50%       2.194938
75%       2.987119
max       7.992964
Name: % error, dtype: float64",3
35,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=10)",Performance,0.5,"gvn            24.258754
instcombine    12.840753
ipsccp          6.052226
dtype: float64","count    88.000000
mean      2.333967
std       1.243653
min       0.027999
25%       1.370252
50%       2.200146
75%       2.968335
max       7.999898
Name: % error, dtype: float64",3
36,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.5,"gvn            1.223251e+15
ipsccp         3.861396e+14
instcombine    2.108088e+14
dtype: float64","count    88.000000
mean      2.293140
std       1.348539
min       0.072562
25%       1.303500
50%       2.163630
75%       3.050456
max       7.038017
Name: % error, dtype: float64",3
37,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.5,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    88.000000
mean      2.256094
std       1.322942
min       0.029033
25%       1.329771
50%       2.113884
75%       3.034456
max       7.430550
Name: % error, dtype: float64",3
38,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    88.000000
mean      2.259878
std       1.340385
min       0.015122
25%       1.334249
50%       2.112827
75%       3.018473
max       7.322824
Name: % error, dtype: float64",3
39,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    88.000000
mean      2.259901
std       1.340375
min       0.015259
25%       1.334151
50%       2.112721
75%       3.018260
max       7.322698
Name: % error, dtype: float64",3
40,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            24.479948
instcombine    11.905529
ipsccp          6.103842
dtype: float64","count    70.000000
mean      2.366875
std       1.186077
min       0.182648
25%       1.505078
50%       2.136583
75%       3.103442
max       5.294412
Name: % error, dtype: float64",3
41,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=5)",Performance,0.6,"gvn            24.431066
instcombine    11.863667
ipsccp          6.089733
dtype: float64","count    70.000000
mean      2.366726
std       1.187236
min       0.198848
25%       1.503677
50%       2.130751
75%       3.120114
max       5.311439
Name: % error, dtype: float64",3
42,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.05),Performance,0.6,"gvn            24.429621
instcombine    11.874049
ipsccp          6.108905
dtype: float64","count    70.000000
mean      2.367222
std       1.187145
min       0.200053
25%       1.500752
50%       2.130850
75%       3.121353
max       5.312705
Name: % error, dtype: float64",3
43,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=5)",Performance,0.6,"gvn            24.431066
instcombine    11.863667
ipsccp          6.089733
dtype: float64","count    70.000000
mean      2.366726
std       1.187236
min       0.198848
25%       1.503677
50%       2.130751
75%       3.120114
max       5.311439
Name: % error, dtype: float64",3
44,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.6,"gvn            13.945083
instcombine     7.782106
ipsccp          2.487078
dtype: float64","count    70.000000
mean      2.297411
std       1.276700
min       0.063997
25%       1.318148
50%       2.174136
75%       3.141646
max       5.563789
Name: % error, dtype: float64",3
45,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.6,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    70.000000
mean      2.289725
std       1.258375
min       0.040131
25%       1.366743
50%       2.192114
75%       3.088591
max       5.410804
Name: % error, dtype: float64",3
46,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    70.000000
mean      2.297406
std       1.276696
min       0.063785
25%       1.318192
50%       2.174056
75%       3.141502
max       5.563649
Name: % error, dtype: float64",3
47,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    70.000000
mean      2.297411
std       1.276700
min       0.063997
25%       1.318148
50%       2.174136
75%       3.141646
max       5.563789
Name: % error, dtype: float64",3
48,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            23.784777
instcombine    12.486602
ipsccp          5.494761
dtype: float64","count    53.000000
mean      2.262336
std       1.112952
min       0.092751
25%       1.472706
50%       2.229336
75%       2.842918
max       5.199927
Name: % error, dtype: float64",3
49,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.05, max_iter=10)",Performance,0.7,"gvn            23.552447
instcombine    12.292245
ipsccp          5.356863
dtype: float64","count    53.000000
mean      2.265349
std       1.125736
min       0.157529
25%       1.512058
50%       2.253872
75%       2.941965
max       5.268011
Name: % error, dtype: float64",3
50,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.2),Performance,0.7,"gvn            23.606134
instcombine    12.359500
ipsccp          5.517091
dtype: float64","count    53.000000
mean      2.267397
std       1.125237
min       0.156815
25%       1.490342
50%       2.225358
75%       2.908996
max       5.267261
Name: % error, dtype: float64",3
51,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=1.0, max_iter=10)",Performance,0.7,"gvn            23.552447
instcombine    12.292245
ipsccp          5.356863
dtype: float64","count    53.000000
mean      2.265349
std       1.125736
min       0.157529
25%       1.512058
50%       2.253872
75%       2.941965
max       5.268011
Name: % error, dtype: float64",3
52,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.7,"gvn            13.369275
instcombine     7.712701
ipsccp          2.097281
dtype: float64","count    53.000000
mean      2.113373
std       1.173205
min       0.063997
25%       1.108835
50%       1.875055
75%       2.928755
max       4.621760
Name: % error, dtype: float64",3
53,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.7,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    53.000000
mean      2.117906
std       1.158036
min       0.089486
25%       1.160165
50%       1.924060
75%       2.935733
max       4.567456
Name: % error, dtype: float64",3
54,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    53.000000
mean      2.113384
std       1.173243
min       0.063780
25%       1.108958
50%       1.874998
75%       2.928956
max       4.621629
Name: % error, dtype: float64",3
55,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    53.000000
mean      2.113373
std       1.173205
min       0.063997
25%       1.108835
50%       1.875055
75%       2.928755
max       4.621760
Name: % error, dtype: float64",3
56,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            23.765611
instcombine    12.641483
ipsccp          5.651909
dtype: float64","count    35.000000
mean      2.330990
std       1.176533
min       0.030966
25%       1.539548
50%       2.314893
75%       3.013640
max       5.037786
Name: % error, dtype: float64",3
57,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.05, max_iter=10)",Performance,0.8,"gvn            23.551635
instcombine    12.472620
ipsccp          5.501324
dtype: float64","count    35.000000
mean      2.325825
std       1.192709
min       0.004714
25%       1.610779
50%       2.325331
75%       3.019463
max       5.097490
Name: % error, dtype: float64",3
58,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.3),Performance,0.8,"gvn            23.548542
instcombine    12.498495
ipsccp          5.669030
dtype: float64","count    35.000000
mean      2.335787
std       1.196418
min       0.014932
25%       1.589948
50%       2.295980
75%       3.038019
max       5.118138
Name: % error, dtype: float64",3
59,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.05, l1_ratio=1.0, max_iter=10)",Performance,0.8,"gvn            23.551635
instcombine    12.472620
ipsccp          5.501324
dtype: float64","count    35.000000
mean      2.325825
std       1.192709
min       0.004714
25%       1.610779
50%       2.325331
75%       3.019463
max       5.097490
Name: % error, dtype: float64",3
60,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.8,"gvn            4.674122e+13
ipsccp         4.199973e+12
instcombine    1.440623e+12
dtype: float64","count    35.000000
mean      2.201396
std       1.218084
min       0.140520
25%       1.162373
50%       1.956094
75%       3.060926
max       4.539213
Name: % error, dtype: float64",3
61,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.8,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    35.000000
mean      2.202855
std       1.234750
min       0.048934
25%       1.115831
50%       1.995837
75%       3.125099
max       4.454537
Name: % error, dtype: float64",3
62,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    35.000000
mean      2.201426
std       1.214596
min       0.150956
25%       1.171872
50%       1.945935
75%       3.051739
max       4.541664
Name: % error, dtype: float64",3
63,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    35.000000
mean      2.201431
std       1.214547
min       0.151173
25%       1.172005
50%       1.945729
75%       3.051613
max       4.541791
Name: % error, dtype: float64",3
64,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.9,"gvn            23.738455
instcombine    12.969780
ipsccp          5.103524
dtype: float64","count    18.000000
mean      2.680988
std       1.116969
min       0.838227
25%       2.070269
50%       2.504265
75%       3.179895
max       4.903461
Name: % error, dtype: float64",3
65,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","Lasso(alpha=0.01, max_iter=10)",Performance,0.9,"gvn            23.697551
instcombine    12.939481
ipsccp          5.069639
dtype: float64","count    18.000000
mean      2.680874
std       1.120215
min       0.818106
25%       2.060651
50%       2.499250
75%       3.172021
max       4.911262
Name: % error, dtype: float64",3
66,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",Ridge(alpha=0.02),Performance,0.9,"gvn            23.725958
instcombine    12.961911
ipsccp          5.104343
dtype: float64","count    18.000000
mean      2.681525
std       1.118154
min       0.833692
25%       2.066366
50%       2.504179
75%       3.179240
max       4.904799
Name: % error, dtype: float64",3
67,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')","ElasticNet(alpha=0.01, l1_ratio=1.0, max_iter=10)",Performance,0.9,"gvn            23.697551
instcombine    12.939481
ipsccp          5.069639
dtype: float64","count    18.000000
mean      2.680874
std       1.120215
min       0.818106
25%       2.060651
50%       2.499250
75%       3.172021
max       4.911262
Name: % error, dtype: float64",3
68,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",LinearRegression(),Performance,0.9,"instcombine    1.571314e+15
ipsccp         5.175927e+14
gvn            1.015710e+13
dtype: float64","count    18.000000
mean      2.676442
std       1.350140
min       0.087982
25%       1.736675
50%       2.560494
75%       3.687492
max       4.893278
Name: % error, dtype: float64",3
69,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",RandomForestRegressor(),Performance,0.9,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    18.000000
mean      2.620036
std       1.237795
min       0.142286
25%       1.783404
50%       2.924512
75%       3.663225
max       4.471267
Name: % error, dtype: float64",3
70,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    18.000000
mean      2.630397
std       1.232830
min       0.126514
25%       1.783918
50%       2.908202
75%       3.674178
max       4.441574
Name: % error, dtype: float64",3
71,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"gvn           NaN
ipsccp        NaN
instcombine   NaN
Name: % error, dtype: float64","count    18.000000
mean      2.630376
std       1.232803
min       0.126731
25%       1.784031
50%       2.908199
75%       3.674196
max       4.441698
Name: % error, dtype: float64",3
72,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.1,"gvn                 21.362162
instcombine         13.127622
ipsccp               7.514301
print_used_types     0.406810
dtype: float64","count    158.000000
mean       2.466320
std        1.678954
min        0.040248
25%        1.335908
50%        2.151960
75%        3.207632
max        8.414913
Name: % error, dtype: float64",4
73,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","Lasso(alpha=0.5, max_iter=10)",Performance,0.1,"gvn            19.108787
instcombine    10.931905
ipsccp          5.965003
dtype: float64","count    158.000000
mean       2.448799
std        1.864811
min        0.007707
25%        0.961331
50%        2.144686
75%        3.426067
max        8.992947
Name: % error, dtype: float64",4
74,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",Ridge(alpha=0.5),Performance,0.1,"gvn                 18.970945
instcombine         11.269595
ipsccp               6.977699
print_used_types     0.188175
dtype: float64","count    158.000000
mean       2.479924
std        1.869427
min        0.003833
25%        1.112761
50%        2.120545
75%        3.358206
max        8.913642
Name: % error, dtype: float64",4
75,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","ElasticNet(alpha=0.5, l1_ratio=1.0, max_iter=10)",Performance,0.1,"gvn            19.108787
instcombine    10.931905
ipsccp          5.965003
dtype: float64","count    158.000000
mean       2.448799
std        1.864811
min        0.007707
25%        0.961331
50%        2.144686
75%        3.426067
max        8.992947
Name: % error, dtype: float64",4
76,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.1,"gvn                 9.248333
instcombine         7.116667
print_used_types    2.770000
ipsccp              2.640833
dtype: float64","count    158.000000
mean       3.626375
std        2.540346
min        0.050421
25%        1.599086
50%        3.159793
75%        4.991152
max       10.231420
Name: % error, dtype: float64",4
77,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",RandomForestRegressor(),Performance,0.1,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    158.000000
mean       2.500358
std        1.878959
min        0.010164
25%        1.235898
50%        1.984819
75%        3.564091
max        9.263083
Name: % error, dtype: float64",4
78,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",GradientBoostingRegressor(),Performance,0.1,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    158.000000
mean       2.878941
std        2.137224
min        0.062017
25%        1.226279
50%        2.521775
75%        3.888577
max       10.149496
Name: % error, dtype: float64",4
79,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",DecisionTreeRegressor(),Performance,0.1,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    158.000000
mean       2.882173
std        2.112862
min        0.050421
25%        1.273509
50%        2.474130
75%        3.735062
max       10.231420
Name: % error, dtype: float64",4
80,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.2,"gvn                 23.725697
instcombine         13.659758
ipsccp               6.013332
print_used_types     1.962649
dtype: float64","count    140.000000
mean       2.407267
std        1.628514
min        0.096183
25%        1.226728
50%        2.231173
75%        3.287837
max        8.591114
Name: % error, dtype: float64",4
81,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","Lasso(alpha=0.1, max_iter=10)",Performance,0.2,"gvn                 23.341546
instcombine         13.091055
ipsccp               5.755625
print_used_types     1.422247
dtype: float64","count    140.000000
mean       2.391694
std        1.566274
min        0.080430
25%        1.173786
50%        2.234260
75%        3.056742
max        8.536202
Name: % error, dtype: float64",4
82,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",Ridge(alpha=0.5),Performance,0.2,"gvn                 22.445833
instcombine         12.803984
ipsccp               5.832844
print_used_types     1.663412
dtype: float64","count    140.000000
mean       2.389671
std        1.632480
min        0.025743
25%        1.221825
50%        2.173762
75%        2.992861
max        8.736932
Name: % error, dtype: float64",4
83,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","ElasticNet(alpha=0.02, l1_ratio=0.0, max_iter=100)",Performance,0.2,"gvn                 21.970875
instcombine         12.495537
ipsccp               5.758825
print_used_types     1.561133
dtype: float64","count    140.000000
mean       2.385758
std        1.650809
min        0.000090
25%        1.185010
50%        2.177108
75%        3.000897
max        8.794925
Name: % error, dtype: float64",4
84,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.2,"gvn                 13.943208
instcombine          9.138093
print_used_types     2.347800
ipsccp               0.286432
dtype: float64","count    140.000000
mean       2.491717
std        1.687515
min        0.045535
25%        1.141825
50%        2.306766
75%        3.367244
max        8.151881
Name: % error, dtype: float64",4
85,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",RandomForestRegressor(),Performance,0.2,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    140.000000
mean       2.492300
std        1.721925
min        0.052724
25%        1.298391
50%        2.290389
75%        3.240935
max        8.740708
Name: % error, dtype: float64",4
86,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",GradientBoostingRegressor(),Performance,0.2,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    140.000000
mean       2.608177
std        1.866160
min        0.025900
25%        1.331543
50%        2.266179
75%        3.308583
max        9.604472
Name: % error, dtype: float64",4
87,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",DecisionTreeRegressor(),Performance,0.2,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    140.000000
mean       2.645438
std        1.959699
min        0.002112
25%        1.345278
50%        2.246355
75%        3.383766
max       10.231420
Name: % error, dtype: float64",4
88,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.3,"gvn                 25.190467
instcombine         11.956852
ipsccp               6.660252
print_used_types     0.066818
dtype: float64","count    123.000000
mean       2.527662
std        1.528618
min        0.136302
25%        1.499999
50%        2.355907
75%        3.355745
max        7.919696
Name: % error, dtype: float64",4
89,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","Lasso(alpha=0.2, max_iter=5)",Performance,0.3,"gvn            24.330479
instcombine    11.345610
ipsccp          5.992280
dtype: float64","count    123.000000
mean       2.499112
std        1.531173
min        0.008306
25%        1.393541
50%        2.303822
75%        3.267243
max        7.428204
Name: % error, dtype: float64",4
90,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",Ridge(alpha=0.2),Performance,0.3,"gvn                 24.795545
instcombine         11.768794
ipsccp               6.609431
print_used_types     0.071635
dtype: float64","count    123.000000
mean       2.520913
std        1.526167
min        0.062695
25%        1.471576
50%        2.361580
75%        3.271835
max        7.766777
Name: % error, dtype: float64",4
91,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=5)",Performance,0.3,"gvn            24.330479
instcombine    11.345610
ipsccp          5.992280
dtype: float64","count    123.000000
mean       2.499112
std        1.531173
min        0.008306
25%        1.393541
50%        2.303822
75%        3.267243
max        7.428204
Name: % error, dtype: float64",4
92,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.3,"gvn                 15.958683
instcombine          7.198879
ipsccp               1.306315
print_used_types     0.580676
dtype: float64","count    123.000000
mean       2.609985
std        1.643775
min        0.029723
25%        1.428864
50%        2.364456
75%        3.488759
max        6.911285
Name: % error, dtype: float64",4
93,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",RandomForestRegressor(),Performance,0.3,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    123.000000
mean       2.572888
std        1.633949
min        0.017333
25%        1.355840
50%        2.284684
75%        3.387634
max        6.484582
Name: % error, dtype: float64",4
94,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",GradientBoostingRegressor(),Performance,0.3,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    123.000000
mean       2.598967
std        1.654206
min        0.033894
25%        1.369684
50%        2.401991
75%        3.401199
max        6.707730
Name: % error, dtype: float64",4
95,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",DecisionTreeRegressor(),Performance,0.3,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    123.000000
mean       2.609429
std        1.676025
min        0.002112
25%        1.407435
50%        2.379170
75%        3.393347
max        6.645965
Name: % error, dtype: float64",4
96,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.4,"gvn                 24.248942
instcombine         12.428373
ipsccp               6.692037
print_used_types     1.464068
dtype: float64","count    105.000000
mean       2.314426
std        1.209963
min        0.017180
25%        1.588048
50%        2.106084
75%        3.046336
max        7.474233
Name: % error, dtype: float64",4
97,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","Lasso(alpha=0.2, max_iter=10)",Performance,0.4,"gvn                 23.401143
instcombine         11.971198
ipsccp               5.735838
print_used_types     0.483663
dtype: float64","count    105.000000
mean       2.277196
std        1.250121
min        0.035209
25%        1.516379
50%        2.125316
75%        2.883416
max        7.898042
Name: % error, dtype: float64",4
98,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",Ridge(alpha=0.3),Performance,0.4,"gvn                 23.816175
instcombine         12.185869
ipsccp               6.666516
print_used_types     1.445861
dtype: float64","count    105.000000
mean       2.308844
std        1.223772
min        0.031448
25%        1.524131
50%        2.084510
75%        2.979345
max        7.541836
Name: % error, dtype: float64",4
99,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=10)",Performance,0.4,"gvn                 23.401143
instcombine         11.971198
ipsccp               5.735838
print_used_types     0.483663
dtype: float64","count    105.000000
mean       2.277196
std        1.250121
min        0.035209
25%        1.516379
50%        2.125316
75%        2.883416
max        7.898042
Name: % error, dtype: float64",4
100,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.4,"gvn                 14.159009
instcombine          6.492022
ipsccp               3.279876
print_used_types     1.456433
dtype: float64","count    105.000000
mean       2.291472
std        1.348026
min        0.004886
25%        1.317704
50%        2.176025
75%        3.210363
max        6.078549
Name: % error, dtype: float64",4
101,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",RandomForestRegressor(),Performance,0.4,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    105.000000
mean       2.412642
std        1.400623
min        0.016353
25%        1.340482
50%        2.301621
75%        3.125148
max        6.557664
Name: % error, dtype: float64",4
102,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",GradientBoostingRegressor(),Performance,0.4,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    105.000000
mean       2.381898
std        1.359230
min        0.023494
25%        1.302898
50%        2.387747
75%        3.136668
max        6.194907
Name: % error, dtype: float64",4
103,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",DecisionTreeRegressor(),Performance,0.4,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    105.000000
mean       2.401471
std        1.378433
min        0.001638
25%        1.320312
50%        2.361737
75%        3.107238
max        6.424364
Name: % error, dtype: float64",4
104,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.5,"gvn                 24.305159
instcombine         12.696275
ipsccp               6.544065
print_used_types     1.318690
dtype: float64","count    88.000000
mean      2.357574
std       1.189691
min       0.160449
25%       1.514288
50%       2.190384
75%       3.043081
max       7.655448
Name: % error, dtype: float64",4
105,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","Lasso(alpha=0.2, max_iter=10)",Performance,0.5,"gvn                 23.427424
instcombine         12.186837
ipsccp               5.529047
print_used_types     0.255730
dtype: float64","count    88.000000
mean      2.300398
std       1.263130
min       0.125712
25%       1.441422
50%       2.150444
75%       3.001386
max       8.096451
Name: % error, dtype: float64",4
106,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",Ridge(alpha=0.3),Performance,0.5,"gvn                 23.951357
instcombine         12.493412
ipsccp               6.519904
print_used_types     1.289586
dtype: float64","count    88.000000
mean      2.347074
std       1.207817
min       0.047030
25%       1.509654
50%       2.210274
75%       2.990614
max       7.710540
Name: % error, dtype: float64",4
107,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=10)",Performance,0.5,"gvn                 23.427424
instcombine         12.186837
ipsccp               5.529047
print_used_types     0.255730
dtype: float64","count    88.000000
mean      2.300398
std       1.263130
min       0.125712
25%       1.441422
50%       2.150444
75%       3.001386
max       8.096451
Name: % error, dtype: float64",4
108,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.5,"gvn                 13.811914
instcombine          6.104779
ipsccp               3.801815
print_used_types     1.988065
dtype: float64","count    88.000000
mean      2.356478
std       1.322272
min       0.042543
25%       1.499593
50%       2.182180
75%       3.229667
max       6.222365
Name: % error, dtype: float64",4
109,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",RandomForestRegressor(),Performance,0.5,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    88.000000
mean      2.425644
std       1.366835
min       0.031511
25%       1.244173
50%       2.393874
75%       3.221258
max       5.989923
Name: % error, dtype: float64",4
110,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",GradientBoostingRegressor(),Performance,0.5,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    88.000000
mean      2.451442
std       1.335564
min       0.049915
25%       1.354562
50%       2.360098
75%       3.345381
max       5.964551
Name: % error, dtype: float64",4
111,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",DecisionTreeRegressor(),Performance,0.5,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    88.000000
mean      2.469643
std       1.348452
min       0.016604
25%       1.387605
50%       2.386043
75%       3.335215
max       6.157091
Name: % error, dtype: float64",4
112,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.6,"gvn                 24.433901
instcombine         11.755932
ipsccp               6.367502
print_used_types     1.105184
dtype: float64","count    70.000000
mean      2.361574
std       1.171404
min       0.004939
25%       1.564351
50%       2.265550
75%       3.247681
max       5.097253
Name: % error, dtype: float64",4
113,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","Lasso(alpha=0.1, max_iter=10)",Performance,0.6,"gvn                 24.034040
instcombine         11.458492
ipsccp               5.990348
print_used_types     0.663097
dtype: float64","count    70.000000
mean      2.357730
std       1.188821
min       0.175206
25%       1.590297
50%       2.279134
75%       3.074814
max       5.298906
Name: % error, dtype: float64",4
114,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",Ridge(alpha=0.3),Performance,0.6,"gvn                 24.136621
instcombine         11.574364
ipsccp               6.390217
print_used_types     1.104510
dtype: float64","count    70.000000
mean      2.363237
std       1.183769
min       0.096212
25%       1.533699
50%       2.239793
75%       3.198407
max       5.203566
Name: % error, dtype: float64",4
115,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=10)",Performance,0.6,"gvn                 24.034040
instcombine         11.458492
ipsccp               5.990348
print_used_types     0.663097
dtype: float64","count    70.000000
mean      2.357730
std       1.188821
min       0.175206
25%       1.590297
50%       2.279134
75%       3.074814
max       5.298906
Name: % error, dtype: float64",4
116,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.6,"gvn                 13.664093
instcombine          6.266289
ipsccp               3.489173
print_used_types     1.826339
dtype: float64","count    70.000000
mean      2.345916
std       1.254393
min       0.115798
25%       1.385697
50%       2.272548
75%       3.103299
max       5.154315
Name: % error, dtype: float64",4
117,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",RandomForestRegressor(),Performance,0.6,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    70.000000
mean      2.375941
std       1.238227
min       0.179824
25%       1.441252
50%       2.450937
75%       3.067721
max       5.318240
Name: % error, dtype: float64",4
118,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",GradientBoostingRegressor(),Performance,0.6,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    70.000000
mean      2.375711
std       1.245588
min       0.098799
25%       1.420313
50%       2.361702
75%       3.053674
max       5.486512
Name: % error, dtype: float64",4
119,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",DecisionTreeRegressor(),Performance,0.6,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    70.000000
mean      2.376473
std       1.251313
min       0.078221
25%       1.418031
50%       2.369095
75%       3.074097
max       5.535192
Name: % error, dtype: float64",4
120,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.7,"gvn                 23.756851
instcombine         12.395711
ipsccp               5.765362
print_used_types     1.272930
dtype: float64","count    53.000000
mean      2.259131
std       1.086216
min       0.067823
25%       1.636760
50%       2.166881
75%       2.878685
max       4.934053
Name: % error, dtype: float64",4
121,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","Lasso(alpha=0.1, max_iter=10)",Performance,0.7,"gvn                 23.302419
instcombine         12.040125
ipsccp               5.391027
print_used_types     0.810027
dtype: float64","count    53.000000
mean      2.260842
std       1.136706
min       0.061285
25%       1.597696
50%       2.147587
75%       2.807188
max       5.166856
Name: % error, dtype: float64",4
122,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",Ridge(alpha=0.5),Performance,0.7,"gvn                 23.317475
instcombine         12.089759
ipsccp               5.806413
print_used_types     1.254052
dtype: float64","count    53.000000
mean      2.262910
std       1.143205
min       0.001176
25%       1.530267
50%       2.106725
75%       2.844658
max       5.101208
Name: % error, dtype: float64",4
123,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=10)",Performance,0.7,"gvn                 23.302419
instcombine         12.040125
ipsccp               5.391027
print_used_types     0.810027
dtype: float64","count    53.000000
mean      2.260842
std       1.136706
min       0.061285
25%       1.597696
50%       2.147587
75%       2.807188
max       5.166856
Name: % error, dtype: float64",4
124,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.7,"gvn                 13.206173
instcombine          6.610275
ipsccp               2.513489
print_used_types     1.484393
dtype: float64","count    53.000000
mean      2.150363
std       1.098605
min       0.053581
25%       1.278297
50%       2.013146
75%       2.998622
max       4.454701
Name: % error, dtype: float64",4
125,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",RandomForestRegressor(),Performance,0.7,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    53.000000
mean      2.175964
std       1.169324
min       0.148435
25%       1.397533
50%       2.230190
75%       2.950729
max       4.984694
Name: % error, dtype: float64",4
126,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",GradientBoostingRegressor(),Performance,0.7,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    53.000000
mean      2.182627
std       1.163142
min       0.105288
25%       1.381852
50%       2.263698
75%       2.918920
max       4.717847
Name: % error, dtype: float64",4
127,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",DecisionTreeRegressor(),Performance,0.7,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    53.000000
mean      2.180833
std       1.173204
min       0.058529
25%       1.391762
50%       2.248435
75%       2.933409
max       4.767736
Name: % error, dtype: float64",4
128,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.8,"gvn                 23.751922
instcombine         12.607023
ipsccp               5.935354
print_used_types     1.151914
dtype: float64","count    35.000000
mean      2.335419
std       1.097312
min       0.206234
25%       1.505431
50%       2.136818
75%       3.119503
max       4.788714
Name: % error, dtype: float64",4
129,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","Lasso(alpha=0.2, max_iter=10)",Performance,0.8,"gvn                 22.908194
instcombine         11.962080
ipsccp               5.083337
print_used_types     0.138969
dtype: float64","count    35.000000
mean      2.317246
std       1.244142
min       0.136983
25%       1.481455
50%       2.355765
75%       3.037656
max       5.246416
Name: % error, dtype: float64",4
130,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",Ridge(alpha=0.5),Performance,0.8,"gvn                 23.393411
instcombine         12.374928
ipsccp               5.949297
print_used_types     1.122796
dtype: float64","count    35.000000
mean      2.334289
std       1.155310
min       0.075370
25%       1.485731
50%       2.198706
75%       3.162086
max       4.926128
Name: % error, dtype: float64",4
131,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","ElasticNet(alpha=0.2, l1_ratio=1.0, max_iter=10)",Performance,0.8,"gvn                 22.908194
instcombine         11.962080
ipsccp               5.083337
print_used_types     0.138969
dtype: float64","count    35.000000
mean      2.317246
std       1.244142
min       0.136983
25%       1.481455
50%       2.355765
75%       3.037656
max       5.246416
Name: % error, dtype: float64",4
132,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.8,"gvn                 1.720427e+14
instcombine         4.661483e+13
print_used_types    1.017476e+13
ipsccp              9.830363e+12
dtype: float64","count    35.000000
mean      2.204678
std       1.136899
min       0.027881
25%       1.358658
50%       1.998024
75%       3.136761
max       4.288306
Name: % error, dtype: float64",4
133,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",RandomForestRegressor(),Performance,0.8,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    35.000000
mean      2.176835
std       1.150153
min       0.093463
25%       1.446424
50%       2.032092
75%       3.098547
max       4.731115
Name: % error, dtype: float64",4
134,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",GradientBoostingRegressor(),Performance,0.8,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    35.000000
mean      2.202679
std       1.133333
min       0.358491
25%       1.346789
50%       2.032028
75%       3.172169
max       4.406734
Name: % error, dtype: float64",4
135,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",DecisionTreeRegressor(),Performance,0.8,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    35.000000
mean      2.202358
std       1.134879
min       0.367305
25%       1.351184
50%       2.035156
75%       3.170033
max       4.427636
Name: % error, dtype: float64",4
136,LinearRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.9,"gvn                 23.709332
instcombine         12.926736
ipsccp               5.315535
print_used_types     0.913116
dtype: float64","count    18.000000
mean      2.629298
std       1.042873
min       1.010389
25%       1.841154
50%       2.490001
75%       3.029775
max       4.714817
Name: % error, dtype: float64",4
137,Lasso,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","Lasso(alpha=0.1, max_iter=10)",Performance,0.9,"gvn                 23.316347
instcombine         12.647910
ipsccp               4.860947
print_used_types     0.427924
dtype: float64","count    18.000000
mean      2.655457
std       1.124887
min       0.717803
25%       1.904193
50%       2.627950
75%       3.030773
max       4.893495
Name: % error, dtype: float64",4
138,Ridge,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",Ridge(alpha=0.1),Performance,0.9,"gvn                 23.647159
instcombine         12.888094
ipsccp               5.318173
print_used_types     0.911015
dtype: float64","count    18.000000
mean      2.632050
std       1.050843
min       0.987413
25%       1.839268
50%       2.504437
75%       3.034543
max       4.722096
Name: % error, dtype: float64",4
139,ElasticNet,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')","ElasticNet(alpha=0.1, l1_ratio=1.0, max_iter=10)",Performance,0.9,"gvn                 23.316347
instcombine         12.647910
ipsccp               4.860947
print_used_types     0.427924
dtype: float64","count    18.000000
mean      2.655457
std       1.124887
min       0.717803
25%       1.904193
50%       2.627950
75%       3.030773
max       4.893495
Name: % error, dtype: float64",4
140,PolynomialRegression,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",LinearRegression(),Performance,0.9,"instcombine         1.607998e+15
ipsccp              5.024631e+14
gvn                 1.687036e+14
print_used_types    6.240757e+13
dtype: float64","count    18.000000
mean      2.547365
std       1.192218
min       0.189297
25%       1.766161
50%       2.517500
75%       3.419860
max       4.466489
Name: % error, dtype: float64",4
141,RandomForest,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",RandomForestRegressor(),Performance,0.9,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    18.000000
mean      2.513376
std       1.060951
min       0.260848
25%       1.863830
50%       2.546313
75%       3.503069
max       4.015812
Name: % error, dtype: float64",4
142,GradientBoostingTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",GradientBoostingRegressor(),Performance,0.9,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    18.000000
mean      2.508759
std       1.048056
min       0.250787
25%       1.869344
50%       2.557045
75%       3.468845
max       3.932091
Name: % error, dtype: float64",4
143,DecisionTree,False,DecisionTree,"Index(['gvn', 'ipsccp', 'instcombine', 'print_used_types'], dtype='object')",DecisionTreeRegressor(),Performance,0.9,"gvn                NaN
ipsccp             NaN
instcombine        NaN
print_used_types   NaN
Name: % error, dtype: float64","count    18.000000
mean      2.506130
std       1.045374
min       0.263707
25%       1.860800
50%       2.558790
75%       3.474412
max       3.916783
Name: % error, dtype: float64",4
